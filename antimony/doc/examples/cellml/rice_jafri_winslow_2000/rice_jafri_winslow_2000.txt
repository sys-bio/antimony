//Created by libAntimony v1.3
model rice_jafri_winslow_2000_version02__environment(time_)
end

model rice_jafri_winslow_2000_version02__cell_geometry(A_cap, V_myo, V_JSR, V_NSR, V_SS)

  // Variable initializations:
  A_cap = 1.534E-4;
  V_myo = 25.84E-6;
  V_JSR = 0.16E-6;
  V_NSR = 1.40E-6;
  V_SS = 0.495E-6;
end

model rice_jafri_winslow_2000_version02__membrane(V, R, T, F, time_, i_Na, i_Ca, i_Ca_K, i_K, i_K1, i_NaCa, i_Kp, i_p_Ca, i_Na_b, i_Ca_b, i_NaK, i_ns_Ca)

  // Rate Rules:
  V' = -1.0 / Cm * ( i_Na + i_Ca + i_Ca_K + i_K + i_K1 + i_Kp + i_NaCa + i_NaK + i_ns_Ca + i_p_Ca + i_Ca_b + i_Na_b );

  // Variable initializations:
  V = -84.1638;
  R = 8.314;
  T = 310.0;
  F = 96.5;
  Cm = 1.0;
end

model rice_jafri_winslow_2000_version02__fast_sodium_current_m_gate(m, V, time_)

  // Assignment Rules:
  alpha_m := 0.32 * (( V + 47.13 ) / ( 1.0 - exp( -0.1 * ( V + 47.13 ))));
  beta_m := 0.08 * exp(-( V ) / 11.0 );

  // Rate Rules:
  m' = alpha_m * ( 1.0 - m ) - beta_m * m;

  // Variable initializations:
  m = 0.0326174;
end

model rice_jafri_winslow_2000_version02__fast_sodium_current_h_gate(h, V, time_)

  // Assignment Rules:
  alpha_h := piecewise( 0.135 * exp(( 80.0 + V ) / -6.8 ) , V < -40.0 , 0.0 );
  beta_h := piecewise( 3.56 * exp( 0.079 * V ) + 310000.0 * exp( 0.35 * V ) , V < -40.0 , 1.0 / ( 0.13 * ( 1.0 + exp(-(( V + 10.66 )) / 11.1 ))) );

  // Rate Rules:
  h' = alpha_h * ( 1.0 - h ) - beta_h * h;

  // Variable initializations:
  h = 0.962369;
end

model rice_jafri_winslow_2000_version02__fast_sodium_current_j_gate(j, V, time_)

  // Assignment Rules:
  alpha_j := piecewise( ( -127140.0 * exp( 0.2444 * V ) - 0.00003474 * exp( -0.04391 * V )) * (( V + 37.78 ) / ( 1.0 + exp( 0.311 * ( V + 79.23 )))) , V < -40.0 , 0.0 );
  beta_j := piecewise( 0.1212 * exp( -0.01052 * V ) / ( 1.0 + exp( -0.1378 * ( V + 40.14 ))) , V < -40.0 , 0.3 * exp( -0.0000002535 * V ) / ( 1.0 + exp( -0.1 * ( V + 32.0 ))) );

  // Rate Rules:
  j' = alpha_j * ( 1.0 - j ) - beta_j * j;

  // Variable initializations:
  j = 0.975658;
end

model rice_jafri_winslow_2000_version02__fast_sodium_current(i_Na, E_Na, time_, V, R, T, F, Nai, Nao, m, h, j)

  // Sub-modules, and any changes to those submodules:
  fast_sodium_current_m_gate: rice_jafri_winslow_2000_version02__fast_sodium_current_m_gate(m, V, time_);
  fast_sodium_current_h_gate: rice_jafri_winslow_2000_version02__fast_sodium_current_h_gate(h, V, time_);
  fast_sodium_current_j_gate: rice_jafri_winslow_2000_version02__fast_sodium_current_j_gate(j, V, time_);

  // Assignment Rules:
  i_Na := g_Na * power( m , 3.0 ) * h * j * ( V - E_Na );
  E_Na := R * T / F * ln( Nao / Nai );

  // Variable initializations:
  g_Na = 12.8;
end

model rice_jafri_winslow_2000_version02__time_dependent_potassium_current_X_gate(X, V, time_)

  // Assignment Rules:
  alpha_X := 0.0000719 * ( V + 30.0 ) / ( 1.0 - exp( -0.148 * ( V + 30.0 )));
  beta_X := 0.000131 * ( V + 30.0 ) / ( -1.0 + exp( 0.0687 * ( V + 30.0 )));

  // Rate Rules:
  X' = alpha_X * ( 1.0 - X ) - beta_X * X;

  // Variable initializations:
  X = 0.000337175;
end

model rice_jafri_winslow_2000_version02__time_dependent_potassium_current_Xi_gate(Xi, V, time_)

  // Assignment Rules:
  Xi := 1.0 / ( 1.0 + exp(( V - 40.0 ) / 40.0 ));
end

model rice_jafri_winslow_2000_version02__time_dependent_potassium_current(i_K, time_, V, Ko, Ki, Nao, Nai, R, T, F, X, Xi)

  // Sub-modules, and any changes to those submodules:
  time_dependent_potassium_current_X_gate: rice_jafri_winslow_2000_version02__time_dependent_potassium_current_X_gate(X, V, time_);
  time_dependent_potassium_current_Xi_gate: rice_jafri_winslow_2000_version02__time_dependent_potassium_current_Xi_gate(Xi, V, time_);

  // Assignment Rules:
  i_K := g_K * Xi * power( X , 2.0 ) * ( V - E_K );
  g_K := 0.1128 * root( Ko / 5.4 );
  E_K := R * T / F * ln(( Ko + PNa_K * Nao ) / ( Ki + PNa_K * Nai ));

  // Variable initializations:
  PNa_K = 0.01833;
end

model rice_jafri_winslow_2000_version02__time_independent_potassium_current_K1_gate(K1_infinity, V, time_, E_K1)

  // Assignment Rules:
  K1_infinity := alpha_K1 / ( alpha_K1 + beta_K1 );
  alpha_K1 := 1.02 / ( 1.0 + exp( 0.2385 * ( V - ( E_K1 + 59.215 ))));
  beta_K1 := ( 0.49124 * exp( 0.08032 * ( V - E_K1 + 5.476 )) + exp( 0.06175 * ( V - E_K1 - 594.31 ))) / ( 1.0 + exp( -0.5143 * ( V - E_K1 + 4.753 )));
end

model rice_jafri_winslow_2000_version02__time_independent_potassium_current(i_K1, E_K1, time_, V, Ko, Ki, R, T, F, K1_infinity)

  // Sub-modules, and any changes to those submodules:
  time_independent_potassium_current_K1_gate: rice_jafri_winslow_2000_version02__time_independent_potassium_current_K1_gate(K1_infinity, V, time_, E_K1);

  // Assignment Rules:
  i_K1 := g_K1 * K1_infinity * ( V - E_K1 );
  E_K1 := R * T / F * ln( Ko / Ki );
  g_K1 := 0.75 * root( Ko / 5.4 );
end

model rice_jafri_winslow_2000_version02__plateau_potassium_current(i_Kp, time_, V, E_K1)

  // Assignment Rules:
  i_Kp := g_Kp * Kp * ( V - E_Kp );
  E_Kp := E_K1;
  Kp := 1.0 / ( 1.0 + exp(( 7.488 - V ) / 5.98 ));

  // Variable initializations:
  g_Kp = 0.00828;
end

model rice_jafri_winslow_2000_version02__Na_Ca_exchanger(i_NaCa, time_, V, R, T, F, Nai, Nao, Cai, Cao)

  // Assignment Rules:
  i_NaCa := k_NaCa * ( 1.0 / (power( K_mNa , 3.0 ) + power( Nao , 3.0 ))) * ( 1.0 / ( K_mCa + Cao )) * ( 1.0 / ( 1.0 + k_sat * exp(( eta - 1.0 ) * ( V * F / ( R * T ))))) * (exp( eta * ( V * F / ( R * T ))) * power( Nai , 3.0 ) * Cao - exp(( eta - 1.0 ) * ( V * F / ( R * T ))) * power( Nao , 3.0 ) * Cai );

  // Variable initializations:
  k_NaCa = 9000.0;
  K_mNa = 87.5;
  K_mCa = 1.38;
  k_sat = 0.1;
  eta = 0.35;
end

model rice_jafri_winslow_2000_version02__sodium_potassium_pump(i_NaK, time_, V, R, T, F, Nai, Nao, Ko)

  // Assignment Rules:
  i_NaK := I_NaK * f_NaK * ( 1.0 / ( 1.0 + power( K_mNai / Nai , 1.5 ))) * ( Ko / ( Ko + K_mKo ));
  f_NaK := 1.0 / ( 1.0 + 0.1245 * exp( -0.1 * ( V * F / ( R * T ))) + 0.0365 * sigma * exp(-(( V * F / ( R * T )))));
  sigma := 1.0 / 7.0 * (exp( Nao / 67.3 ) - 1.0 );

  // Variable initializations:
  I_NaK = 2.47;
  K_mNai = 10.0;
  K_mKo = 1.5;
end

model rice_jafri_winslow_2000_version02__non_specific_calcium_activated_current(i_ns_Ca, i_ns_Na, i_ns_K, time_, Cai, Nai, Ki, Nao, Ko, V, R, T, F)

  // Assignment Rules:
  i_ns_Ca := i_ns_Na + i_ns_K;
  i_ns_Na := I_ns_Na * ( 1.0 / ( 1.0 + power( K_m_ns_Ca / Cai , 3.0 )));
  i_ns_K := I_ns_K * ( 1.0 / ( 1.0 + power( K_m_ns_Ca / Cai , 3.0 )));
  I_ns_Na := Pns_Na * ( V * power( F , 2.0 ) / ( R * T )) * (( 0.75 * Nai * exp( V * F / ( R * T )) - 0.75 * Nao ) / (exp( V * F / ( R * T )) - 1.0 ));
  I_ns_K := Pns_K * ( V * power( F , 2.0 ) / ( R * T )) * (( 0.75 * Ki * exp( V * F / ( R * T )) - 0.75 * Ko ) / (exp( V * F / ( R * T )) - 1.0 ));

  // Variable initializations:
  K_m_ns_Ca = 1.2;
  Pns_Na = 0.0;
  Pns_K = 0.0;
end

model rice_jafri_winslow_2000_version02__sarcolemmal_calcium_pump(i_p_Ca, time_, Cai)

  // Assignment Rules:
  i_p_Ca := I_pCa * ( Cai / ( K_mpCa + Cai ));

  // Variable initializations:
  K_mpCa = 0.5;
  I_pCa = 0.575;
end

model rice_jafri_winslow_2000_version02__calcium_background_current(i_Ca_b, time_, V, R, T, F, Cai, Cao)

  // Assignment Rules:
  i_Ca_b := g_Cab * ( V - E_CaN );
  E_CaN := R * T / ( 2.0 * F ) * ln( Cao / Cai );

  // Variable initializations:
  g_Cab = 0.006032;
end

model rice_jafri_winslow_2000_version02__sodium_background_current(i_Na_b, time_, V, E_Na)

  // Assignment Rules:
  i_Na_b := g_Nab * ( V - E_NaN );
  E_NaN := E_Na;

  // Variable initializations:
  g_Nab = 0.00141;
end

model rice_jafri_winslow_2000_version02__L_type_Ca_channel_y_gate(y, V, time_)

  // Assignment Rules:
  y_infinity := 1.0 / ( 1.0 + exp(( V + 55.0 ) / 7.5 )) + 0.1 / ( 1.0 + exp((-( V ) + 21.0 ) / 6.0 ));
  tau_y := 20.0 + 600.0 / ( 1.0 + exp(( V + 30.0 ) / 9.5 ));

  // Rate Rules:
  y' = ( y_infinity - y ) / tau_y;

  // Variable initializations:
  y = 0.862010;
end

model rice_jafri_winslow_2000_version02__L_type_Ca_channel(i_Ca, i_Ca_K, time_, V, Ca_SS, Cao, Ko, Ki, R, T, F, y)

  // Sub-modules, and any changes to those submodules:
  L_type_Ca_channel_y_gate: rice_jafri_winslow_2000_version02__L_type_Ca_channel_y_gate(y, V, time_);

  // Assignment Rules:
  i_Ca := i_Ca_max * y * ( O + O_Ca );
  i_Ca_K := p_k * y * ( O + O_Ca ) * ( V * power( F , 2.0 ) / ( R * T )) * (( Ki * exp( V * F / ( R * T )) - Ko ) / (exp( V * F / ( R * T )) - 1.0 ));
  p_k := P_K / ( 1.0 + i_Ca_max / i_Ca_half );
  i_Ca_max := power( P_Ca , 4.0 ) * ( V * power( F , 2.0 ) / ( R * T )) * (( 0.001 * exp( 2.0 * V * F / ( R * T )) - 0.341 * Cao ) / (exp( 2.0 * V * F / ( R * T )) - 1.0 ));
  alpha := 0.4 * exp(( V + 12.0 ) / 10.0 );
  beta := 0.05 * exp(-(( V + 12.0 )) / 13.0 );
  gamma := 0.5625 * Ca_SS;
  alpha_a := alpha * a;
  beta_b := beta / b;

  // Rate Rules:
  O' = f * C4 - g * O;
  O_Ca' = f_ * C_Ca4 - g_ * O_Ca;
  C0' = beta * C1 + omega * C_Ca0 - ( 4.0 * alpha + gamma ) * C0;
  C1' = 4.0 * alpha * C0 + 2.0 * beta * C2 + omega / b * C_Ca1 - ( beta + 3.0 * alpha + gamma * a ) * C1;
  C2' = 3.0 * alpha * C1 + 3.0 * beta * C3 + omega / power( b , 2.0 ) * C_Ca2 - ( beta * 2.0 + 2.0 * alpha + gamma * power( a , 2.0 )) * C2;
  C3' = 2.0 * alpha * C2 + 4.0 * beta * C4 + omega / power( b , 3.0 ) * C_Ca3 - ( beta * 3.0 + alpha + gamma * power( a , 3.0 )) * C3;
  C4' = alpha * C3 + g * O + omega / power( b , 4.0 ) * C_Ca4 - ( beta * 4.0 + f + gamma * power( a , 4.0 )) * C4;
  C_Ca0' = beta_b * C_Ca1 + gamma * C_Ca0 - ( 4.0 * alpha_a + omega ) * C_Ca0;
  C_Ca1' = 4.0 * alpha_a * C_Ca0 + 2.0 * beta_b * C_Ca2 + gamma * a * C1 - ( beta_b + 3.0 * alpha_a + omega / b ) * C_Ca1;
  C_Ca2' = 3.0 * alpha_a * C_Ca1 + 3.0 * beta_b * C_Ca3 + gamma * power( a , 2.0 ) * C2 - ( beta_b * 2.0 + 2.0 * alpha_a + omega / power( b , 2.0 )) * C_Ca2;
  C_Ca3' = 2.0 * alpha_a * C_Ca2 + 4.0 * beta_b * C_Ca4 + gamma * power( a , 3.0 ) * C3 - ( beta_b * 3.0 + alpha_a + omega / power( b , 3.0 )) * C_Ca3;
  C_Ca4' = alpha_a * C_Ca3 + g_ * O_Ca + gamma * power( a , 4.0 ) * C4 - ( beta_b * 4.0 + f_ + omega / power( b , 4.0 )) * C_Ca4;

  // Variable initializations:
  P_Ca = 4.32E-3;
  P_K = 1.11E-11;
  i_Ca_half = -2.16;
  O = 4.21370E-19;
  O_Ca = 0.0;
  a = 2.0;
  b = 2.0;
  g = 2.0;
  f = 0.3;
  g_ = 0.0;
  f_ = 0.0;
  omega = 0.01;
  C0 = 0.998666;
  C1 = 1.63594E-4;
  C2 = 1.00495E-8;
  C3 = 2.74371E-13;
  C4 = 2.80908E-18;
  C_Ca0 = 0.00272826;
  C_Ca1 = 7.67674E-7;
  C_Ca2 = 1.88635E-10;
  C_Ca3 = 2.06007E-14;
  C_Ca4 = 8.43672E-19;
end

model rice_jafri_winslow_2000_version02__RyR_channel_states(P_O1, P_O2, time_, Ca_SS)

  // Rate Rules:
  P_O1' = k_a_plus * power( Ca_SS , n ) * P_C1 - ( k_a_minus * P_O1 + k_b_plus * power( Ca_SS , m ) * P_O1 + k_c_plus * P_O1 ) + k_b_minus * P_O2 + k_c_minus * P_C2;
  P_O2' = k_b_plus * power( Ca_SS , m ) * P_O1 - k_b_minus * P_O2;
  P_C1' = -( k_a_plus ) * power( Ca_SS , n ) * P_C1 + k_a_minus * P_O1;
  P_C2' = k_c_plus * P_O1 - k_c_minus * P_C2;

  // Variable initializations:
  P_O1 = 0.428917E-3;
  P_O2 = 0.487455E-9;
  P_C1 = 0.637931;
  P_C2 = 0.361643;
  k_a_plus = 0.01215;
  k_a_minus = 0.1425;
  k_b_plus = 0.00405;
  k_b_minus = 1.930;
  k_c_plus = 0.010;
  k_c_minus = 0.0008;
  n = 4.0;
  m = 3.0;
end

model rice_jafri_winslow_2000_version02__SERCA_pump(J_up, time_, Ca_NSR, Cai)

  // Assignment Rules:
  J_up := ( Vmax_f * fb - Vmax_r * rb ) / ( 1.0 + fb + rb );
  fb := power( Cai / k_fb , n_fb );
  rb := power( Ca_NSR / k_rb , n_rb );

  // Variable initializations:
  k_fb = 0.24;
  k_rb = 1.64;
  n_fb = 1.4;
end

model rice_jafri_winslow_2000_version02__intracellular_Ca_fluxes(J_rel, J_trpn, J_tr, J_xfer, HTRPN_tot, LTRPN_tot, HTRPNCa, LTRPNCa, k_htrpn_plus, k_htrpn_minus, k_ltrpn_plus, k_ltrpn_minus, time_, P_O1, P_O2, Cai, Ca_SS, Ca_NSR, Ca_JSR)

  // Assignment Rules:
  J_rel := v1 * ( P_O1 + P_O2 ) * ( Ca_JSR - Ca_SS );
  J_trpn := k_htrpn_plus * Cai * ( HTRPN_tot - HTRPNCa - k_htrpn_minus * HTRPNCa ) + k_ltrpn_plus * Cai * ( LTRPN_tot - LTRPNCa - k_ltrpn_minus * LTRPNCa );
  J_tr := ( Ca_NSR - Ca_JSR ) / tau_tr;
  J_xfer := ( Ca_SS - Cai ) / tau_xfer;

  // Variable initializations:
  v1 = 3.6;
  tau_tr = 0.5747;
  tau_xfer = 9.09;
end

model rice_jafri_winslow_2000_version02__intracellular_ionic_concentrations(Nai, Nao, Ki, Ko, Cai, Cao, Ca_SS, Ca_NSR, Ca_JSR, time_, J_rel, J_up, J_tr, J_xfer, J_trpn, F, i_Na, i_Na_b, i_ns_Na, i_NaCa, i_NaK, i_Ca, i_p_Ca, i_Ca_b, i_Ca_K, i_K, i_K1, i_Kp, i_ns_K, A_cap, V_myo, V_JSR, V_NSR, V_SS)

  // Assignment Rules:
  betai := 1.0 / ( 1.0 + CMDN_tot * K_mCMDN / power( K_mCMDN + Cai , 2.0 ));
  beta_SS := 1.0 / ( 1.0 + CMDN_tot * K_mCMDN / power( K_mCMDN + Ca_SS , 2.0 ));
  beta_JSR := 1.0 / ( 1.0 + CSQN_tot * K_mCSQN / power( K_mCSQN + Ca_JSR , 2.0 ));

  // Rate Rules:
  Nai' = -(( i_Na + i_Na_b + i_ns_Na + i_NaCa * 3.0 + i_NaK * 3.0 )) * ( A_cap / ( V_myo * F ));
  Ki' = -(( i_Ca_K + i_K + i_K1 + i_Kp + i_ns_K + -(( i_NaK * 2.0 )))) * ( A_cap / ( V_myo * F ));
  Cai' = betai * -(( J_xfer + J_up + J_trpn + ( i_Ca_b + -(( 2.0 * i_NaCa )) + i_p_Ca ) * ( A_cap / ( 2.0 * V_myo * F ))));
  Ca_SS' = beta_SS * ( J_rel * ( V_JSR / V_SS ) - J_xfer * ( V_myo / V_SS ) - i_Ca * ( A_cap / ( 2.0 * V_SS * F )));
  Ca_NSR' = J_up * ( V_myo / V_NSR ) - J_tr * ( V_JSR / V_NSR );
  Ca_JSR' = beta_JSR * ( J_tr - J_rel );

  // Variable initializations:
  Nao = 140.0;
  Ko = 5.4;
  Cao = 1.8;
  K_mCMDN = 2.38;
  K_mCSQN = 0.8;
  CSQN_tot = 15.0;
  CMDN_tot = 50.0;
end

model rice_jafri_winslow_2000_version02__troponin(k_htrpn_plus, k_htrpn_minus, k_ltrpn_plus, k_ltrpn_minus, HTRPN_tot, LTRPN_tot, HTRPNCa, LTRPNCa, Force_norm, Cai, time_)

  // Rate Rules:
  HTRPNCa' = k_htrpn_plus * Cai * ( HTRPN_tot - HTRPNCa ) - k_htrpn_minus * HTRPNCa;
  LTRPNCa' = k_ltrpn_plus * Cai * ( LTRPN_tot - LTRPNCa ) - k_ltrpn_minus * LTRPNCa * ( 0.333 + 0.667 * ( 1.0 - Force_norm ));

  // Variable initializations:
  k_htrpn_plus = 1.0E8;
  k_htrpn_minus = 0.33;
  k_ltrpn_plus = 4.0E7;
  k_ltrpn_minus = 40.0;
  HTRPN_tot = 140.0;
  LTRPN_tot = 70.0;
  HTRPNCa = 0.132944;
  LTRPNCa = 0.4068232;
end

model rice_jafri_winslow_2000_version02__tropomyosin_cross_bridges(f_01, f_12, f_23, g_XB, SL, P1, P2, P3, N1, time_, k_ltrpn_plus, k_ltrpn_minus, LTRPN_tot, LTRPNCa)

  // Assignment Rules:
  f_01 := 3.0 * f_XB;
  f_12 := 10.0 * f_XB;
  f_23 := 7.0 * f_XB;
  g_XB_SL := g_XB * ( 1.0 + power( 1.0 - SL_norm , 1.6 ));
  g_01_SL := 1.0 * g_XB_SL;
  g_12_SL := 2.0 * g_XB_SL;
  g_23_SL := 3.0 * g_XB_SL;
  SL_norm := ( SL - 1.7 ) / 0.7;
  N_trop := 3.5 + 2.5 * SL_norm;
  k_trop_np := k_trop_pn * power( LTRPNCa / LTRPN_tot / K_trop_half , N_trop );
  K_trop_half := power( 1.0 + K_trop_Ca / ( 1.7 - 0.9 * SL_norm ), -1.0 );
  K_trop_Ca := k_ltrpn_minus / k_ltrpn_plus;

  // Rate Rules:
  P1' = -((( k_trop_pn + f_12 + g_01_SL ) * P1 )) + k_trop_np * N1 + k_trop_np * N1 + f_01 * P0 + g_12_SL * P2;
  P2' = -((( f_23 + g_12_SL ) * P2 )) + f_12 * P1 + g_23_SL * P3;
  P3' = -( g_23_SL ) * P3 + f_23 * P2;
  N0' = k_trop_pn * P0 - k_trop_np * N0 + g_01_SL * N1;
  P0' = -((( k_trop_pn + f_01 ) * P0 )) + k_trop_np * N0 + g_01_SL * P1;

  // Variable initializations:
  g_XB = 30.0;
  SL = 2.15;
  P1 = 1.47026E-6;
  P2 = 1.83527E-6;
  P3 = 1.06786E-6;
  N1 = 3.88506E-6;
  f_XB = 10.0;
  N0 = 0.99999027;
  P0 = 1.46758E-6;
end

model rice_jafri_winslow_2000_version02__force_computation(Force_norm, time_, SL, P1, P2, P3, N1, f_01, f_12, f_23, g_XB)

  // Assignment Rules:
  Force_norm := phi_SL * (( P1 + N1 + 2.0 * P2 + 3.0 * P3 ) / Force_max );
  Force := zeta * Force_norm;
  Force_max := P1_max + 2.0 * P2_max + 3.0 * P3_max;
  phi_SL := piecewise( ( SL - 0.6 ) / 1.4 , ( SL < 2.0) && (SL > 1.7 ), 1.0 , ( SL < 2.2) && (SL > 2.0 ), ( 3.6 - SL ) / 1.4 , ( SL < 2.3) && (SL > 2.2 ) );
  P1_max := f_01 * 2.0 * g_XB * 3.0 * g_XB / ( g_XB * 2.0 * g_XB * 3.0 * g_XB + f_01 * 2.0 * g_XB * 3.0 * g_XB + f_01 * f_12 * 3.0 * g_XB + f_01 * f_12 * f_23 );
  P2_max := f_01 * f_12 * 3.0 * g_XB / ( g_XB * 2.0 * g_XB * 3.0 * g_XB + f_01 * 2.0 * g_XB * 3.0 * g_XB + f_01 * f_12 * 3.0 * g_XB + f_01 * f_12 * f_23 );
  P3_max := f_01 * f_12 * f_23 / ( g_XB * 2.0 * g_XB * 3.0 * g_XB + f_01 * 2.0 * g_XB * 3.0 * g_XB + f_01 * f_12 * 3.0 * g_XB + f_01 * f_12 * f_23 );

  // Variable initializations:
  zeta = 0.1;
end

model rice_jafri_winslow_2000_version02____main()

  // Sub-modules, and any changes to those submodules:
  environment: rice_jafri_winslow_2000_version02__environment(time_);
  cell_geometry: rice_jafri_winslow_2000_version02__cell_geometry(A_cap, V_myo, V_JSR, V_NSR, V_SS);
  membrane: rice_jafri_winslow_2000_version02__membrane(V, R, T, F, time_, i_Na, i_Ca, i_Ca_K, i_K, i_K1, i_NaCa, i_Kp, i_p_Ca, i_Na_b, i_Ca_b, i_NaK, i_ns_Ca);
  fast_sodium_current: rice_jafri_winslow_2000_version02__fast_sodium_current(i_Na, E_Na, time_, V, R, T, F, Nai, Nao, m, h, j);
  time_dependent_potassium_current: rice_jafri_winslow_2000_version02__time_dependent_potassium_current(i_K, time_, V, Ko, Ki, Nao, Nai, R, T, F, X, Xi);
  time_independent_potassium_current: rice_jafri_winslow_2000_version02__time_independent_potassium_current(i_K1, E_K1, time_, V, Ko, Ki, R, T, F, K1_infinity);
  plateau_potassium_current: rice_jafri_winslow_2000_version02__plateau_potassium_current(i_Kp, time_, V, E_K1);
  Na_Ca_exchanger: rice_jafri_winslow_2000_version02__Na_Ca_exchanger(i_NaCa, time_, V, R, T, F, Nai, Nao, Cai, Cao);
  sodium_potassium_pump: rice_jafri_winslow_2000_version02__sodium_potassium_pump(i_NaK, time_, V, R, T, F, Nai, Nao, Ko);
  non_specific_calcium_activated_current: rice_jafri_winslow_2000_version02__non_specific_calcium_activated_current(i_ns_Ca, i_ns_Na, i_ns_K, time_, Cai, Nai, Ki, Nao, Ko, V, R, T, F);
  sarcolemmal_calcium_pump: rice_jafri_winslow_2000_version02__sarcolemmal_calcium_pump(i_p_Ca, time_, Cai);
  calcium_background_current: rice_jafri_winslow_2000_version02__calcium_background_current(i_Ca_b, time_, V, R, T, F, Cai, Cao);
  sodium_background_current: rice_jafri_winslow_2000_version02__sodium_background_current(i_Na_b, time_, V, E_Na);
  L_type_Ca_channel: rice_jafri_winslow_2000_version02__L_type_Ca_channel(i_Ca, i_Ca_K, time_, V, Ca_SS, Cao, Ko, Ki, R, T, F, y);
  RyR_channel_states: rice_jafri_winslow_2000_version02__RyR_channel_states(P_O1, P_O2, time_, Ca_SS);
  SERCA_pump: rice_jafri_winslow_2000_version02__SERCA_pump(J_up, time_, Ca_NSR, Cai);
  intracellular_Ca_fluxes: rice_jafri_winslow_2000_version02__intracellular_Ca_fluxes(J_rel, J_trpn, J_tr, J_xfer, HTRPN_tot, LTRPN_tot, HTRPNCa, LTRPNCa, k_htrpn_plus, k_htrpn_minus, k_ltrpn_plus, k_ltrpn_minus, time_, P_O1, P_O2, Cai, Ca_SS, Ca_NSR, Ca_JSR);
  intracellular_ionic_concentrations: rice_jafri_winslow_2000_version02__intracellular_ionic_concentrations(Nai, Nao, Ki, Ko, Cai, Cao, Ca_SS, Ca_NSR, Ca_JSR, time_, J_rel, J_up, J_tr, J_xfer, J_trpn, F, i_Na, i_Na_b, i_ns_Na, i_NaCa, i_NaK, i_Ca, i_p_Ca, i_Ca_b, i_Ca_K, i_K, i_K1, i_Kp, i_ns_K, A_cap, V_myo, V_JSR, V_NSR, V_SS);
  troponin: rice_jafri_winslow_2000_version02__troponin(k_htrpn_plus, k_htrpn_minus, k_ltrpn_plus, k_ltrpn_minus, HTRPN_tot, LTRPN_tot, HTRPNCa, LTRPNCa, Force_norm, Cai, time_);
  tropomyosin_cross_bridges: rice_jafri_winslow_2000_version02__tropomyosin_cross_bridges(f_01, f_12, f_23, g_XB, SL, P1, P2, P3, N1, time_, k_ltrpn_plus, k_ltrpn_minus, LTRPN_tot, LTRPNCa);
  force_computation: rice_jafri_winslow_2000_version02__force_computation(Force_norm, time_, SL, P1, P2, P3, N1, f_01, f_12, f_23, g_XB);
end
