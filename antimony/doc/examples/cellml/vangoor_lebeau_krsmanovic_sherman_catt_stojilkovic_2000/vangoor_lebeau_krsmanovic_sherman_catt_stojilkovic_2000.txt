//Created by libAntimony v1.4
model vangoor_2000__environment(time_)
end

model vangoor_2000__membrane(V, time_, i_Na, i_Ca_L, i_Ca_T, i_K_dr, i_M, i_ir, i_d)

  // Rate Rules:
  V' = (i_app - (i_Na + i_Ca_L + i_Ca_T + i_K_dr + i_M + i_ir + i_d)) / Cm;

  // Variable initializations:
  V = -60;
  Cm = 14;
  i_app = 15;
end

model vangoor_2000__sodium_current(i_Na, time_, V, A)

  // Assignment Rules:
  i_Na := g_Na * O * (V - V_Na);
  O := power(A, 3 );

  // Variable initializations:
  g_Na = 60;
  V_Na = 60;
end

model vangoor_2000__A(A, k1, k1_, alpha, beta, D, A_, time_)

  // Rate Rules:
  A' = alpha * D + k1_ * A_ - (beta * A + k1 * A);

  // Variable initializations:
  A = 1;
end

model vangoor_2000__A_(A_, k1, k1_, alpha, beta, a, D_, A, time_)

  // Rate Rules:
  A_' = alpha * a * D_ + k1 * A - (beta / a * A_ + k1_ * A_);

  // Variable initializations:
  A_ = 0;
end

model vangoor_2000__D(D, k2, k2_, alpha, beta, A, D_, time_)

  // Rate Rules:
  D' = beta * A + k2_ * D_ - (alpha * D + k2 * D);

  // Variable initializations:
  D = 0;
end

model vangoor_2000__D_(D_, k2, k2_, alpha, beta, a, D, A_, time_)

  // Rate Rules:
  D_' = beta / a * A_ + k2 * D - (alpha * a * D_ + k2_ * D_);

  // Variable initializations:
  D_ = 0;
end

model vangoor_2000__reaction_constants(k1, k1_, k2, k2_, alpha, beta, a, V)

  // Assignment Rules:
  alpha := 10 / (1 + exp(-((V + 6 )) / 10 ));
  beta := 10 / (1 + exp((V + 54.4 ) / 4.6 ));
  a := root(k1 * k2_ / (k1_ * k2));

  // Variable initializations:
  k1 = 0.3;
  k1_ = 0.03;
  k2 = 0.001;
  k2_ = 0.01;
end

model vangoor_2000__L_type_calcium_current_m_gate(m, V, time_)

  // Assignment Rules:
  m_infinity := 1 / (1 + exp(-((V - Vh)) / 12 ));
  tau_m := 5 / (exp((V + 15 ) / 25 ) + exp(-((V + 15 )) / 25 ));

  // Rate Rules:
  m' = (m_infinity - m) / tau_m;

  // Variable initializations:
  m = 0;
  Vh = 40;
end

model vangoor_2000__L_type_calcium_current(i_Ca_L, V_Ca, time_, V, m)

  // Sub-modules, and any changes to those submodules:
  L_type_calcium_current_m_gate: vangoor_2000__L_type_calcium_current_m_gate(m, V, time_);

  // Assignment Rules:
  i_Ca_L := g_Ca_L * power(m, 2 ) * (V - V_Ca);

  // Variable initializations:
  V_Ca = 100;
  g_Ca_L = 1.3;
end

model vangoor_2000__T_type_calcium_current_m_gate(m, V, time_)

  // Assignment Rules:
  m_infinity := 1 / (1 + exp(-((V - 56.1 )) / 10 ));
  tau_m := 7 / (exp((V + 50 ) / 9 ) + exp(-((V + 50 )) / 9 )) + 0.8;

  // Rate Rules:
  m' = (m_infinity - m) / tau_m;

  // Variable initializations:
  m = 0;
end

model vangoor_2000__T_type_calcium_current_h_gate(h, V, time_)

  // Assignment Rules:
  h_infinity := 1 / (1 + exp((V + 86.4 ) / 4.7 ));

  // Rate Rules:
  h' = (h_infinity - h) / tau_h;

  // Variable initializations:
  h = 0;
  tau_h = 22;
end

model vangoor_2000__T_type_calcium_current(i_Ca_T, time_, V, V_Ca, m, h)

  // Sub-modules, and any changes to those submodules:
  T_type_calcium_current_m_gate: vangoor_2000__T_type_calcium_current_m_gate(m, V, time_);
  T_type_calcium_current_h_gate: vangoor_2000__T_type_calcium_current_h_gate(h, V, time_);

  // Assignment Rules:
  i_Ca_T := g_Ca_T * power(m, 2 ) * h * (V - V_Ca);

  // Variable initializations:
  g_Ca_T = 0.94;
end

model vangoor_2000__delayed_rectifier_K_channel_current_n_gate(n, V, time_)

  // Assignment Rules:
  n_infinity := 1 / (1 + exp(-((V + 25 )) / 15 ));
  tau_n := 15 / (exp((V + 30 ) / 15 ) + exp(-((V + 30 )) / 15 )) + 1;

  // Rate Rules:
  n' = (n_infinity - n) / tau_n;

  // Variable initializations:
  n = 0;
end

model vangoor_2000__delayed_rectifier_K_channel_current_h_gate(h, V, time_)

  // Assignment Rules:
  h_infinity := 0.7 / (1 + exp(-((V + 35 )) / 10 )) + 0.3;

  // Rate Rules:
  h' = (h_infinity - h) / tau_h;

  // Variable initializations:
  h = 0;
  tau_h = 1000;
end

model vangoor_2000__delayed_rectifier_K_channel_current(i_K_dr, V_K, time_, V, n, h)

  // Sub-modules, and any changes to those submodules:
  delayed_rectifier_K_channel_current_n_gate: vangoor_2000__delayed_rectifier_K_channel_current_n_gate(n, V, time_);
  delayed_rectifier_K_channel_current_h_gate: vangoor_2000__delayed_rectifier_K_channel_current_h_gate(h, V, time_);

  // Assignment Rules:
  i_K_dr := g_K_dr * power(n, 4 ) * h * (V - V_K);

  // Variable initializations:
  V_K = -80;
  g_K_dr = 20;
end

model vangoor_2000__M_like_K_current_n_gate(n, V, time_)

  // Assignment Rules:
  n_infinity := 1 / (1 + exp(-((V + 37 )) / 4 ));
  tau_n := 80 / (exp((V + 30 ) / 15 ) + exp(-((V + 30 )) / 15 ));

  // Rate Rules:
  n' = (n_infinity - n) / tau_n;

  // Variable initializations:
  n = 0;
end

model vangoor_2000__M_like_K_current(i_M, time_, V, V_K, n)

  // Sub-modules, and any changes to those submodules:
  M_like_K_current_n_gate: vangoor_2000__M_like_K_current_n_gate(n, V, time_);

  // Assignment Rules:
  i_M := g_M * n * (V - V_K);

  // Variable initializations:
  g_M = 4;
end

model vangoor_2000__inward_rectifier_K_current_n_gate(n_infinity, V)

  // Assignment Rules:
  n_infinity := 0.8 * 1 / (1 + exp((V + 80 ) / 12 )) + 0.2;
end

model vangoor_2000__inward_rectifier_K_current(i_ir, time_, V, V_K, n_infinity)

  // Sub-modules, and any changes to those submodules:
  inward_rectifier_K_current_n_gate: vangoor_2000__inward_rectifier_K_current_n_gate(n_infinity, V);

  // Assignment Rules:
  i_ir := g_ir * n_infinity * (V - V_K);

  // Variable initializations:
  g_ir = 1.71;
end

model vangoor_2000__inward_leak_current(i_d, time_, V, V_Ca)

  // Assignment Rules:
  i_d := g_d * (V - V_Ca);

  // Variable initializations:
  g_d = 0.044;
end

model vangoor_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: vangoor_2000__environment(time_);
  membrane: vangoor_2000__membrane(V, time_, i_Na, i_Ca_L, i_Ca_T, i_K_dr, i_M, i_ir, i_d);
  sodium_current: vangoor_2000__sodium_current(i_Na, time_, V, A0);
  A: vangoor_2000__A(A0, k1, k1_, alpha, beta, D0, A_0, time_);
  A_: vangoor_2000__A_(A_0, k1, k1_, alpha, beta, a, D_0, A0, time_);
  D: vangoor_2000__D(D0, k2, k2_, alpha, beta, A0, D_0, time_);
  D_: vangoor_2000__D_(D_0, k2, k2_, alpha, beta, a, D0, A_0, time_);
  reaction_constants: vangoor_2000__reaction_constants(k1, k1_, k2, k2_, alpha, beta, a, V);
  L_type_calcium_current: vangoor_2000__L_type_calcium_current(i_Ca_L, V_Ca, time_, V, m);
  T_type_calcium_current: vangoor_2000__T_type_calcium_current(i_Ca_T, time_, V, V_Ca, m0, h);
  delayed_rectifier_K_channel_current: vangoor_2000__delayed_rectifier_K_channel_current(i_K_dr, V_K, time_, V, n, h0);
  M_like_K_current: vangoor_2000__M_like_K_current(i_M, time_, V, V_K, n0);
  inward_rectifier_K_current: vangoor_2000__inward_rectifier_K_current(i_ir, time_, V, V_K, n_infinity);
  inward_leak_current: vangoor_2000__inward_leak_current(i_d, time_, V, V_Ca);
end
