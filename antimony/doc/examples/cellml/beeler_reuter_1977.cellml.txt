//Created by libAntimony v1.3
model cellmlmod_environment()

  //Other declarations:
  var time;
end

model cellmlmod_membrane()

  // Rate Rules:
  V' = (Istim - (i_Na + i_s + i_x1 + i_K1)) / C

  // Variable initializations:
  V = -84.624;
  C = 0.01;

  //Other declarations:
  var V, C, time, i_Na, i_s, i_x1, i_K1, Istim;
end

model cellmlmod_sodium_current()

  // Assignment Rules:
  i_Na := (g_Na * power(m, 3 ) * h * j + g_Nac) * (V - E_Na)

  // Variable initializations:
  g_Na = 4e-2;
  E_Na = 50;
  g_Nac = 3e-5;

  //Other declarations:
  var i_Na, g_Na, E_Na, g_Nac, time, V, m, h, j;
end

model cellmlmod_sodium_current_m_gate()

  // Assignment Rules:
  alpha_m := -(1 ) * (V + 47 ) / (exp(-(0.1 ) * (V + 47 )) - 1 )
  beta_m := 40  * exp(-(0.056 ) * (V + 72 ))

  // Rate Rules:
  m' = alpha_m * (1  - m) - beta_m * m

  // Variable initializations:
  m = 0.011;

  //Other declarations:
  var m, alpha_m, beta_m, V, time;
end

model cellmlmod_sodium_current_h_gate()

  // Assignment Rules:
  alpha_h := 0.126  * exp(-(0.25 ) * (V + 77 ))
  beta_h := 1.7  / (exp(-(0.082 ) * (V + 22.5 )) + 1 )

  // Rate Rules:
  h' = alpha_h * (1  - h) - beta_h * h

  // Variable initializations:
  h = 0.988;

  //Other declarations:
  var h, alpha_h, beta_h, V, time;
end

model cellmlmod_sodium_current_j_gate()

  // Assignment Rules:
  alpha_j := 0.055  * exp(-(0.25 ) * (V + 78 )) / (exp(-(0.2 ) * (V + 78 )) + 1 )
  beta_j := 0.3  / (exp(-(0.1 ) * (V + 32 )) + 1 )

  // Rate Rules:
  j' = alpha_j * (1  - j) - beta_j * j

  // Variable initializations:
  j = 0.975;

  //Other declarations:
  var j, alpha_j, beta_j, V, time;
end

model cellmlmod_slow_inward_current()

  // Assignment Rules:
  i_s := g_s * d * f * (V - E_s)
  E_s := -(82.3 ) - 13.0287  * ln(Cai * 0.001 )

  // Rate Rules:
  Cai' = -(0.01 ) * i_s / 1  + 0.07  * (0.0001  - Cai)

  // Variable initializations:
  g_s = 9e-4;
  Cai = 1e-4;

  //Other declarations:
  var i_s, g_s, E_s, Cai, time, V, d, f;
end

model cellmlmod_slow_inward_current_d_gate()

  // Assignment Rules:
  alpha_d := 0.095  * exp(-((V - 5 )) / 100 ) / (1  + exp(-((V - 5 )) / 13.89 ))
  beta_d := 0.07  * exp(-((V + 44 )) / 59 ) / (1  + exp((V + 44 ) / 20 ))

  // Rate Rules:
  d' = alpha_d * (1  - d) - beta_d * d

  // Variable initializations:
  d = 0.003;

  //Other declarations:
  var d, alpha_d, beta_d, V, time;
end

model cellmlmod_slow_inward_current_f_gate()

  // Assignment Rules:
  alpha_f := 0.012  * exp(-((V + 28 )) / 125 ) / (1  + exp((V + 28 ) / 6.67 ))
  beta_f := 0.0065  * exp(-((V + 30 )) / 50 ) / (1  + exp(-((V + 30 )) / 5 ))

  // Rate Rules:
  f' = alpha_f * (1  - f) - beta_f * f

  // Variable initializations:
  f = 0.994;

  //Other declarations:
  var f, alpha_f, beta_f, V, time;
end

model cellmlmod_time_dependent_outward_current()

  // Assignment Rules:
  i_x1 := x1 * 8e-3  * (exp(0.04  * (V + 77 )) - 1 ) / exp(0.04  * (V + 35 ))

  //Other declarations:
  var i_x1, time, V, x1;
end

model cellmlmod_time_dependent_outward_current_x1_gate()

  // Assignment Rules:
  alpha_x1 := 5e-4  * exp((V + 50 ) / 12.1 ) / (1  + exp((V + 50 ) / 17.5 ))
  beta_x1 := 0.0013  * exp(-((V + 20 )) / 16.67 ) / (1  + exp(-((V + 20 )) / 25 ))

  // Rate Rules:
  x1' = alpha_x1 * (1  - x1) - beta_x1 * x1

  // Variable initializations:
  x1 = 0.0001;

  //Other declarations:
  var x1, alpha_x1, beta_x1, V, time;
end

model cellmlmod_time_independent_outward_current()

  // Assignment Rules:
  i_K1 := 0.0035  * (4  * (exp(0.04  * (V + 85 )) - 1 ) / (exp(0.08  * (V + 53 )) + exp(0.04  * (V + 53 ))) + 0.2  * (V + 23 ) / (1  - exp(-(0.04 ) * (V + 23 ))))

  //Other declarations:
  var i_K1, time, V;
end

model cellmlmod_stimulus_protocol()

  // Variable initializations:
  IstimStart = 10;
  IstimEnd = 50000;
  IstimAmplitude = 0.5;
  IstimPeriod = 1000;
  IstimPulseDuration = 1;

  //Other declarations:
  var Istim, IstimStart, IstimEnd, IstimAmplitude, IstimPeriod, IstimPulseDuration;
  var time;
end

model beeler_reuter_1977_version06()

  // Sub-modules, and any changes to those submodules:
  environment: cellmlmod_environment()
  membrane: cellmlmod_membrane()
  sodium_current: cellmlmod_sodium_current()
  sodium_current_m_gate: cellmlmod_sodium_current_m_gate()
  sodium_current_h_gate: cellmlmod_sodium_current_h_gate()
  sodium_current_j_gate: cellmlmod_sodium_current_j_gate()
  slow_inward_current: cellmlmod_slow_inward_current()
  slow_inward_current_d_gate: cellmlmod_slow_inward_current_d_gate()
  slow_inward_current_f_gate: cellmlmod_slow_inward_current_f_gate()
  time_dependent_outward_current: cellmlmod_time_dependent_outward_current()
  time_dependent_outward_current_x1_gate: cellmlmod_time_dependent_outward_current_x1_gate()
  time_independent_outward_current: cellmlmod_time_independent_outward_current()
  stimulus_protocol: cellmlmod_stimulus_protocol()
  membrane.time is environment.time;
  sodium_current.time is environment.time;
  slow_inward_current.time is environment.time;
  time_dependent_outward_current.time is environment.time;
  time_independent_outward_current.time is environment.time;
  membrane.V is sodium_current.V;
  membrane.i_Na is sodium_current.i_Na;
  sodium_current.V is slow_inward_current.V;
  membrane.i_s is slow_inward_current.i_s;
  slow_inward_current.V is time_dependent_outward_current.V;
  membrane.i_x1 is time_dependent_outward_current.i_x1;
  time_dependent_outward_current.V is time_independent_outward_current.V;
  membrane.i_K1 is time_independent_outward_current.i_K1;
  sodium_current.m is sodium_current_m_gate.m;
  environment.time is sodium_current_m_gate.time;
  time_independent_outward_current.V is sodium_current_m_gate.V;
  sodium_current.h is sodium_current_h_gate.h;
  sodium_current_m_gate.time is sodium_current_h_gate.time;
  sodium_current_m_gate.V is sodium_current_h_gate.V;
  sodium_current.j is sodium_current_j_gate.j;
  sodium_current_h_gate.time is sodium_current_j_gate.time;
  sodium_current_h_gate.V is sodium_current_j_gate.V;
  time_dependent_outward_current.x1 is time_dependent_outward_current_x1_gate.x1;
  sodium_current_j_gate.time is time_dependent_outward_current_x1_gate.time;
  sodium_current_j_gate.V is time_dependent_outward_current_x1_gate.V;
  slow_inward_current.d is slow_inward_current_d_gate.d;
  time_dependent_outward_current_x1_gate.time is slow_inward_current_d_gate.time;
  time_dependent_outward_current_x1_gate.V is slow_inward_current_d_gate.V;
  slow_inward_current.f is slow_inward_current_f_gate.f;
  slow_inward_current_d_gate.time is slow_inward_current_f_gate.time;
  slow_inward_current_d_gate.V is slow_inward_current_f_gate.V;
  membrane.Istim is stimulus_protocol.Istim;
  slow_inward_current_f_gate.time is stimulus_protocol.time;
end
