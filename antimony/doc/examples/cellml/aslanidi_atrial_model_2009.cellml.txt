//Created by libAntimony v1.3
model cellmlmod_environment()

  // Variable initializations:
  CT = 1;
  PM = 0;

  //Other declarations:
  var time, CT, PM;
end

model cellmlmod_membrane()

  // Rate Rules:
  V' = -(1 ) / Cm * (i_Kr + i_Ks + i_Na + i_Ca_L + i_Ca_T + i_to + i_sus + i_K1 + i_B_Na + i_B_Ca + i_p + i_CaP + i_NaCa + i_Stim)

  // Variable initializations:
  V = -80;
  R = 8314;
  T = 308;
  F = 96487;
  Cm = 0.00005;
  stim_start = 0.01;
  stim_end = 100;
  stim_period = 0.5;
  stim_duration = 0.0002;
  stim_amplitude = -20;

  //Other declarations:
  var V, R, T, F, Cm, time, i_Na, i_Ca_L, i_Ca_T, i_to, i_sus, i_K1, i_Kr;
  var i_Ks, i_B_Na, i_B_Ca, i_p, i_CaP, i_NaCa, i_Stim, stim_start, stim_end;
  var stim_period, stim_duration, stim_amplitude;
end

model cellmlmod_sodium_current()

  // Assignment Rules:
  i_Na := P_Na * power(m, 3 ) * (0.635  * h1 + 0.365  * h2) * Na_c * V * power(F, 2 ) / (R * T) * (exp((V - E_Na) * F / (R * T)) - 1 ) / (exp(V * F / (R * T)) - 1 )
  E_Na := R * T / F * ln(Na_c / Na_i)

  // Variable initializations:
  P_Na = 0.0000014;

  //Other declarations:
  var i_Na, E_Na, P_Na, time, V, Na_c, Na_i, R, F, T, m, h1, h2;
end

model cellmlmod_sodium_current_m_gate()

  // Assignment Rules:
  E0_m := V + 44.4
  alpha_m := -(460 ) * E0_m / (exp(E0_m / -(12.673 )) - 1 )
  beta_m := 18400  * exp(E0_m / -(12.673 ))

  // Rate Rules:
  m' = alpha_m * (1  - m) - beta_m * m

  // Variable initializations:
  m = 0.01309;

  //Other declarations:
  var m, E0_m, alpha_m, beta_m, V, time;
end

model cellmlmod_sodium_current_h1_gate()

  // Assignment Rules:
  alpha_h := 44.9  * exp((V + 66.9 ) / -(5.57 ))
  beta_h := 1491  / (1  + 323.3  * exp((V + 94.6 ) / -(12.9 )))
  h_infinity := alpha_h / (alpha_h + beta_h)
  tau_h1 := 0.03  / (1  + exp((V + 40 ) / 6 )) + 0.00015

  // Rate Rules:
  h1' = (h_infinity - h1) / tau_h1

  // Variable initializations:
  h1 = 0.706;

  //Other declarations:
  var h1, alpha_h, beta_h, h_infinity, tau_h1, V, time;
end

model cellmlmod_sodium_current_h2_gate()

  // Assignment Rules:
  tau_h2 := 0.12  / (1  + exp((V + 60 ) / 2 )) + 0.00045

  // Rate Rules:
  h2' = (h_infinity - h2) / tau_h2

  // Variable initializations:
  h2 = 0.61493;

  //Other declarations:
  var h2, tau_h2, h_infinity, V, time;
end

model cellmlmod_L_type_Ca_channel()

  // Assignment Rules:
  d_prime := 1  / (1  + exp((V - 23 ) / -(12 )))

  // Variable initializations:
  g_Ca_L = 0.004;
  E_Ca_app = 50;

  //Other declarations:
  var i_Ca_L, g_Ca_L, E_Ca_app, time, V, d_prime, d_L, f_L, CT, PM;
end

model cellmlmod_L_type_Ca_channel_d_L_gate()

  // Assignment Rules:
  E0_alpha_d_L := V + 45
  E0_beta_d_L := V + 5
  E10 := V + 10
  alpha_d_L := -(16.72 ) * E0_alpha_d_L / (exp(E0_alpha_d_L / -(2.5 )) - 1 ) + -(50 ) * E10 / (exp(E10 / -(4.808 )) - 1 )
  beta_d_L := 4.48  * E0_beta_d_L / (exp(E0_beta_d_L / 2.5 ) - 1 )
  d_L_infinity := 1  / (1  + exp((E10 + 0.95 ) / -(6.6 )))
  tau_d_L := 1  / (alpha_d_L + beta_d_L)

  // Rate Rules:
  d_L' = (d_L_infinity - d_L) / tau_d_L

  // Variable initializations:
  d_L = 0.00003;

  //Other declarations:
  var d_L, E0_alpha_d_L, E0_beta_d_L, E10, alpha_d_L, beta_d_L, d_L_infinity;
  var tau_d_L, V, time;
end

model cellmlmod_L_type_Ca_channel_f_L_gate()

  // Assignment Rules:
  E0_f_L := V + 18
  alpha_f_L := 8.49  * E0_f_L / (exp(E0_f_L / 4 ) - 1 )
  beta_f_L := 67.922  / (1  + exp(E0_f_L / -(4 )))
  f_L_infinity := alpha_f_L / (alpha_f_L + beta_f_L)
  tau_f_L := 1  / (alpha_f_L + beta_f_L)

  // Rate Rules:
  f_L' = (f_L_infinity - f_L) / tau_f_L

  // Variable initializations:
  f_L = 0.99981;

  //Other declarations:
  var f_L, E0_f_L, alpha_f_L, beta_f_L, f_L_infinity, tau_f_L, V, time;
end

model cellmlmod_T_type_Ca_channel()

  // Assignment Rules:
  i_Ca_T := g_Ca_T * d_T * f_T * (V - E_Ca_T)

  // Variable initializations:
  g_Ca_T = 0.006;
  E_Ca_T = 38;

  //Other declarations:
  var i_Ca_T, g_Ca_T, E_Ca_T, time, V, d_T, f_T;
end

model cellmlmod_T_type_Ca_channel_d_T_gate()

  // Assignment Rules:
  E0_d_T := V + 23.3
  alpha_d_T := 674.173  * exp(E0_d_T / 30 )
  beta_d_T := 674.173  * exp(E0_d_T / -(30 ))
  d_T_infinity := 1  / (1  + exp((E0_d_T - 0.3 ) / -(6.1 )))
  tau_d_T := 1  / (alpha_d_T + beta_d_T)

  // Rate Rules:
  d_T' = (d_T_infinity - d_T) / tau_d_T

  // Variable initializations:
  d_T = 0.00046;

  //Other declarations:
  var d_T, E0_d_T, alpha_d_T, beta_d_T, d_T_infinity, tau_d_T, V, time;
end

model cellmlmod_T_type_Ca_channel_f_T_gate()

  // Assignment Rules:
  E0_f_T := V + 75
  alpha_f_T := 9.637  * exp(E0_f_T / -(83.3 ))
  beta_f_T := 9.637  * exp(E0_f_T / 15.38 )
  f_T_infinity := alpha_f_T / (alpha_f_T + beta_f_T)
  tau_f_T := 1  / (alpha_f_T + beta_f_T)

  // Rate Rules:
  f_T' = (f_T_infinity - f_T) / tau_f_T

  // Variable initializations:
  f_T = 0.30752;

  //Other declarations:
  var f_T, E0_f_T, alpha_f_T, beta_f_T, f_T_infinity, tau_f_T, V, time;
end

model cellmlmod_Ca_independent_transient_outward_K_current()

  // Assignment Rules:
  E_K := R * T / F * ln(K_c / K_i)

  // Variable initializations:
  g_to = 0.050002;

  //Other declarations:
  var i_to, i_sus, E_K, g_to, time, V, R, F, T, K_c, K_i, r, s1, s2, s3, CT;
  var PM;
end

model cellmlmod_Ca_independent_transient_outward_K_current_r_gate()

  // Assignment Rules:
  alpha_r := 386.6  * exp(V / 12 )
  beta_r := 8.011  * exp(V / -(7.2 ))
  tau_r := 1  / (alpha_r + beta_r) + 4E-4
  r_infinity := 1  / (1  + exp((V + 15 ) / -(5.633 )))

  // Rate Rules:
  r' = (r_infinity - r) / tau_r

  // Variable initializations:
  r = 0.00006;

  //Other declarations:
  var r, alpha_r, beta_r, tau_r, r_infinity, V, time;
end

model cellmlmod_Ca_independent_transient_outward_K_current_s1_gate()

  // Assignment Rules:
  tau_s1 := 0.5466  / (1  + exp((V + 32.8 ) / 0.1 )) + 0.0204
  s1_infinity := 1  / (1  + exp((V + 28.29 ) / 7.06 ))

  // Rate Rules:
  s1' = (s1_infinity - s1) / tau_s1

  // Variable initializations:
  s1 = 0.5753;

  //Other declarations:
  var s1, tau_s1, s1_infinity, V, time;
end

model cellmlmod_Ca_independent_transient_outward_K_current_s2_gate()

  // Assignment Rules:
  tau_s2 := 5.75  / (1  + exp((V + 32.8 ) / 0.1 )) + 0.45  / (1  + exp((V - 13.54 ) / -(13.97 )))
  s2_infinity := 1  / (1  + exp((V + 28.29 ) / 7.06 ))

  // Rate Rules:
  s2' = (s2_infinity - s2) / tau_s2

  // Variable initializations:
  s2 = 0.39871;

  //Other declarations:
  var s2, tau_s2, s2_infinity, V, time;
end

model cellmlmod_Ca_independent_transient_outward_K_current_s3_gate()

  // Assignment Rules:
  tau_s3 := 7.5  / (1  + exp((V + 23 ) / 0.5 )) + 0.5
  s3_infinity := (1  / (1  + exp((V + 50.67 ) / 27.38 )) + 0.666 ) / 1.666

  // Rate Rules:
  s3' = (s3_infinity - s3) / tau_s3

  // Variable initializations:
  s3 = 0.57363;

  //Other declarations:
  var s3, tau_s3, s3_infinity, V, time;
end

model cellmlmod_delayed_rectifier_K_current()

  // Assignment Rules:
  i_Ks := g_Ks * z * (V - E_K)
  i_Kr := g_Kr * p_a * p_i * (V - E_K)

  // Variable initializations:
  g_Ks = 0.0025;
  g_Kr = 0.0035;

  //Other declarations:
  var i_Ks, i_Kr, g_Ks, g_Kr, time, V, E_K, z, p_a, p_i;
end

model cellmlmod_delayed_rectifier_K_current_z_gate()

  // Assignment Rules:
  alpha_z := 1.66  * exp(V / 69.452 )
  beta_z := 0.3  * exp(V / -(21.826 ))
  tau_z := 1  / (alpha_z + beta_z) + 0.06
  z_infinity := 1  / (1  + exp((V - 0.9 ) / -(13.8 )))

  // Rate Rules:
  z' = (z_infinity - z) / tau_z

  // Variable initializations:
  z = 0.02032;

  //Other declarations:
  var z, alpha_z, beta_z, tau_z, z_infinity, V, time;
end

model cellmlmod_delayed_rectifier_K_current_pa_gate()

  // Assignment Rules:
  alpha_p_a := 9  * exp(V / 25.371 )
  beta_p_a := 1.3  * exp(V / -(13.026 ))
  tau_p_a := 1  / (alpha_p_a + beta_p_a)
  p_a_infinity := 1  / (1  + exp((V + 5.1 ) / -(7.4 )))

  // Rate Rules:
  p_a' = (p_a_infinity - p_a) / tau_p_a

  // Variable initializations:
  p_a = 0.00016;

  //Other declarations:
  var p_a, alpha_p_a, beta_p_a, tau_p_a, p_a_infinity, V, time;
end

model cellmlmod_delayed_rectifier_K_current_pi_gate()

  // Assignment Rules:
  alpha_p_i := 100  * exp(V / -(54.645 ))
  beta_p_i := 656  * exp(V / 106.157 )
  tau_p_i := 1  / (alpha_p_i + beta_p_i)
  p_i_infinity := 1  / (1  + exp((V + 47.3921 ) / 18.6603 ))

  // Rate Rules:
  p_i' = (p_i_infinity - p_i) / tau_p_i

  // Variable initializations:
  p_i = 0.76898;

  //Other declarations:
  var p_i, alpha_p_i, beta_p_i, tau_p_i, p_i_infinity, V, time;
end

model cellmlmod_inward_rectifier()

  // Variable initializations:
  g_K1 = 0.00508;
  KmK1 = 0.59;
  steepK1 = 1.393;
  shiftK1 = -3.6;

  //Other declarations:
  var i_K1, g_K1, KmK1, steepK1, shiftK1, time, V, R, F, T, K_c, E_K, CT;
  var PM;
end

model cellmlmod_background_currents()

  // Assignment Rules:
  E_Ca := R * T / (2  * F) * ln(Ca_c / Ca_i)

  // Variable initializations:
  g_B_Na = 6.4e-5;
  g_B_Ca = 3.1e-5;

  //Other declarations:
  var i_B_Na, i_B_Ca, g_B_Na, g_B_Ca, E_Ca, E_Na, R, F, T, Ca_c, Ca_i, time;
  var V, CT, PM;
end

model cellmlmod_sodium_potassium_pump()

  // Assignment Rules:
  i_p := i_NaK_max * K_c / (K_c + k_NaK_K) * power(Na_i, 1.5 ) / (power(Na_i, 1.5 ) + power(k_NaK_Na, 1.5 )) * 1.6  / (1.5  + exp((V + 60 ) / -(40 )))

  // Variable initializations:
  k_NaK_K = 1;
  k_NaK_Na = 11;
  i_NaK_max = 0.06441;

  //Other declarations:
  var i_p, k_NaK_K, k_NaK_Na, i_NaK_max, K_c, Na_i, V, time;
end

model cellmlmod_sarcolemmal_calcium_pump_current()

  // Assignment Rules:
  i_CaP := i_CaP_max * Ca_i / (Ca_i + k_CaP)

  // Variable initializations:
  i_CaP_max = 0.009509;
  k_CaP = 2e-4;

  //Other declarations:
  var i_CaP, i_CaP_max, k_CaP, Ca_i, time;
end

model cellmlmod_Na_Ca_ion_exchanger_current()

  // Assignment Rules:
  i_NaCa := k_NaCa * (power(Na_i, 3 ) * Ca_c * exp(gamma * F * V / (R * T)) - power(Na_c, 3 ) * Ca_i * exp((gamma - 1 ) * V * F / (R * T))) / (1  + d_NaCa * (power(Na_c, 3 ) * Ca_i + power(Na_i, 3 ) * Ca_c))

  // Variable initializations:
  k_NaCa = 2e-5;
  d_NaCa = 3e-4;
  gamma = 0.45;

  //Other declarations:
  var i_NaCa, k_NaCa, d_NaCa, gamma, Na_i, Na_c, Ca_i, Ca_c, R, F, T, V, time;
end

model cellmlmod_intracellular_ion_concentrations()

  // Rate Rules:
  Na_i' = -((i_Na + i_B_Na + 3  * i_p + 3  * i_NaCa)) / (Vol_i * F)
  Ca_i' = -((i_Ca_L + i_Ca_T + i_B_Ca + i_CaP - 2  * i_NaCa + i_up - i_rel)) / (2  * Vol_Ca * F) - (0.08  * dOTCdt + 0.16  * dOTMgCdt + 0.045  * dOCdt)
  K_i' = -((i_to + i_sus + i_K1 + i_Kr + i_Ks - 2  * i_p)) / (Vol_i * F)

  // Variable initializations:
  Na_i = 8.4;
  Ca_i = 0.000071;
  K_i = 100;
  Vol_i = 1.26e-5;
  Vol_Ca = 5.884e-6;

  //Other declarations:
  var Na_i, Ca_i, K_i, Vol_i, Vol_Ca, time, F, i_Na, i_Ca_L, i_Ca_T, i_B_Na;
  var i_NaCa, i_p, i_Kr, i_Ks, i_K1, i_to, i_sus, i_CaP, i_B_Ca, i_up, i_rel;
  var dOCdt, dOTCdt, dOTMgCdt;
end

model cellmlmod_intracellular_Ca_buffering()

  // Assignment Rules:
  dOCdt := 200000  * Ca_i * (1  - O_C) - 476  * O_C
  dOTCdt := 78400  * Ca_i * (1  - O_TC) - 392  * O_TC
  dOTMgCdt := 200000  * Ca_i * (1  - O_TMgC - O_TMgMg) - 6.6  * O_TMgC

  // Rate Rules:
  O_C' = dOCdt
  O_TC' = dOTCdt
  O_TMgC' = dOTMgCdt
  O_TMgMg' = 2000  * Mg_i * (1  - O_TMgC - O_TMgMg) - 666  * O_TMgMg

  // Variable initializations:
  O_C = 0.029108;
  O_TC = 0.014071;
  O_TMgC = 0.214036;
  O_TMgMg = 0.693565;
  Mg_i = 2.5;

  //Other declarations:
  var O_C, dOCdt, O_TC, dOTCdt, O_TMgC, dOTMgCdt, O_TMgMg, Mg_i, Ca_i, time;
end

model cellmlmod_cleft_space_ion_concentrations()

  // Rate Rules:
  K_c' = (i_to + i_sus + i_K1 + i_Kr + i_Ks - 2  * i_p) / (Vol_c * F)

  // Variable initializations:
  Na_c = 140;
  Ca_c = 2.5;
  K_c = 5;
  Vol_c = 0.0000025;

  //Other declarations:
  var Na_c, Ca_c, K_c, Vol_c, time, F, i_p, i_Kr, i_Ks, i_K1, i_to, i_sus;
end

model cellmlmod_Ca_handling_by_the_SR()

  // Assignment Rules:
  i_rel := alpha_rel * power(F2 / (F2 + 0.25 ), 2 ) * (Ca_rel - Ca_i)
  i_up := I_up_max * (Ca_i / k_cyca - power(k_xcs, 2 ) * Ca_up / k_srca) / ((Ca_i + k_cyca) / k_cyca + k_xcs * (Ca_up + k_srca) / k_srca)
  i_tr := (Ca_up - Ca_rel) * 2  * F * Vol_rel / tau_tr
  r_act := 240  * exp(0.08  * (V - 20 )) + 203.8  * power(Ca_i / (Ca_i + k_rel), 4 )
  r_inact := 33.96  + 339.6  * power(Ca_i / (Ca_i + k_rel), 4 )

  // Rate Rules:
  Ca_rel' = (i_tr - i_rel) / (2  * Vol_rel * F) - 31  * d(O_Calse)/d(time)
  Ca_up' = (i_up - i_tr) / (2  * Vol_up * F)
  O_Calse' = 480  * Ca_rel * (1  - O_Calse) - 400  * O_Calse
  F1' = k_F3 * F3 - r_act * F1
  F2' = r_act * F1 - r_inact * F2
  F3' = F2 * r_inact - k_F3 * F3

  // Variable initializations:
  I_up_max = 2.8;
  k_cyca = 0.0003;
  k_srca = 0.5;
  k_xcs = 0.4;
  alpha_rel = 200;
  Ca_rel = 0.726776;
  Ca_up = 0.730866;
  Vol_up = 3.969e-7;
  Vol_rel = 4.4e-8;
  O_Calse = 0.465921;
  F1 = 0.288039;
  F2 = 0.002262;
  F3 = 0.612697;
  tau_tr = 0.01;
  k_rel = 0.0003;
  k_F3 = 0.815;

  //Other declarations:
  var i_rel, i_up, i_tr, I_up_max, k_cyca, k_srca, k_xcs, alpha_rel, Ca_rel;
  var Ca_up, Vol_up, Vol_rel, r_act, r_inact, O_Calse, F1, F2, F3, tau_tr;
  var k_rel, k_F3, time, Ca_i, V, F;
end

model aslanidi_atrial_model_2009()

  // Sub-modules, and any changes to those submodules:
  environment: cellmlmod_environment()
  membrane: cellmlmod_membrane()
  sodium_current: cellmlmod_sodium_current()
  sodium_current_m_gate: cellmlmod_sodium_current_m_gate()
  sodium_current_h1_gate: cellmlmod_sodium_current_h1_gate()
  sodium_current_h2_gate: cellmlmod_sodium_current_h2_gate()
  L_type_Ca_channel: cellmlmod_L_type_Ca_channel()
  L_type_Ca_channel_d_L_gate: cellmlmod_L_type_Ca_channel_d_L_gate()
  L_type_Ca_channel_f_L_gate: cellmlmod_L_type_Ca_channel_f_L_gate()
  T_type_Ca_channel: cellmlmod_T_type_Ca_channel()
  T_type_Ca_channel_d_T_gate: cellmlmod_T_type_Ca_channel_d_T_gate()
  T_type_Ca_channel_f_T_gate: cellmlmod_T_type_Ca_channel_f_T_gate()
  Ca_independent_transient_outward_K_current: cellmlmod_Ca_independent_transient_outward_K_current()
  Ca_independent_transient_outward_K_current_r_gate: cellmlmod_Ca_independent_transient_outward_K_current_r_gate()
  Ca_independent_transient_outward_K_current_s1_gate: cellmlmod_Ca_independent_transient_outward_K_current_s1_gate()
  Ca_independent_transient_outward_K_current_s2_gate: cellmlmod_Ca_independent_transient_outward_K_current_s2_gate()
  Ca_independent_transient_outward_K_current_s3_gate: cellmlmod_Ca_independent_transient_outward_K_current_s3_gate()
  delayed_rectifier_K_current: cellmlmod_delayed_rectifier_K_current()
  delayed_rectifier_K_current_z_gate: cellmlmod_delayed_rectifier_K_current_z_gate()
  delayed_rectifier_K_current_pa_gate: cellmlmod_delayed_rectifier_K_current_pa_gate()
  delayed_rectifier_K_current_pi_gate: cellmlmod_delayed_rectifier_K_current_pi_gate()
  inward_rectifier: cellmlmod_inward_rectifier()
  background_currents: cellmlmod_background_currents()
  sodium_potassium_pump: cellmlmod_sodium_potassium_pump()
  sarcolemmal_calcium_pump_current: cellmlmod_sarcolemmal_calcium_pump_current()
  Na_Ca_ion_exchanger_current: cellmlmod_Na_Ca_ion_exchanger_current()
  intracellular_ion_concentrations: cellmlmod_intracellular_ion_concentrations()
  intracellular_Ca_buffering: cellmlmod_intracellular_Ca_buffering()
  cleft_space_ion_concentrations: cellmlmod_cleft_space_ion_concentrations()
  Ca_handling_by_the_SR: cellmlmod_Ca_handling_by_the_SR()
  membrane.time is environment.time;
  sodium_current.time is environment.time;
  L_type_Ca_channel.time is environment.time;
  L_type_Ca_channel.CT is environment.CT;
  L_type_Ca_channel.PM is environment.PM;
  T_type_Ca_channel.time is environment.time;
  Ca_independent_transient_outward_K_current.time is environment.time;
  Ca_independent_transient_outward_K_current.CT is environment.CT;
  Ca_independent_transient_outward_K_current.PM is environment.PM;
  delayed_rectifier_K_current.time is environment.time;
  inward_rectifier.time is environment.time;
  inward_rectifier.CT is environment.CT;
  inward_rectifier.PM is environment.PM;
  background_currents.time is environment.time;
  background_currents.CT is environment.CT;
  background_currents.PM is environment.PM;
  sodium_potassium_pump.time is environment.time;
  sarcolemmal_calcium_pump_current.time is environment.time;
  Na_Ca_ion_exchanger_current.time is environment.time;
  Ca_handling_by_the_SR.time is environment.time;
  intracellular_Ca_buffering.time is environment.time;
  intracellular_ion_concentrations.time is environment.time;
  cleft_space_ion_concentrations.time is environment.time;
  membrane.V is sodium_current.V;
  membrane.R is sodium_current.R;
  membrane.T is sodium_current.T;
  membrane.F is sodium_current.F;
  membrane.i_Na is sodium_current.i_Na;
  sodium_current.V is L_type_Ca_channel.V;
  membrane.i_Ca_L is L_type_Ca_channel.i_Ca_L;
  L_type_Ca_channel.V is T_type_Ca_channel.V;
  membrane.i_Ca_T is T_type_Ca_channel.i_Ca_T;
  T_type_Ca_channel.V is Ca_independent_transient_outward_K_current.V;
  membrane.i_to is Ca_independent_transient_outward_K_current.i_to;
  membrane.i_sus is Ca_independent_transient_outward_K_current.i_sus;
  sodium_current.R is Ca_independent_transient_outward_K_current.R;
  sodium_current.T is Ca_independent_transient_outward_K_current.T;
  sodium_current.F is Ca_independent_transient_outward_K_current.F;
  Ca_independent_transient_outward_K_current.V is inward_rectifier.V;
  membrane.i_K1 is inward_rectifier.i_K1;
  Ca_independent_transient_outward_K_current.R is inward_rectifier.R;
  Ca_independent_transient_outward_K_current.T is inward_rectifier.T;
  Ca_independent_transient_outward_K_current.F is inward_rectifier.F;
  inward_rectifier.V is delayed_rectifier_K_current.V;
  membrane.i_Kr is delayed_rectifier_K_current.i_Kr;
  membrane.i_Ks is delayed_rectifier_K_current.i_Ks;
  delayed_rectifier_K_current.V is background_currents.V;
  membrane.i_B_Na is background_currents.i_B_Na;
  membrane.i_B_Ca is background_currents.i_B_Ca;
  inward_rectifier.R is background_currents.R;
  inward_rectifier.T is background_currents.T;
  inward_rectifier.F is background_currents.F;
  background_currents.V is sodium_potassium_pump.V;
  membrane.i_p is sodium_potassium_pump.i_p;
  membrane.i_CaP is sarcolemmal_calcium_pump_current.i_CaP;
  sodium_potassium_pump.V is Na_Ca_ion_exchanger_current.V;
  membrane.i_NaCa is Na_Ca_ion_exchanger_current.i_NaCa;
  background_currents.R is Na_Ca_ion_exchanger_current.R;
  background_currents.T is Na_Ca_ion_exchanger_current.T;
  background_currents.F is Na_Ca_ion_exchanger_current.F;
  Na_Ca_ion_exchanger_current.F is intracellular_ion_concentrations.F;
  intracellular_ion_concentrations.F is cleft_space_ion_concentrations.F;
  Na_Ca_ion_exchanger_current.V is Ca_handling_by_the_SR.V;
  cleft_space_ion_concentrations.F is Ca_handling_by_the_SR.F;
  sodium_current.i_Na is intracellular_ion_concentrations.i_Na;
  sodium_current.Na_i is intracellular_ion_concentrations.Na_i;
  sodium_current.E_Na is background_currents.E_Na;
  sodium_current.Na_c is cleft_space_ion_concentrations.Na_c;
  L_type_Ca_channel.i_Ca_L is intracellular_ion_concentrations.i_Ca_L;
  T_type_Ca_channel.i_Ca_T is intracellular_ion_concentrations.i_Ca_T;
  Ca_independent_transient_outward_K_current.i_to is intracellular_ion_concentrations.i_to;
  Ca_independent_transient_outward_K_current.i_sus is intracellular_ion_concentrations.i_sus;
  Ca_independent_transient_outward_K_current.K_i is intracellular_ion_concentrations.K_i;
  intracellular_ion_concentrations.i_to is cleft_space_ion_concentrations.i_to;
  intracellular_ion_concentrations.i_sus is cleft_space_ion_concentrations.i_sus;
  Ca_independent_transient_outward_K_current.K_c is cleft_space_ion_concentrations.K_c;
  Ca_independent_transient_outward_K_current.E_K is inward_rectifier.E_K;
  inward_rectifier.E_K is delayed_rectifier_K_current.E_K;
  delayed_rectifier_K_current.i_Kr is intracellular_ion_concentrations.i_Kr;
  delayed_rectifier_K_current.i_Ks is intracellular_ion_concentrations.i_Ks;
  intracellular_ion_concentrations.i_Kr is cleft_space_ion_concentrations.i_Kr;
  intracellular_ion_concentrations.i_Ks is cleft_space_ion_concentrations.i_Ks;
  inward_rectifier.i_K1 is intracellular_ion_concentrations.i_K1;
  intracellular_ion_concentrations.i_K1 is cleft_space_ion_concentrations.i_K1;
  inward_rectifier.K_c is cleft_space_ion_concentrations.K_c;
  background_currents.i_B_Na is intracellular_ion_concentrations.i_B_Na;
  background_currents.i_B_Ca is intracellular_ion_concentrations.i_B_Ca;
  background_currents.Ca_i is intracellular_ion_concentrations.Ca_i;
  background_currents.Ca_c is cleft_space_ion_concentrations.Ca_c;
  sodium_potassium_pump.i_p is intracellular_ion_concentrations.i_p;
  sodium_potassium_pump.Na_i is intracellular_ion_concentrations.Na_i;
  intracellular_ion_concentrations.i_p is cleft_space_ion_concentrations.i_p;
  sodium_potassium_pump.K_c is cleft_space_ion_concentrations.K_c;
  sarcolemmal_calcium_pump_current.i_CaP is intracellular_ion_concentrations.i_CaP;
  sarcolemmal_calcium_pump_current.Ca_i is intracellular_ion_concentrations.Ca_i;
  Na_Ca_ion_exchanger_current.Ca_i is intracellular_ion_concentrations.Ca_i;
  Na_Ca_ion_exchanger_current.Na_i is intracellular_ion_concentrations.Na_i;
  Na_Ca_ion_exchanger_current.i_NaCa is intracellular_ion_concentrations.i_NaCa;
  Na_Ca_ion_exchanger_current.Ca_c is cleft_space_ion_concentrations.Ca_c;
  Na_Ca_ion_exchanger_current.Na_c is cleft_space_ion_concentrations.Na_c;
  Ca_handling_by_the_SR.i_rel is intracellular_ion_concentrations.i_rel;
  Ca_handling_by_the_SR.i_up is intracellular_ion_concentrations.i_up;
  Ca_handling_by_the_SR.Ca_i is intracellular_ion_concentrations.Ca_i;
  intracellular_Ca_buffering.dOCdt is intracellular_ion_concentrations.dOCdt;
  intracellular_Ca_buffering.dOTCdt is intracellular_ion_concentrations.dOTCdt;
  intracellular_Ca_buffering.dOTMgCdt is intracellular_ion_concentrations.dOTMgCdt;
  intracellular_Ca_buffering.Ca_i is intracellular_ion_concentrations.Ca_i;
  sodium_current.m is sodium_current_m_gate.m;
  environment.time is sodium_current_m_gate.time;
  Ca_handling_by_the_SR.V is sodium_current_m_gate.V;
  sodium_current.h1 is sodium_current_h1_gate.h1;
  sodium_current_m_gate.time is sodium_current_h1_gate.time;
  sodium_current_m_gate.V is sodium_current_h1_gate.V;
  sodium_current.h2 is sodium_current_h2_gate.h2;
  sodium_current_h1_gate.time is sodium_current_h2_gate.time;
  sodium_current_h1_gate.V is sodium_current_h2_gate.V;
  sodium_current_h1_gate.h_infinity is sodium_current_h2_gate.h_infinity;
  L_type_Ca_channel.d_L is L_type_Ca_channel_d_L_gate.d_L;
  sodium_current_h2_gate.time is L_type_Ca_channel_d_L_gate.time;
  sodium_current_h2_gate.V is L_type_Ca_channel_d_L_gate.V;
  L_type_Ca_channel.f_L is L_type_Ca_channel_f_L_gate.f_L;
  L_type_Ca_channel_d_L_gate.time is L_type_Ca_channel_f_L_gate.time;
  L_type_Ca_channel_d_L_gate.V is L_type_Ca_channel_f_L_gate.V;
  T_type_Ca_channel.d_T is T_type_Ca_channel_d_T_gate.d_T;
  L_type_Ca_channel_f_L_gate.time is T_type_Ca_channel_d_T_gate.time;
  L_type_Ca_channel_f_L_gate.V is T_type_Ca_channel_d_T_gate.V;
  T_type_Ca_channel.f_T is T_type_Ca_channel_f_T_gate.f_T;
  T_type_Ca_channel_d_T_gate.time is T_type_Ca_channel_f_T_gate.time;
  T_type_Ca_channel_d_T_gate.V is T_type_Ca_channel_f_T_gate.V;
  Ca_independent_transient_outward_K_current.r is Ca_independent_transient_outward_K_current_r_gate.r;
  T_type_Ca_channel_f_T_gate.time is Ca_independent_transient_outward_K_current_r_gate.time;
  T_type_Ca_channel_f_T_gate.V is Ca_independent_transient_outward_K_current_r_gate.V;
  Ca_independent_transient_outward_K_current.s1 is Ca_independent_transient_outward_K_current_s1_gate.s1;
  Ca_independent_transient_outward_K_current_r_gate.time is Ca_independent_transient_outward_K_current_s1_gate.time;
  Ca_independent_transient_outward_K_current_r_gate.V is Ca_independent_transient_outward_K_current_s1_gate.V;
  Ca_independent_transient_outward_K_current.s2 is Ca_independent_transient_outward_K_current_s2_gate.s2;
  Ca_independent_transient_outward_K_current_s1_gate.time is Ca_independent_transient_outward_K_current_s2_gate.time;
  Ca_independent_transient_outward_K_current_s1_gate.V is Ca_independent_transient_outward_K_current_s2_gate.V;
  Ca_independent_transient_outward_K_current.s3 is Ca_independent_transient_outward_K_current_s3_gate.s3;
  Ca_independent_transient_outward_K_current_s2_gate.time is Ca_independent_transient_outward_K_current_s3_gate.time;
  Ca_independent_transient_outward_K_current_s2_gate.V is Ca_independent_transient_outward_K_current_s3_gate.V;
  delayed_rectifier_K_current.z is delayed_rectifier_K_current_z_gate.z;
  Ca_independent_transient_outward_K_current_s3_gate.time is delayed_rectifier_K_current_z_gate.time;
  Ca_independent_transient_outward_K_current_s3_gate.V is delayed_rectifier_K_current_z_gate.V;
  delayed_rectifier_K_current.p_a is delayed_rectifier_K_current_pa_gate.p_a;
  delayed_rectifier_K_current_z_gate.time is delayed_rectifier_K_current_pa_gate.time;
  delayed_rectifier_K_current_z_gate.V is delayed_rectifier_K_current_pa_gate.V;
  delayed_rectifier_K_current.p_i is delayed_rectifier_K_current_pi_gate.p_i;
  delayed_rectifier_K_current_pa_gate.time is delayed_rectifier_K_current_pi_gate.time;
  delayed_rectifier_K_current_pa_gate.V is delayed_rectifier_K_current_pi_gate.V;
end
