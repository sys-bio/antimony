//Created by libAntimony v1.4
model hunter_mcnaughton_noble_1975_version02__membrane(t, Cm, Istim, I, Vm_initial, Vm)

  // Rate Rules:
  Vm' = (Istim - I) / Cm;

  // Variable initializations:
  Vm = Vm_initial;
end

model hunter_mcnaughton_noble_1975_version02__current(I, Cm, Vm_rest, Vm_plateau, Vm_threshold, membrane_conductance, Vm)

  // Assignment Rules:
  I := membrane_conductance * phi * (1.0 - phi / threshold) * (1.0 - phi / plateau);
  plateau := Vm_plateau - Vm_rest;
  threshold := Vm_threshold - Vm_rest;
  phi := Vm - Vm_rest;
end

model hunter_mcnaughton_noble_1975_version02__interface(t, Cm, Vm_rest, Vm_plateau, Vm_threshold, Vm_initial, membrane_conductance, Istim, Vm, I)

  // Sub-modules, and any changes to those submodules:
  membrane: hunter_mcnaughton_noble_1975_version02__membrane(t, Cm, Istim, I, Vm_initial, Vm);
  current: hunter_mcnaughton_noble_1975_version02__current(I, Cm0, Vm_rest, Vm_plateau, Vm_threshold, membrane_conductance, Vm);
end

model hunter_mcnaughton_noble_1975_version02____main()

  // Sub-modules, and any changes to those submodules:
  interface: hunter_mcnaughton_noble_1975_version02__interface(t, Cm, Vm_rest, Vm_plateau, Vm_threshold, Vm_initial, membrane_conductance, Istim, Vm, I);
end
