//Created by libAntimony v1.4
model miftakhov_1999__environment(time_)
end

model miftakhov_1999__model_constants(alpha, lamda)

  // Variable initializations:
  alpha = 0.12;
  lamda = 12.5;
end

model miftakhov_1999__membrane(V, time_, alpha, i_Ca_T, i_Ca_L, i_Ca_K, i_K, i_Cl)

  // Rate Rules:
  V' = -(( 1.0 / ( Cm * alpha ))) * ( i_Ca_T + i_Ca_L + i_Ca_K + i_K + i_Cl );

  // Variable initializations:
  V = -55.0;
  Cm = 2.5;
end

model miftakhov_1999__gate_voltage(V_tilde, V)

  // Assignment Rules:
  V_tilde := ( 127.0 * V + 8265.0 ) / 105.0;
end

model miftakhov_1999__T_type_calcium_current_m_gate(m, V_tilde)

  // Assignment Rules:
  m := alpha_m / ( alpha_m + beta_m );
  alpha_m := 0.1 * ( 50.0 - V_tilde ) / (exp( 5.0 - V_tilde * 0.1 ) - 1.0 );
  beta_m := 4.0 * exp(( 25.0 - V_tilde ) / 18.0 );
end

model miftakhov_1999__T_type_calcium_current_h_gate(h, alpha, lamda, V_tilde, time_)

  // Assignment Rules:
  alpha_h := 0.07 * exp(( 25.0 - V_tilde ) / 20.0 );
  beta_h := 1.0 / ( 1.0 + exp( 5.5 - V_tilde * 0.1 ));

  // Rate Rules:
  h' = ( alpha_h * ( 1.0 - h ) - beta_h * h ) / ( alpha * lamda );

  // Variable initializations:
  h = 0.01;
end

model miftakhov_1999__T_type_calcium_current(i_Ca_T, E_Ca, time_, V, V_tilde, alpha, lamda, m, h)

  // Sub-modules, and any changes to those submodules:
  T_type_calcium_current_m_gate: miftakhov_1999__T_type_calcium_current_m_gate(m, V_tilde);
  T_type_calcium_current_h_gate: miftakhov_1999__T_type_calcium_current_h_gate(h, alpha, lamda, V_tilde, time_);

  // Assignment Rules:
  i_Ca_T := g_Ca_T * power( m , 3.0 ) * h * ( V - E_Ca );

  // Variable initializations:
  E_Ca = 80.0;
  g_Ca_T = 0.51;
end

model miftakhov_1999__L_type_calcium_current_x_Ca_gate(x_Ca, alpha, V_tilde, time_)

  // Rate Rules:
  x_Ca' = ( 1.0 / ( 1.0 + exp( 0.15 * (-( V_tilde ) - 50.0 ))) - x_Ca ) / ( alpha * tau_x_Ca );

  // Variable initializations:
  x_Ca = 0.01;
  tau_x_Ca = 500.0;
end

model miftakhov_1999__L_type_calcium_current(i_Ca_L, E_Ca, alpha, time_, V, V_tilde, x_Ca)

  // Sub-modules, and any changes to those submodules:
  L_type_calcium_current_x_Ca_gate: miftakhov_1999__L_type_calcium_current_x_Ca_gate(x_Ca, alpha, V_tilde, time_);

  // Assignment Rules:
  i_Ca_L := g_Ca_L * x_Ca * ( V - E_Ca );

  // Variable initializations:
  g_Ca_L = 0.004;
end

model miftakhov_1999__potassium_current_n_gate(n, alpha, lamda, V_tilde, time_)

  // Assignment Rules:
  alpha_n := 0.01 * ( 55.0 - V_tilde ) / (exp(( 55.0 - V_tilde ) / 10.0 ) - 1.0 );
  beta_n := 0.125 * exp(( 45.0 - V_tilde ) / 80.0 );

  // Rate Rules:
  n' = ( alpha_n * ( 1.0 - n ) - beta_n * n ) / ( alpha * lamda );

  // Variable initializations:
  n = 0.01;
end

model miftakhov_1999__potassium_current(i_K, E_K, time_, V, V_tilde, alpha, lamda, n)

  // Sub-modules, and any changes to those submodules:
  potassium_current_n_gate: miftakhov_1999__potassium_current_n_gate(n, alpha, lamda, V_tilde, time_);

  // Assignment Rules:
  i_K := g_K * power( n , 4.0 ) * ( V - E_K );

  // Variable initializations:
  E_K = -75.0;
  g_K = 0.3;
end

model miftakhov_1999__calcium_activated_potassium_current(i_Ca_K, alpha, E_K, E_Ca, time_, V, x_Ca)

  // Assignment Rules:
  i_Ca_K := g_Ca_K * Ca * ( V - E_K ) / ( 0.5 + Ca );

  // Rate Rules:
  Ca' = rho / alpha * ( K_c * x_Ca * ( E_Ca - V ) - Ca );

  // Variable initializations:
  Ca = 1E-4;
  g_Ca_K = 0.03;
  rho = 0.125E3;
  K_c = 425.0E-5;
end

model miftakhov_1999__leak_chloride_current(i_Cl, time_, V)

  // Assignment Rules:
  i_Cl := g_Cl * ( V - E_Cl );

  // Variable initializations:
  g_Cl = 0.003;
  E_Cl = -40.0;
end

model miftakhov_1999____main()

  // Sub-modules, and any changes to those submodules:
  environment: miftakhov_1999__environment(time_);
  model_constants: miftakhov_1999__model_constants(alpha, lamda);
  membrane: miftakhov_1999__membrane(V, time_, alpha, i_Ca_T, i_Ca_L, i_Ca_K, i_K, i_Cl);
  gate_voltage: miftakhov_1999__gate_voltage(V_tilde, V);
  T_type_calcium_current: miftakhov_1999__T_type_calcium_current(i_Ca_T, E_Ca, time_, V, V_tilde, alpha, lamda, m, h);
  L_type_calcium_current: miftakhov_1999__L_type_calcium_current(i_Ca_L, E_Ca, alpha, time_, V, V_tilde, x_Ca);
  potassium_current: miftakhov_1999__potassium_current(i_K, E_K, time_, V, V_tilde, alpha, lamda, n);
  calcium_activated_potassium_current: miftakhov_1999__calcium_activated_potassium_current(i_Ca_K, alpha, E_K, E_Ca, time_, V, x_Ca);
  leak_chloride_current: miftakhov_1999__leak_chloride_current(i_Cl, time_, V);
end
