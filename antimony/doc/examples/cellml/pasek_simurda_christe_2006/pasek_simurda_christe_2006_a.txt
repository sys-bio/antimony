//Created by libAntimony v1.4
model pasek_simurda_christe_2006__environment(time_)
end

model pasek_simurda_christe_2006__model_parameters(R, T, F, Nae, Cae, Ke, Vt, Vd, Vmyo, Sms, Smt, Cms, Cmt, Rst, VSRrel, VSRup)

  // Assignment Rules:
  Vt := 3.14159 * power(radiust, 2 ) * Lt_ * pt;
  Vd := Vc * 0.000075;
  Vmyo := Vc * 0.585;
  Sms := Smtot - 0.44E4 * Vc;
  Smt := Smtot - Sms;
  Cms := Sms * 1;
  Cmt := Smt * 1;
  Rst := Rot * Lt_ / 2 / (3.14159 * power(radiust, 2 ) * pt);
  VSRrel := Vc * 0.0035;
  VSRup := Vc * 0.0315;
  Vc := Smtot / 7850;
  pt := ptcm * Sms;
  Lt_ := Smt / (2 * 3.14159 * radiust * pt);

  // Variable initializations:
  R = 8310;
  T = 295;
  F = 96500;
  Nae = 140;
  Cae = 1.2;
  Ke = 5.4;
  Rot = 83.33;
  radiust = 150e-7;
  ptcm = 30000000;
  Smtot = 0.0001;
end

model pasek_simurda_christe_2006__i_circ(i_circ, Rst, Vms, Vmt)

  // Assignment Rules:
  i_circ := 1000 * (Vmt / Rst - Vms / Rst);
end

model pasek_simurda_christe_2006__i_Stim(i_Stim, time_)

  // Assignment Rules:
  i_Stim := piecewise( stim_amplitude , ( time_ - past >= stim_offset) && (time_ - past <= stim_offset + stim_duration ), 0 );
  past := floor(time_ / stim_period) * stim_period;

  // Variable initializations:
  stim_offset = 0;
  stim_period = 1;
  stim_duration = 0.001;
  stim_amplitude = 0.0052;
end

model pasek_simurda_christe_2006__membrane_permeabilities(gNas, gCas, gKfs, gKsts, gK1s, gKbs, gKtos, gNabs, gCabs, i_pCa_maxs, i_NaK_maxs, i_NaCa_maxs, gNat, gCat, gKft, gKstt, gK1t, gKbt, gKtot, gNabt, gCabt, i_pCa_maxt, i_NaK_maxt, i_NaCa_maxt, Sms, Smt)

  // Assignment Rules:
  gNas := gNa * (Sms + Smt) * (1 - fNat);
  gCas := gCa * (Sms + Smt) * (1 - fCat);
  gKfs := gKf * (Sms + Smt) * (1 - fKft);
  gKsts := gKst * (Sms + Smt) * (1 - fKstt);
  gK1s := gK1 * (Sms + Smt) * (1 - fK1t);
  gKbs := gKb * (Sms + Smt) * (1 - fKbt);
  gKtos := gKto * (Sms + Smt) * (1 - fKtot);
  gNabs := gNab * (Sms + Smt) * (1 - fNabt);
  gCabs := gCab * (Sms + Smt) * (1 - fCabt);
  i_pCa_maxs := i_pCa_max * (Sms + Smt) * (1 - fpCat);
  i_NaK_maxs := i_NaK_max * (Sms + Smt) * (1 - fNaKt);
  i_NaCa_maxs := i_NaCa_max * (Sms + Smt) * (1 - fNaCat);
  gNat := gNa * (Sms + Smt) * fNat;
  gCat := gCa * (Sms + Smt) * fCat;
  gKft := gKf * (Sms + Smt) * fKft;
  gKstt := gKst * (Sms + Smt) * fKstt;
  gK1t := gK1 * (Sms + Smt) * fK1t;
  gKbt := gKb * (Sms + Smt) * fKbt;
  gKtot := gKto * (Sms + Smt) * fKtot;
  gNabt := gNab * (Sms + Smt) * fNabt;
  gCabt := gCab * (Sms + Smt) * fCabt;
  i_pCa_maxt := i_pCa_max * (Sms + Smt) * fpCat;
  i_NaK_maxt := i_NaK_max * (Sms + Smt) * fNaKt;
  i_NaCa_maxt := i_NaCa_max * (Sms + Smt) * fNaCat;

  // Variable initializations:
  gNa = 10;
  fNat = 0.56;
  gKf = 0.0145;
  fKft = 0.56;
  gKst = 0.07;
  fKstt = 0.76;
  gK1 = 0.24;
  fK1t = 0.56;
  gKb = 0.00138;
  fKbt = 0.56;
  gKto = 0.35;
  fKtot = 0.56;
  gNab = 0.0008015;
  fNabt = 0.56;
  gCab = 0.000648;
  fCabt = 0.56;
  gCa = 0.00021;
  fCat = 0.87;
  i_NaCa_max = 0.00018;
  fNaCat = 0.81;
  i_NaK_max = 1;
  fNaKt = 0.59;
  i_pCa_max = 0.85;
  fpCat = 0.56;
end

model pasek_simurda_christe_2006__i_Nas_m_gate(m, Vms, time_)

  // Assignment Rules:
  alpha_m := 117.26 * (Vms + 59.3 ) / (1 - exp(-(0.55 ) * (Vms + 59.3 )));
  beta_m := 3800 * exp(-(0.072 ) * (Vms + 61 ));

  // Rate Rules:
  m' = alpha_m * (1 - m) - beta_m * m;

  // Variable initializations:
  m = 2.1832558e-6;
end

model pasek_simurda_christe_2006__i_Nas_h_gate(h, Vms, time_)

  // Assignment Rules:
  alpha_h := 284.4 / (1 + exp(0.0812 * (Vms + 115.9 )));
  beta_h := 18.77 * (Vms + 64.4 ) / (1 - exp(-(0.22 ) * (Vms + 64.4 )));

  // Rate Rules:
  h' = alpha_h * (1 - h) - beta_h * h;

  // Variable initializations:
  h = 5.8232781e-1;
end

model pasek_simurda_christe_2006__i_Nas(i_Nas, E_Nas, gNas, Nai, Nae, Ki, Ke, R, F, T, time_, Vms, m, h)

  // Sub-modules, and any changes to those submodules:
  i_Nas_m_gate: pasek_simurda_christe_2006__i_Nas_m_gate(m, Vms, time_);
  i_Nas_h_gate: pasek_simurda_christe_2006__i_Nas_h_gate(h, Vms, time_);

  // Assignment Rules:
  i_Nas := gNas * power(m, 3 ) * h * (Vms - ln((Nae + 0.12 * Ke) / (Nai + 0.12 * Ki)) * R * T / F);
  E_Nas := ln(Nae / Nai) * R * T / F;
end

model pasek_simurda_christe_2006__i_Nat_m_gate(m, Vmt, time_)

  // Assignment Rules:
  alpha_m := 117.26 * (Vmt + 59.3 ) / (1 - exp(-(0.55 ) * (Vmt + 59.3 )));
  beta_m := 3800 * exp(-(0.072 ) * (Vmt + 61 ));

  // Rate Rules:
  m' = alpha_m * (1 - m) - beta_m * m;

  // Variable initializations:
  m = 2.1832694e-6;
end

model pasek_simurda_christe_2006__i_Nat_h_gate(h, Vmt, time_)

  // Assignment Rules:
  alpha_h := 284.4 / (1 + exp(0.0812 * (Vmt + 115.9 )));
  beta_h := 18.77 * (Vmt + 64.4 ) / (1 - exp(-(0.22 ) * (Vmt + 64.4 )));

  // Rate Rules:
  h' = alpha_h * (1 - h) - beta_h * h;

  // Variable initializations:
  h = 5.8232717e-1;
end

model pasek_simurda_christe_2006__i_Nat(i_Nat, E_Nat, gNat, Nai, Nat, Ki, Kt, R, F, T, time_, Vmt, m, h)

  // Sub-modules, and any changes to those submodules:
  i_Nat_m_gate: pasek_simurda_christe_2006__i_Nat_m_gate(m, Vmt, time_);
  i_Nat_h_gate: pasek_simurda_christe_2006__i_Nat_h_gate(h, Vmt, time_);

  // Assignment Rules:
  i_Nat := gNat * power(m, 3 ) * h * (Vmt - ln((Nat + 0.12 * Kt) / (Nai + 0.12 * Ki)) * R * T / F);
  E_Nat := ln(Nat / Nai) * R * T / F;
end

model pasek_simurda_christe_2006__i_Cas(i_Cas, E_Cas, gCas, time_, R, T, F, Vms, Cass, Cae, Cai)

  // Assignment Rules:
  i_Cas := gCas * 4 * Vms * power(F, 2 ) / (R * T) * (Cass * exp(2 * Vms * F / (R * T)) - 0.341 * Cae) / (exp(2 * Vms * F / (R * T)) - 1 ) * Co * ((0.9 + Ccast / 10 ) * C1 + (0.1 - Ccast / 10 ) * C2);
  E_Cas := ln(Cae / Cai) * R * T / (2 * F);
  tauCo := 0.00025 + 0.00305 * exp(-(0.0045 ) * power(Vms + 7 , 2 )) + 0.00105 * exp(-(0.002 ) * power(Vms - 18 , 2 ));
  tauC1 := 0.105 * exp(-(power((Vms + 45 ) / 12 , 2 ))) + 0.04 / (1 + exp((-(Vms) + 25 ) / 25 )) + 0.015 / (1 + exp((Vms + 75 ) / 25 ));
  tauC2 := 0.041 * exp(-(power((Vms + 47 ) / 12 , 2 ))) + 0.08 / (1 + exp(-((Vms + 55 )) / 5 )) + 0.015 / (1 + exp((Vms + 75 ) / 25 ));
  Coinf := 1 / (1 + exp(-((Vms + 15.3 )) / 5 ));
  Ccastinf := 1 / (1 + Cass / 0.01 );
  C1inf := 1 / (1 + exp((Vms + 26.7 ) / 5.4 ));
  C2inf := C1inf;

  // Rate Rules:
  Co' = (Coinf - Co) / tauCo;
  C1' = (C1inf - C1) / tauC1;
  C2' = (C2inf - C2) / tauC2;
  Ccast' = (Ccastinf - Ccast) / tauCcast;

  // Variable initializations:
  Co = 2.5436465e-6;
  C1 = 9.9994546e-1;
  C2 = 9.9994546e-1;
  tauCcast = 0.009;
  Ccast = 9.9570063e-1;
end

model pasek_simurda_christe_2006__i_Cat(i_Cat, E_Cat, gCat, time_, R, T, F, Vmt, Cass, Cat, Cai)

  // Assignment Rules:
  i_Cat := gCat * 4 * Vmt * power(F, 2 ) / (R * T) * (Cass * exp(2 * Vmt * F / (R * T)) - 0.341 * Cat) / (exp(2 * Vmt * F / (R * T)) - 1 ) * Co * ((0.9 + Ccast / 10 ) * C1 + (0.1 - Ccast / 10 ) * C2);
  E_Cat := ln(Cat / Cai) * R * T / (2 * F);
  tauCo := 0.00025 + 0.00305 * exp(-(0.0045 ) * power(Vmt + 7 , 2 )) + 0.00105 * exp(-(0.002 ) * power(Vmt - 18 , 2 ));
  tauC1 := 0.105 * exp(-(power((Vmt + 45 ) / 12 , 2 ))) + 0.04 / (1 + exp((-(Vmt) + 25 ) / 25 )) + 0.015 / (1 + exp((Vmt + 75 ) / 25 ));
  tauC2 := 0.041 * exp(-(power((Vmt + 47 ) / 12 , 2 ))) + 0.08 / (1 + exp(-((Vmt + 55 )) / 5 )) + 0.015 / (1 + exp((Vmt + 75 ) / 25 ));
  Coinf := 1 / (1 + exp(-((Vmt + 15.3 )) / 5 ));
  Ccastinf := 1 / (1 + Cass / 0.01 );
  C1inf := 1 / (1 + exp((Vmt + 26.7 ) / 5.4 ));
  C2inf := C1inf;

  // Rate Rules:
  Co' = (Coinf - Co) / tauCo;
  C1' = (C1inf - C1) / tauC1;
  C2' = (C2inf - C2) / tauC2;
  Ccast' = (Ccastinf - Ccast) / tauCcast;

  // Variable initializations:
  Co = 2.543652e-6;
  C1 = 9.9994546e-1;
  C2 = 9.9994546e-1;
  tauCcast = 0.009;
  Ccast = 9.9570063e-1;
end

model pasek_simurda_christe_2006__i_Ktos_rs_gate(rs, Vms, time_)

  // Assignment Rules:
  taurs := 1 / (45.16 * exp(0.03577 * (Vms + 50 )) + 98.9 * exp(-(0.1 ) * (Vms + 38 )));
  rinfs := 1 / (1 + exp((Vms + 10.6 ) / -(11.42 )));

  // Rate Rules:
  rs' = (rinfs - rs) / taurs;

  // Variable initializations:
  rs = 2.3485072e-3;
end

model pasek_simurda_christe_2006__i_Ktos_ss_gate(ss, Vms, time_)

  // Assignment Rules:
  tauss := 0.35 * exp(-(power(0.0666 * (Vms + 70 ), 2 ))) + 0.035;
  sinfs := 1 / (1 + exp((Vms + 45.3 ) / 6.8841 ));

  // Rate Rules:
  ss' = (sinfs - ss) / tauss;

  // Variable initializations:
  ss = 9.8315843e-1;
end

model pasek_simurda_christe_2006__i_Ktos_sss_gate(sss, Vms, time_)

  // Assignment Rules:
  tausss := 3.7 * exp(-(power(0.0333 * (Vms + 70 ), 2 ))) + 0.035;
  ssinfs := 1 / (1 + exp((Vms + 45.3 ) / 6.8841 ));

  // Rate Rules:
  sss' = (ssinfs - sss) / tausss;

  // Variable initializations:
  sss = 6.748337e-1;
end

model pasek_simurda_christe_2006__i_Ktos(i_Ktos, E_Ks, gKtos, time_, Vms, R, F, T, Ke, Ki, rs, ss, sss)

  // Sub-modules, and any changes to those submodules:
  i_Ktos_rs_gate: pasek_simurda_christe_2006__i_Ktos_rs_gate(rs, Vms, time_);
  i_Ktos_ss_gate: pasek_simurda_christe_2006__i_Ktos_ss_gate(ss, Vms, time_);
  i_Ktos_sss_gate: pasek_simurda_christe_2006__i_Ktos_sss_gate(sss, Vms, time_);

  // Assignment Rules:
  i_Ktos := gKtos * rs * (0.886 * ss + 0.114 * sss) * (Vms - E_Ks);
  E_Ks := ln(Ke / Ki) * R * T / F;
end

model pasek_simurda_christe_2006__i_Ktot_rt_gate(rt, Vmt, time_)

  // Assignment Rules:
  taurt := 1 / (45.16 * exp(0.03577 * (Vmt + 50 )) + 98.9 * exp(-(0.1 ) * (Vmt + 38 )));
  rinft := 1 / (1 + exp((Vmt + 10.6 ) / -(11.42 )));

  // Rate Rules:
  rt' = (rinft - rt) / taurt;

  // Variable initializations:
  rt = 2.3485094e-3;
end

model pasek_simurda_christe_2006__i_Ktot_st_gate(st, Vmt, time_)

  // Assignment Rules:
  taust := 0.35 * exp(-(power(0.0666 * (Vmt + 70 ), 2 ))) + 0.035;
  sinft := 1 / (1 + exp((Vmt + 45.3 ) / 6.8841 ));

  // Rate Rules:
  st' = (sinft - st) / taust;

  // Variable initializations:
  st = 9.8315865e-1;
end

model pasek_simurda_christe_2006__i_Ktot_sst_gate(sst, Vmt, time_)

  // Assignment Rules:
  tausst := 3.7 * exp(-(power(0.0333 * (Vmt + 70 ), 2 ))) + 0.035;
  ssinft := 1 / (1 + exp((Vmt + 45.3 ) / 6.8841 ));

  // Rate Rules:
  sst' = (ssinft - sst) / tausst;

  // Variable initializations:
  sst = 6.7478532e-1;
end

model pasek_simurda_christe_2006__i_Ktot(i_Ktot, E_Kt, gKtot, time_, Vmt, R, F, T, Kt, Ki, rt, st, sst)

  // Sub-modules, and any changes to those submodules:
  i_Ktot_rt_gate: pasek_simurda_christe_2006__i_Ktot_rt_gate(rt, Vmt, time_);
  i_Ktot_st_gate: pasek_simurda_christe_2006__i_Ktot_st_gate(st, Vmt, time_);
  i_Ktot_sst_gate: pasek_simurda_christe_2006__i_Ktot_sst_gate(sst, Vmt, time_);

  // Assignment Rules:
  i_Ktot := gKtot * rt * (0.886 * st + 0.114 * sst) * (Vmt - E_Kt);
  E_Kt := ln(Kt / Ki) * R * T / F;
end

model pasek_simurda_christe_2006__i_Ksts_rsts_gate(rsts, Vms, time_)

  // Assignment Rules:
  taursts := 10 / (45.16 * exp(0.03577 * (Vms + 50 )) + 98.9 * exp(-(0.1 ) * (Vms + 38 )));
  rstinfs := 1 / (1 + exp(-((Vms + 11.5 )) / 11.82 ));

  // Rate Rules:
  rsts' = (rstinfs - rsts) / taursts;

  // Variable initializations:
  rsts = 3.1079213e-3;
end

model pasek_simurda_christe_2006__i_Ksts_ssts_gate(ssts, Vms, time_)

  // Assignment Rules:
  sstinfs := 1 / (1 + exp((Vms + 87.5 ) / 10.3 ));

  // Rate Rules:
  ssts' = (sstinfs - ssts) / taussts;

  // Variable initializations:
  ssts = 3.0773393e-1;
  taussts = 2.1;
end

model pasek_simurda_christe_2006__i_Ksts(i_Ksts, gKsts, time_, Vms, E_Ks, rsts, ssts)

  // Sub-modules, and any changes to those submodules:
  i_Ksts_rsts_gate: pasek_simurda_christe_2006__i_Ksts_rsts_gate(rsts, Vms, time_);
  i_Ksts_ssts_gate: pasek_simurda_christe_2006__i_Ksts_ssts_gate(ssts, Vms, time_);

  // Assignment Rules:
  i_Ksts := gKsts * rsts * ssts * (Vms - E_Ks);
end

model pasek_simurda_christe_2006__i_Kstt_rstt_gate(rstt, Vmt, time_)

  // Assignment Rules:
  taurstt := 10 / (45.16 * exp(0.03577 * (Vmt + 50 )) + 98.9 * exp(-(0.1 ) * (Vmt + 38 )));
  rstinft := 1 / (1 + exp(-((Vmt + 11.5 )) / 11.82 ));

  // Rate Rules:
  rstt' = (rstinft - rstt) / taurstt;

  // Variable initializations:
  rstt = 3.1079241e-3;
end

model pasek_simurda_christe_2006__i_Kstt_sstt_gate(sstt, Vmt, time_)

  // Assignment Rules:
  sstinft := 1 / (1 + exp((Vmt + 87.5 ) / 10.3 ));

  // Rate Rules:
  sstt' = (sstinft - sstt) / tausstt;

  // Variable initializations:
  sstt = 3.0773368e-1;
  tausstt = 2.1;
end

model pasek_simurda_christe_2006__i_Kstt(i_Kstt, gKstt, time_, Vmt, E_Kt, rstt, sstt)

  // Sub-modules, and any changes to those submodules:
  i_Kstt_rstt_gate: pasek_simurda_christe_2006__i_Kstt_rstt_gate(rstt, Vmt, time_);
  i_Kstt_sstt_gate: pasek_simurda_christe_2006__i_Kstt_sstt_gate(sstt, Vmt, time_);

  // Assignment Rules:
  i_Kstt := gKstt * rstt * sstt * (Vmt - E_Kt);
end

model pasek_simurda_christe_2006__i_Kfs_qs_gate(qs, Vms, time_)

  // Assignment Rules:
  tauqs := 1 / (0.11885 * exp((Vms + 80 ) / 28.37 ) + 0.5623 * exp(-((Vms + 80 )) / 14.19 ));
  qinfs := 1 / (1 + exp((Vms + 138.6 ) / 10.48 ));

  // Rate Rules:
  qs' = (qinfs - qs) / tauqs;

  // Variable initializations:
  qs = 3.4357356e-3;
end

model pasek_simurda_christe_2006__i_Kfs(i_Kfs, gKfs, time_, Vms, E_Ks, E_Nas, qs)

  // Sub-modules, and any changes to those submodules:
  i_Kfs_qs_gate: pasek_simurda_christe_2006__i_Kfs_qs_gate(qs, Vms, time_);

  // Assignment Rules:
  i_Kfs := gKfs * qs * (0.2 * (Vms - E_Nas) + 0.8 * (Vms - E_Ks));
end

model pasek_simurda_christe_2006__i_Kft_qt_gate(qt, Vmt, time_)

  // Assignment Rules:
  tauqt := 1 / (0.11885 * exp((Vmt + 80 ) / 28.37 ) + 0.5623 * exp(-((Vmt + 80 )) / 14.19 ));
  qinft := 1 / (1 + exp((Vmt + 138.6 ) / 10.48 ));

  // Rate Rules:
  qt' = (qinft - qt) / tauqt;

  // Variable initializations:
  qt = 3.4357175e-3;
end

model pasek_simurda_christe_2006__i_Kft(i_Kft, gKft, time_, Vmt, E_Kt, E_Nat, qt)

  // Sub-modules, and any changes to those submodules:
  i_Kft_qt_gate: pasek_simurda_christe_2006__i_Kft_qt_gate(qt, Vmt, time_);

  // Assignment Rules:
  i_Kft := gKft * qt * (0.2 * (Vmt - E_Nat) + 0.8 * (Vmt - E_Kt));
end

model pasek_simurda_christe_2006__i_K1s(i_K1s, gK1s, time_, Vms, R, F, T, Ke, E_Ks)

  // Assignment Rules:
  i_K1s := gK1s * (Vms - E_Ks - 1.73 ) / (1 + exp(1.613 * F / (R * T) * (Vms - E_Ks - 1.73 )) * (1 + exp((Ke - 0.9988 ) / -(0.124 ))));
end

model pasek_simurda_christe_2006__i_K1t(i_K1t, gK1t, time_, Vmt, R, F, T, Kt, E_Kt)

  // Assignment Rules:
  i_K1t := gK1t * (Vmt - E_Kt - 1.73 ) / (1 + exp(1.613 * F / (R * T) * (Vmt - E_Kt - 1.73 )) * (1 + exp((Kt - 0.9988 ) / -(0.124 ))));
end

model pasek_simurda_christe_2006__i_Nabs(i_Nabs, gNabs, Vms, E_Nas)

  // Assignment Rules:
  i_Nabs := gNabs * (Vms - E_Nas);
end

model pasek_simurda_christe_2006__i_Nabt(i_Nabt, gNabt, Vmt, E_Nat)

  // Assignment Rules:
  i_Nabt := gNabt * (Vmt - E_Nat);
end

model pasek_simurda_christe_2006__i_Cabs(i_Cabs, gCabs, Vms, E_Cas)

  // Assignment Rules:
  i_Cabs := gCabs * (Vms - E_Cas);
end

model pasek_simurda_christe_2006__i_Cabt(i_Cabt, gCabt, Vmt, E_Cat)

  // Assignment Rules:
  i_Cabt := gCabt * (Vmt - E_Cat);
end

model pasek_simurda_christe_2006__i_Kbs(i_Kbs, gKbs, Vms, E_Ks)

  // Assignment Rules:
  i_Kbs := gKbs * (Vms - E_Ks);
end

model pasek_simurda_christe_2006__i_Kbt(i_Kbt, gKbt, Vmt, E_Kt)

  // Assignment Rules:
  i_Kbt := gKbt * (Vmt - E_Kt);
end

model pasek_simurda_christe_2006__i_NaCas(i_NaCas, i_NaCa_maxs, Nai, Nae, Cai, Cae, Vms)

  // Assignment Rules:
  i_NaCas := i_NaCa_maxs * (exp(0.0187 * Vms) * power(Nai, 3 ) * Cae - exp(-(0.0187 ) * Vms) * power(Nae, 3 ) * Cai) / (1 + 0.0001 * (power(Nae, 3 ) * Cai + power(Nai, 3 ) * Cae));
end

model pasek_simurda_christe_2006__i_NaCat(i_NaCat, i_NaCa_maxt, Nai, Nat, Cai, Cat, Vmt)

  // Assignment Rules:
  i_NaCat := i_NaCa_maxt * (exp(0.0187 * Vmt) * power(Nai, 3 ) * Cat - exp(-(0.0187 ) * Vmt) * power(Nat, 3 ) * Cai) / (1 + 0.0001 * (power(Nat, 3 ) * Cai + power(Nai, 3 ) * Cat));
end

model pasek_simurda_christe_2006__i_NaKs(i_NaKs, i_NaK_maxs, Ke, Nae, Nai, R, F, T, Vms)

  // Assignment Rules:
  i_NaKs := i_NaK_maxs / (1 + 0.1245 * exp(-(0.1 ) * Vms * F / (R * T)) + 0.0365 * 1 / 7 * (exp(Nae / 67.3 ) - 1 ) * exp(-(Vms) * F / (R * T))) * 1 / (1 + power(10 / Nai, 1.5 )) * Ke / (Ke + 1.5 );
end

model pasek_simurda_christe_2006__i_NaKt(i_NaKt, i_NaK_maxt, Kt, Nat, Nai, R, F, T, Vmt)

  // Assignment Rules:
  i_NaKt := i_NaK_maxt / (1 + 0.1245 * exp(-(0.1 ) * Vmt * F / (R * T)) + 0.0365 * 1 / 7 * (exp(Nat / 67.3 ) - 1 ) * exp(-(Vmt) * F / (R * T))) * 1 / (1 + power(10 / Nai, 1.5 )) * Kt / (Kt + 1.5 );
end

model pasek_simurda_christe_2006__i_pCas(i_pCas, i_pCa_maxs, Cai)

  // Assignment Rules:
  i_pCas := i_pCa_maxs * Cai / (0.0004 + Cai);
end

model pasek_simurda_christe_2006__i_pCat(i_pCat, i_pCa_maxt, Cai)

  // Assignment Rules:
  i_pCat := i_pCa_maxt * Cai / (0.0004 + Cai);
end

model pasek_simurda_christe_2006__t_tubular_ion_fluxes(JteNa, JteCa, JteK, Vt, Nat, Cat, Kt, Nae, Cae, Ke)

  // Assignment Rules:
  JteNa := 1 * Vt / tauNa * (Nat - Nae);
  JteCa := 1 * Vt / tauCa * (Cat - Cae);
  JteK := 1 * Vt / tauK * (Kt - Ke);

  // Variable initializations:
  tauNa = 0.15;
  tauCa = 0.5;
  tauK = 0.15;
end

model pasek_simurda_christe_2006__JCaSRup(JCaSRup, Cai, CaSRup, Vmyo)

  // Assignment Rules:
  JCaSRup := 1 * Vmyo * (0.04 * 10 * power(Cai / 0.000168 , 1.2 ) - 0.9 * CaSRup / 3.29 ) / (1 + power(Cai / 0.000168 , 1.2 ) + CaSRup / 3.29 );
end

model pasek_simurda_christe_2006__Jtr(Jtr, CaSRrel, CaSRup, VSRrel)

  // Assignment Rules:
  Jtr := 1 * VSRrel / tautr * (CaSRup - CaSRrel);

  // Variable initializations:
  tautr = 0.03448;
end

model pasek_simurda_christe_2006__JCaSRrel(JCaSRrel, time_, VSRrel, Cass, CaSRrel)

  // Assignment Rules:
  JCaSRrel := 1800 * VSRrel * (F2 + F3) * (CaSRrel - Cass);
  kap := 12.15E+12;
  kbp := 4.05E+9;

  // Rate Rules:
  F1' = F2 * kam - F1 * kap * power(Cass, 4 );
  F2' = F1 * kap * power(Cass, 4 ) + F3 * kbm + F4 * kcm - F2 * (kam + kbp * power(Cass, 3 ) + kcp);
  F3' = F2 * kbp * power(Cass, 3 ) - F3 * kbm;
  F4' = F2 * kcp - F4 * kcm;

  // Variable initializations:
  kam = 576;
  kbm = 1930;
  kcp = 18;
  kcm = 0.8;
  F1 = 6.7606483e-1;
  F2 = 3.8333331e-4;
  F3 = 6.4516879e-11;
  F4 = 3.2355462e-1;
end

model pasek_simurda_christe_2006__JCad(JCad, Cai, Cass, Vmyo)

  // Assignment Rules:
  JCad := 1 * (Cass - Cai) * Vmyo / taud;

  // Variable initializations:
  taud = 0.003125;
end

model pasek_simurda_christe_2006__CaSRup(CaSRup, JCaSRup, Jtr, VSRup, time_)

  // Rate Rules:
  CaSRup' = (JCaSRup - Jtr) / (1 * VSRup);

  // Variable initializations:
  CaSRup = 2.2755058e-1;
end

model pasek_simurda_christe_2006__CaSRrel(CaSRrel, Jtr, JCaSRrel, VSRrel, time_)

  // Rate Rules:
  CaSRrel' = 1 / (1 + 15 * 0.8 / power(0.8 + CaSRrel, 2 )) * (Jtr - JCaSRrel) / VSRrel;

  // Variable initializations:
  CaSRrel = 2.2638169e-1;
end

model pasek_simurda_christe_2006__ion_concentrations(Nai, Cai, Ki, Nat, Cat, Kt, Cass, Vd, VSRrel, VSRup, Vt, Vmyo, time_, F, i_Stim, i_Nas, i_Cas, i_Nabs, i_NaCas, i_NaKs, i_Kfs, i_Kbs, i_K1s, i_Ktos, i_Ksts, i_pCas, i_Cabs, i_Nat, i_Cat, i_Nabt, i_NaCat, i_NaKt, i_Kft, i_Kbt, i_K1t, i_Ktot, i_Kstt, i_pCat, i_Cabt, JCaSRup, JCaSRrel, JCad, Jtr, JteNa, JteCa, JteK)

  // Assignment Rules:
  dBTRH := 20000 * Cai * (1 - BTRH) - 0.07 * BTRH;
  dBTRL := 40000 * Cai * (1 - BTRL) - BTRL * 40;

  // Rate Rules:
  Nai' = -((i_Nas + i_Nat + i_Nabs + i_Nabt + 3 * i_NaCas + 3 * i_NaCat + 3 * i_NaKs + 3 * i_NaKt)) / (F * Vmyo);
  Cai' = 1 / (1 + 0.05 * 0.00238 / power(0.00238 + Cai, 2 )) * ((-(2 ) * (i_NaCas + i_NaCat) + i_Cabs + i_Cabt + i_pCas + i_pCat) / (-(2 ) * F * Vmyo) + 1 * (JCad - JCaSRup) / Vmyo - dBTRH * 0.14 - dBTRL * 0.07 );
  Ki' = -((-(i_Stim) + i_Kfs + i_Kft + i_Ksts + i_Kstt + i_K1s + i_K1t + i_Kbs + i_Kbt - 2 * i_NaKs - 2 * i_NaKt + i_Ktos + i_Ktot)) / (F * Vmyo);
  Nat' = ((i_Nat + i_Nabt + 3 * i_NaCat + 3 * i_NaKt) / F - 1 * JteNa) / Vt;
  Cat' = ((-(2 ) * i_NaCat + i_Cat + i_Cabt + i_pCat) / (2 * F) - 1 * JteCa) / Vt;
  Kt' = ((i_Kft + i_Kstt + i_K1t + i_Kbt - 2 * i_NaKt + i_Ktot) / F - 1 * JteK) / Vt;
  Cass' = 1 / (1 + 0.05 * 0.00238 / power(0.00238 + Cass, 2 )) * (-((i_Cas + i_Cat)) / (2 * F * Vd) + 1 * JCaSRrel / Vd - 1 * JCad / Vd);
  BTRH' = dBTRH;
  BTRL' = dBTRL;

  // Variable initializations:
  Nai = 6.9435814e0;
  Cai = 3.5486498e-5;
  Ki = 1.3753311e2;
  Nat = 1.4001386e2;
  Cat = 1.2271399e0;
  Kt = 5.3627676e0;
  Cass = 4.3112114e-5;
  BTRH = 9.2804169e-1;
  BTRL = 3.4317829e-2;
end

model pasek_simurda_christe_2006__Vms(Vms, Cms, i_circ, i_Stim, time_, i_Nas, i_Cas, i_Ktos, i_Ksts, i_Kfs, i_K1s, i_Nabs, i_Cabs, i_Kbs, i_NaKs, i_NaCas, i_pCas)

  // Rate Rules:
  Vms' = 1000 * (i_Stim + i_circ - (i_Nas + i_Cas + i_Ktos + i_Ksts + i_Kfs + i_K1s + i_Nabs + i_Cabs + i_Kbs + i_NaKs + i_NaCas + i_pCas)) / Cms;

  // Variable initializations:
  Vms = -7.9709547e1;
end

model pasek_simurda_christe_2006__Vmt(Vmt, Cmt, i_circ, time_, i_Nat, i_Cat, i_Ktot, i_Kstt, i_Kft, i_K1t, i_Nabt, i_Cabt, i_Kbt, i_NaKt, i_NaCat, i_pCat)

  // Rate Rules:
  Vmt' = 1000 * -((i_circ + i_Nat + i_Cat + i_Ktot + i_Kstt + i_Kft + i_K1t + i_Nabt + i_Cabt + i_Kbt + i_NaKt + i_NaCat + i_pCat)) / Cmt;

  // Variable initializations:
  Vmt = -7.9709536e1;
end

model pasek_simurda_christe_2006____main()

  // Sub-modules, and any changes to those submodules:
  environment: pasek_simurda_christe_2006__environment(time_);
  model_parameters: pasek_simurda_christe_2006__model_parameters(R, T, F, Nae, Cae, Ke, Vt, Vd, Vmyo, Sms, Smt, Cms, Cmt, Rst, VSRrel, VSRup);
  i_circ: pasek_simurda_christe_2006__i_circ(i_circ0, Rst, Vms0, Vmt0);
  i_Stim: pasek_simurda_christe_2006__i_Stim(i_Stim0, time_);
  membrane_permeabilities: pasek_simurda_christe_2006__membrane_permeabilities(gNas, gCas, gKfs, gKsts, gK1s, gKbs, gKtos, gNabs, gCabs, i_pCa_maxs, i_NaK_maxs, i_NaCa_maxs, gNat, gCat, gKft, gKstt, gK1t, gKbt, gKtot, gNabt, gCabt, i_pCa_maxt, i_NaK_maxt, i_NaCa_maxt, Sms, Smt);
  i_Nas: pasek_simurda_christe_2006__i_Nas(i_Nas0, E_Nas, gNas, Nai, Nae, Ki, Ke, R, F, T, time_, Vms0, m, h);
  i_Nat: pasek_simurda_christe_2006__i_Nat(i_Nat0, E_Nat, gNat, Nai, Nat, Ki, Kt, R, F, T, time_, Vmt0, m0, h0);
  i_Cas: pasek_simurda_christe_2006__i_Cas(i_Cas0, E_Cas, gCas, time_, R, T, F, Vms0, Cass, Cae, Cai);
  i_Cat: pasek_simurda_christe_2006__i_Cat(i_Cat0, E_Cat, gCat, time_, R, T, F, Vmt0, Cass, Cat, Cai);
  i_Ktos: pasek_simurda_christe_2006__i_Ktos(i_Ktos0, E_Ks, gKtos, time_, Vms0, R, F, T, Ke, Ki, rs, ss, sss);
  i_Ktot: pasek_simurda_christe_2006__i_Ktot(i_Ktot0, E_Kt, gKtot, time_, Vmt0, R, F, T, Kt, Ki, rt, st, sst);
  i_Ksts: pasek_simurda_christe_2006__i_Ksts(i_Ksts0, gKsts, time_, Vms0, E_Ks, rsts, ssts);
  i_Kstt: pasek_simurda_christe_2006__i_Kstt(i_Kstt0, gKstt, time_, Vmt0, E_Kt, rstt, sstt);
  i_Kfs: pasek_simurda_christe_2006__i_Kfs(i_Kfs0, gKfs, time_, Vms0, E_Ks, E_Nas, qs);
  i_Kft: pasek_simurda_christe_2006__i_Kft(i_Kft0, gKft, time_, Vmt0, E_Kt, E_Nat, qt);
  i_K1s: pasek_simurda_christe_2006__i_K1s(i_K1s0, gK1s, time_, Vms0, R, F, T, Ke, E_Ks);
  i_K1t: pasek_simurda_christe_2006__i_K1t(i_K1t0, gK1t, time_, Vmt0, R, F, T, Kt, E_Kt);
  i_Nabs: pasek_simurda_christe_2006__i_Nabs(i_Nabs0, gNabs, Vms0, E_Nas);
  i_Nabt: pasek_simurda_christe_2006__i_Nabt(i_Nabt0, gNabt, Vmt0, E_Nat);
  i_Cabs: pasek_simurda_christe_2006__i_Cabs(i_Cabs0, gCabs, Vms0, E_Cas);
  i_Cabt: pasek_simurda_christe_2006__i_Cabt(i_Cabt0, gCabt, Vmt0, E_Cat);
  i_Kbs: pasek_simurda_christe_2006__i_Kbs(i_Kbs0, gKbs, Vms0, E_Ks);
  i_Kbt: pasek_simurda_christe_2006__i_Kbt(i_Kbt0, gKbt, Vmt0, E_Kt);
  i_NaCas: pasek_simurda_christe_2006__i_NaCas(i_NaCas0, i_NaCa_maxs, Nai, Nae, Cai, Cae, Vms0);
  i_NaCat: pasek_simurda_christe_2006__i_NaCat(i_NaCat0, i_NaCa_maxt, Nai, Nat, Cai, Cat, Vmt0);
  i_NaKs: pasek_simurda_christe_2006__i_NaKs(i_NaKs0, i_NaK_maxs, Ke, Nae, Nai, R, F, T, Vms0);
  i_NaKt: pasek_simurda_christe_2006__i_NaKt(i_NaKt0, i_NaK_maxt, Kt, Nat, Nai, R, F, T, Vmt0);
  i_pCas: pasek_simurda_christe_2006__i_pCas(i_pCas0, i_pCa_maxs, Cai);
  i_pCat: pasek_simurda_christe_2006__i_pCat(i_pCat0, i_pCa_maxt, Cai);
  t_tubular_ion_fluxes: pasek_simurda_christe_2006__t_tubular_ion_fluxes(JteNa, JteCa, JteK, Vt, Nat, Cat, Kt, Nae, Cae, Ke);
  JCaSRup: pasek_simurda_christe_2006__JCaSRup(JCaSRup0, Cai, CaSRup0, Vmyo);
  Jtr: pasek_simurda_christe_2006__Jtr(Jtr0, CaSRrel0, CaSRup0, VSRrel);
  JCaSRrel: pasek_simurda_christe_2006__JCaSRrel(JCaSRrel0, time_, VSRrel, Cass, CaSRrel0);
  JCad: pasek_simurda_christe_2006__JCad(JCad0, Cai, Cass, Vmyo);
  CaSRup: pasek_simurda_christe_2006__CaSRup(CaSRup0, JCaSRup0, Jtr0, VSRup, time_);
  CaSRrel: pasek_simurda_christe_2006__CaSRrel(CaSRrel0, Jtr0, JCaSRrel0, VSRrel, time_);
  ion_concentrations: pasek_simurda_christe_2006__ion_concentrations(Nai, Cai, Ki, Nat, Cat, Kt, Cass, Vd, VSRrel, VSRup, Vt, Vmyo, time_, F, i_Stim0, i_Nas0, i_Cas0, i_Nabs0, i_NaCas0, i_NaKs0, i_Kfs0, i_Kbs0, i_K1s0, i_Ktos0, i_Ksts0, i_pCas0, i_Cabs0, i_Nat0, i_Cat0, i_Nabt0, i_NaCat0, i_NaKt0, i_Kft0, i_Kbt0, i_K1t0, i_Ktot0, i_Kstt0, i_pCat0, i_Cabt0, JCaSRup0, JCaSRrel0, JCad0, Jtr0, JteNa, JteCa, JteK);
  Vms: pasek_simurda_christe_2006__Vms(Vms0, Cms, i_circ0, i_Stim0, time_, i_Nas0, i_Cas0, i_Ktos0, i_Ksts0, i_Kfs0, i_K1s0, i_Nabs0, i_Cabs0, i_Kbs0, i_NaKs0, i_NaCas0, i_pCas0);
  Vmt: pasek_simurda_christe_2006__Vmt(Vmt0, Cmt, i_circ0, time_, i_Nat0, i_Cat0, i_Ktot0, i_Kstt0, i_Kft0, i_K1t0, i_Nabt0, i_Cabt0, i_Kbt0, i_NaKt0, i_NaCat0, i_pCat0);
end
