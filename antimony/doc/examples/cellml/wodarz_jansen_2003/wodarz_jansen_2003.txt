//Created by libAntimony v1.3
model wodarz_2003__environment(time_)
end

model wodarz_2003__T(T, C, time_)

  // Rate Rules:
  T' = r * T * (1 - T * 1 / k) - d * T - gamma * T * C;

  // Variable initializations:
  T = 0.1;
  k = 10;
  r = 0.5;
  d = 0.1;
  gamma = 1;
end

model wodarz_2003__A(A, alpha, T, time_)

  // Rate Rules:
  A' = lambda_ - delta_1 * A - alpha * A * T;

  // Variable initializations:
  A = 1;
  lambda_ = 1;
  delta_1 = 0.1;
end

model wodarz_2003__A_star(A_star, alpha, A, T, time_)

  // Rate Rules:
  A_star' = alpha * A * T - delta_2 * A_star;

  // Variable initializations:
  A_star = 2;
  delta_2 = 1.5;
end

model wodarz_2003__C(C, q, T, A_star, time_)

  // Rate Rules:
  C' = eta * A_star * C / (epsilon * C + 1 ) - q * T * C - mu * C;

  // Variable initializations:
  C = 0.015;
  eta = 2;
  epsilon = 1;
  q = 0.5;
  mu = 0.1;
end

model wodarz_2003__ratio(C, q, T, A_star)

  // Assignment Rules:
  R := C * A_star / (q * 1 * T);
end

model wodarz_2003__kinetic_parameters(alpha)

  // Variable initializations:
  alpha = 0.05;
end

model wodarz_2003____main()

  // Sub-modules, and any changes to those submodules:
  environment: wodarz_2003__environment(time_);
  T: wodarz_2003__T(T0, C0, time_);
  A: wodarz_2003__A(A0, alpha, T0, time_);
  A_star: wodarz_2003__A_star(A_star0, alpha, A0, T0, time_);
  C: wodarz_2003__C(C0, q, T0, A_star0, time_);
  ratio: wodarz_2003__ratio(C0, q, T0, A_star0);
  kinetic_parameters: wodarz_2003__kinetic_parameters(alpha);
end
