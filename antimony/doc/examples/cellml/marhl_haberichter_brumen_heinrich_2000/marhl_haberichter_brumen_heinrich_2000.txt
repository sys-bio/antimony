//Created by libAntimony v1.4
model marhl_2000__environment(time_)
end

model marhl_2000__total_calcium(Ca_Pr, rho_ER, beta_ER, rho_m, beta_m, Ca_cyt, Ca_ER, Ca_m)

  // Assignment Rules:
  Ca_Pr := Ca_tot - ( Ca_cyt + rho_ER / beta_ER * Ca_ER + rho_m / beta_m * Ca_m );

  // Variable initializations:
  Ca_tot = 90.0;
end

model marhl_2000__total_protein(Pr, Ca_Pr)

  // Assignment Rules:
  Pr := Pr_tot - Ca_Pr;

  // Variable initializations:
  Pr_tot = 120.0;
end

model marhl_2000__cytosolic_calcium(Ca_cyt, Pr, Ca_Pr, J_ch, J_leak, J_pump, J_out, J_in, time_)

  // Rate Rules:
  Ca_cyt' = J_ch + J_leak + J_out + k_minus * Ca_Pr - ( J_pump + J_in + k_plus * Ca_cyt * Pr );

  // Variable initializations:
  Ca_cyt = 0.05;
  k_plus = 0.1;
  k_minus = 0.01;
end

model marhl_2000__ER_calcium(Ca_ER, rho_ER, beta_ER, J_ch, J_leak, J_pump, time_)

  // Rate Rules:
  Ca_ER' = beta_ER / rho_ER * ( J_pump - ( J_ch + J_leak ));

  // Variable initializations:
  Ca_ER = 1.0;
  rho_ER = 0.01;
  beta_ER = 0.0025;
end

model marhl_2000__mitochondrial_calcium(Ca_m, rho_m, beta_m, J_in, J_out, time_)

  // Rate Rules:
  Ca_m' = beta_m / rho_m * ( J_in - J_out );

  // Variable initializations:
  Ca_m = 0.4;
  rho_m = 0.01;
  beta_m = 0.0025;
end

model marhl_2000__ATP_dependent_Ca_uptake_into_the_ER(J_pump, Ca_cyt)

  // Assignment Rules:
  J_pump := k_pump * Ca_cyt;

  // Variable initializations:
  k_pump = 20.0;
end

model marhl_2000__Ca_efflux_from_the_ER(J_ch, Ca_cyt, Ca_ER)

  // Assignment Rules:
  J_ch := k_ch * (power( Ca_cyt , 2.0 ) / (power( K1 , 2.0 ) + power( Ca_cyt , 2.0 ))) * ( Ca_ER - Ca_cyt );

  // Variable initializations:
  k_ch = 4100.0;
  K1 = 5.0;
end

model marhl_2000__Ca_leak_flux_from_the_ER(J_leak, Ca_cyt, Ca_ER)

  // Assignment Rules:
  J_leak := k_leak * ( Ca_ER - Ca_cyt );

  // Variable initializations:
  k_leak = 0.05;
end

model marhl_2000__mitochondrial_Ca_uptake(J_in, Ca_cyt)

  // Assignment Rules:
  J_in := k_in * (power( Ca_cyt , 8.0 ) / (power( K2 , 8.0 ) + power( Ca_cyt , 8.0 )));

  // Variable initializations:
  k_in = 300.0;
  K2 = 0.8;
end

model marhl_2000__mitochondrial_Ca_release(J_out, Ca_cyt, Ca_m)

  // Assignment Rules:
  J_out := ( k_out * (power( Ca_cyt , 2.0 ) / (power( K3 , 2.0 ) + power( Ca_cyt , 2.0 ))) + k_m ) * Ca_m;

  // Variable initializations:
  k_out = 125.0;
  k_m = 0.00625;
  K3 = 5.0;
end

model marhl_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: marhl_2000__environment(time_);
  total_calcium: marhl_2000__total_calcium(Ca_Pr, rho_ER, beta_ER, rho_m, beta_m, Ca_cyt, Ca_ER, Ca_m);
  total_protein: marhl_2000__total_protein(Pr, Ca_Pr);
  cytosolic_calcium: marhl_2000__cytosolic_calcium(Ca_cyt, Pr, Ca_Pr, J_ch, J_leak, J_pump, J_out, J_in, time_);
  ER_calcium: marhl_2000__ER_calcium(Ca_ER, rho_ER, beta_ER, J_ch, J_leak, J_pump, time_);
  mitochondrial_calcium: marhl_2000__mitochondrial_calcium(Ca_m, rho_m, beta_m, J_in, J_out, time_);
  ATP_dependent_Ca_uptake_into_the_ER: marhl_2000__ATP_dependent_Ca_uptake_into_the_ER(J_pump, Ca_cyt);
  Ca_efflux_from_the_ER: marhl_2000__Ca_efflux_from_the_ER(J_ch, Ca_cyt, Ca_ER);
  Ca_leak_flux_from_the_ER: marhl_2000__Ca_leak_flux_from_the_ER(J_leak, Ca_cyt, Ca_ER);
  mitochondrial_Ca_uptake: marhl_2000__mitochondrial_Ca_uptake(J_in, Ca_cyt);
  mitochondrial_Ca_release: marhl_2000__mitochondrial_Ca_release(J_out, Ca_cyt, Ca_m);
end
