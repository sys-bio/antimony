//Created by libAntimony v1.3
model cellmlmod_environment()

  //Other declarations:
  var time;
end

model cellmlmod_membrane()

  // Rate Rules:
   V ' = (-(( i_Na  +  i_Ca  +  i_to  +  i_K  +  i_K1  +  i_b_Na  +  i_b_Ca  +  i_NaCa  +  i_NaK )) + power( rho_x  *  S ,  -1.0  ) *  V_x2  + power( rho_y  *  S ,  -1.0  ) *  V_y2 ) /  Cm

  // Variable initializations:
  V = -90.2;
  R = 8314.0;
  T = 310.0;
  F = 96845.0;
  Cm = 153.4;
  x = 100.0;
  y = 22.0;
  rho_x = 180.0;
  rho_y = 180.0;
  S = 0.2;

  //Other declarations:
  var V, R, T, F, Cm, x, y, rho_x, rho_y, S, V_x2, V_y2, time, i_Na, i_Ca;
  var i_to, i_K, i_K1, i_b_Na, i_b_Ca, i_NaK, i_NaCa;
end

model cellmlmod_sodium_current()

  // Assignment Rules:
  i_Na := g_Na  * power( m ,  3.0  ) * power( v ,  2.0  ) * ( V  -  E_Na )
  E_Na := R  *  T  /  F  * ln( Na_e  /  Na_i )

  // Variable initializations:
  g_Na = 16.0;

  //Other declarations:
  var i_Na, E_Na, g_Na, Na_i, Na_e, R, F, T, time, V, m, v;
end

model cellmlmod_sodium_current_m_gate()

  // Assignment Rules:
  alpha_m := 0.32   * ( V  +  47.13  ) / ( 1.0   - exp( -0.1   * ( V  +  47.13  )))
  beta_m := 0.08   * exp(-( V ) /  11.0  )

  // Rate Rules:
   m ' = alpha_m  * ( 1.0   -  m ) -  beta_m  *  m

  //Other declarations:
  var m, alpha_m, beta_m, V, time;
end

model cellmlmod_sodium_current_v_gate()

  // Assignment Rules:
  v_infinity := 0.5   * ( 1.0   - tanh( 7.74   +  V  *  0.12  ))
  tau_v := 0.25   +  2.24   * (( 1.0   - tanh( 7.74   +  V  *  0.12  )) / ( 1.0   - tanh( 0.07   * ( V  +  92.4  ))))

  // Rate Rules:
   v ' = ( v_infinity  -  v ) /  tau_v

  //Other declarations:
  var v, v_infinity, tau_v, V, time;
end

model cellmlmod_calcium_current()

  // Assignment Rules:
  i_Ca := g_Ca  *  d_infinity  *  f  *  f_Ca  * ( V  -  E_Ca )
  E_Ca := R  *  T  / ( 2.0   *  F ) * ln( Ca_e  /  Ca_i )

  // Variable initializations:
  g_Ca = 0.064;

  //Other declarations:
  var i_Ca, E_Ca, g_Ca, Ca_e, R, F, T, time, V, Ca_i, d_infinity, f, f_Ca;
end

model cellmlmod_calcium_current_d_gate()

  // Assignment Rules:
  d_infinity := alpha_d  / ( alpha_d  +  beta_d )

  //Other declarations:
  var d_infinity, alpha_d, beta_d, V, time;
end

model cellmlmod_calcium_current_f_gate()

  // Assignment Rules:
  alpha_f := 6.87E-3   / ( 1.0   + exp(-(( 6.1546   -  V )) /  6.12  ))
  beta_f := ( 0.069   * exp( -11.0   * ( V  +  9.825  )) +  0.011  ) / ( 1.0   + exp( -0.278   * ( V  +  9.825  ))) +  5.75E-4

  // Rate Rules:
   f ' = alpha_f  * ( 1.0   -  f ) -  beta_f  *  f

  //Other declarations:
  var f, alpha_f, beta_f, V, time;
end

model cellmlmod_calcium_current_f_Ca_gate()

  // Assignment Rules:
  f_Ca := 1.0   / ( 1.0   +  Ca_i  /  0.0006  )

  //Other declarations:
  var f_Ca, Ca_i;
end

model cellmlmod_transient_outward_current()

  // Assignment Rules:
  i_to := g_to  *  r_infinity  *  to  * ( V  -  E_to )
  E_to := R  *  T  /  F  * ln(( 0.043   *  Na_e  +  K_e ) / ( 0.043   *  Na_i  +  K_i ))

  // Variable initializations:
  g_to = 0.4;

  //Other declarations:
  var i_to, g_to, E_to, Na_i, Na_e, K_i, K_e, R, F, T, V, time, to, r_infinity;
end

model cellmlmod_transient_outward_current_r_gate()

  // Assignment Rules:
  r_infinity := alpha_r  / ( alpha_r  +  beta_r )
  alpha_r := 0.5266   * exp(-( 0.0166  ) * ( V  -  42.2912  )) / ( 1.0   + exp(-( 0.0943  ) * ( V  -  42.2912  )))
  beta_r := ( 5.186E-5   *  V  +  0.5149   * exp(-( 0.1344  ) * ( V  -  5.0027  ))) / ( 1.0   + exp(-( 0.1348  ) * ( V  -  5.186E-5  )))

  //Other declarations:
  var r_infinity, alpha_r, beta_r, V, time;
end

model cellmlmod_transient_outward_current_to_gate()

  // Assignment Rules:
  alpha_to := ( 5.612E-5   *  V  +  0.0721   * exp( -0.173   * ( V  +  34.2531  ))) / ( 1.0   + exp( -0.1732   * ( V  +  34.2531  )))
  beta_to := ( 1.215E-4   *  V  +  0.0767   * exp( -1.66E-9   * ( V  +  34.0235  ))) / ( 1.0   + exp(-( 0.1604  ) * ( V  +  34.0235  )))
  to_infinity := alpha_to  * ( V  -  V_shift ) / ( alpha_to  * ( V  -  V_shift ) +  beta_to  * ( V  -  V_shift ))
  tau_to := 1.0   / ( p  *  alpha_to  *  V  +  p  *  beta_to  *  V )

  // Rate Rules:
   to ' = alpha_to  * ( 1.0   -  to ) -  beta_to  *  to

  // Variable initializations:
  V_shift = 0.0;
  p = 1.0;

  //Other declarations:
  var to, alpha_to, beta_to, to_infinity, tau_to, V_shift, p, V, time;
end

model cellmlmod_delayed_rectifier_potassium_current()

  // Assignment Rules:
  i_K := g_K  * power( X ,  2.0  ) * ( V  -  E_K )
  E_K := R  *  T  /  F  * ln( K_e  /  K_i )

  // Variable initializations:
  g_K = 0.019;

  //Other declarations:
  var i_K, E_K, g_K, K_i, K_e, R, F, T, time, V, X;
end

model cellmlmod_delayed_rectifier_potassium_current_X_gate()

  // Assignment Rules:
  X_infinity := 0.988   / ( 1.0   + exp( -0.861   -  V  *  0.0620  ))
  tau_X := 240.0   * exp(-(power( 25.5   +  V ,  2.0  )) /  156.0  ) +  182.0   * ( 1.0   + tanh( 0.154   +  0.0116   *  V )) +  tau_X_a
  tau_X_a := 40.0   * ( 1.0   - tanh( 160.0   +  2.0   *  V ))

  // Rate Rules:
   X ' = ( X_infinity  -  X ) /  tau_X

  //Other declarations:
  var X, X_infinity, tau_X, tau_X_a, V, time;
end

model cellmlmod_inward_rectifier_potassium_current()

  // Assignment Rules:
  i_K1 := g_K1  *  K1_infinity  * ( V  -  E_K )

  // Variable initializations:
  g_K1 = 3.9;

  //Other declarations:
  var i_K1, g_K1, E_K, time, V, K1_infinity;
end

model cellmlmod_inward_rectifier_potassium_current_K1_gate()

  // Assignment Rules:
  K1_infinity := alpha_K1  / ( alpha_K1  +  beta_K1 )
  alpha_K1 := 0.1   / ( 1.0   + exp( 0.06   * ( V  - ( E_K  +  200.0  ))))
  beta_K1 := ( 3.0   * exp( 2.0E-4   * ( V  +  100.0   + -( E_K ))) + exp( 0.1   * ( V  - ( 10.0   +  E_K )))) / ( 1.0   + exp(-( 0.5  ) * ( V  -  E_K )))

  //Other declarations:
  var K1_infinity, alpha_K1, beta_K1, E_K, V, time;
end

model cellmlmod_calcium_background_current()

  // Assignment Rules:
  i_b_Ca := g_b_Ca  * ( V  -  E_Ca )

  // Variable initializations:
  g_b_Ca = 0.00085;

  //Other declarations:
  var i_b_Ca, g_b_Ca, E_Ca, time, V;
end

model cellmlmod_sodium_background_current()

  // Assignment Rules:
  i_b_Na := g_b_Na  * ( V  -  E_Na )

  // Variable initializations:
  g_b_Na = 0.001;

  //Other declarations:
  var i_b_Na, g_b_Na, E_Na, time, V;
end

model cellmlmod_sodium_potassium_pump()

  // Assignment Rules:
  i_NaK := g_NaK  *  f_NaK  *  f_NaK_a
  f_NaK := 1.0   / ( 1.0   +  0.1245   * exp( -0.0037   *  V ) +  0.0365   *  sigma  * exp( -0.037   *  V ))
  f_NaK_a := 1.0   / ( 1.0   + power( 10.0   /  Na_i ,  1.5  )) * ( K_e  / ( K_e  +  1.5  ))
  sigma := 0.1428   * (exp( Na_e  /  67.3  ) -  1.0  )

  // Variable initializations:
  g_NaK = 1.3;

  //Other declarations:
  var i_NaK, g_NaK, f_NaK, f_NaK_a, sigma, Na_i, K_e, Na_e, V, time;
end

model cellmlmod_sodium_calcium_pump()

  // Assignment Rules:
  i_NaCa := g_NaCa  *  f_NaCa
  f_NaCa := power(power( 87.5  ,  3.0  ) + power( Na_e ,  3.0  ),  -1.0  ) * power( 1.38   +  Ca_e ,  -1.0  ) * power( 1.0   +  0.1   * exp( -0.024   *  V ),  -1.0  ) * (power( Na_i ,  3.0  ) *  Ca_e  * exp( 0.013   *  V ) - power( Na_e ,  3.0  ) *  Ca_i  * exp( -0.024   *  V ))

  // Variable initializations:
  g_NaCa = 1000.0;

  //Other declarations:
  var i_NaCa, f_NaCa, g_NaCa, Na_i, Na_e, Ca_i, Ca_e, V, time;
end

model cellmlmod_ionic_concentrations()

  // Variable initializations:
  Na_i = 10.0;
  Na_e = 138.0;
  Ca_i = 0.0004;
  Ca_e = 2.0;
  K_i = 140.0;
  K_e = 4.0;

  //Other declarations:
  var Na_i, Na_e, Ca_i, Ca_e, K_i, K_e;
end

model bernus_wilders_zemlin_verschelde_panfilov_2002_version01()

  // Sub-modules, and any changes to those submodules:
  environment: cellmlmod_environment()
  membrane: cellmlmod_membrane()
  sodium_current: cellmlmod_sodium_current()
  sodium_current_m_gate: cellmlmod_sodium_current_m_gate()
  sodium_current_v_gate: cellmlmod_sodium_current_v_gate()
  calcium_current: cellmlmod_calcium_current()
  calcium_current_d_gate: cellmlmod_calcium_current_d_gate()
  calcium_current_f_gate: cellmlmod_calcium_current_f_gate()
  calcium_current_f_Ca_gate: cellmlmod_calcium_current_f_Ca_gate()
  transient_outward_current: cellmlmod_transient_outward_current()
  transient_outward_current_r_gate: cellmlmod_transient_outward_current_r_gate()
  transient_outward_current_to_gate: cellmlmod_transient_outward_current_to_gate()
  delayed_rectifier_potassium_current: cellmlmod_delayed_rectifier_potassium_current()
  delayed_rectifier_potassium_current_X_gate: cellmlmod_delayed_rectifier_potassium_current_X_gate()
  inward_rectifier_potassium_current: cellmlmod_inward_rectifier_potassium_current()
  inward_rectifier_potassium_current_K1_gate: cellmlmod_inward_rectifier_potassium_current_K1_gate()
  calcium_background_current: cellmlmod_calcium_background_current()
  sodium_background_current: cellmlmod_sodium_background_current()
  sodium_potassium_pump: cellmlmod_sodium_potassium_pump()
  sodium_calcium_pump: cellmlmod_sodium_calcium_pump()
  ionic_concentrations: cellmlmod_ionic_concentrations()
  membrane.time is environment.time;
  sodium_current.time is environment.time;
  calcium_current.time is environment.time;
  transient_outward_current.time is environment.time;
  delayed_rectifier_potassium_current.time is environment.time;
  inward_rectifier_potassium_current.time is environment.time;
  inward_rectifier_potassium_current.K1_infinity is inward_rectifier_potassium_current_K1_gate.K1_infinity;
  inward_rectifier_potassium_current.E_K is inward_rectifier_potassium_current_K1_gate.E_K;
  inward_rectifier_potassium_current.V is inward_rectifier_potassium_current_K1_gate.V;
  environment.time is inward_rectifier_potassium_current_K1_gate.time;
  sodium_background_current.time is inward_rectifier_potassium_current_K1_gate.time;
  calcium_background_current.time is inward_rectifier_potassium_current_K1_gate.time;
  sodium_calcium_pump.time is inward_rectifier_potassium_current_K1_gate.time;
  sodium_potassium_pump.time is inward_rectifier_potassium_current_K1_gate.time;
  membrane.i_Na is sodium_current.i_Na;
  membrane.V is sodium_current.V;
  membrane.R is sodium_current.R;
  membrane.T is sodium_current.T;
  membrane.F is sodium_current.F;
  membrane.i_Ca is calcium_current.i_Ca;
  sodium_current.V is calcium_current.V;
  sodium_current.R is calcium_current.R;
  sodium_current.T is calcium_current.T;
  sodium_current.F is calcium_current.F;
  membrane.i_to is transient_outward_current.i_to;
  calcium_current.V is transient_outward_current.V;
  calcium_current.R is transient_outward_current.R;
  calcium_current.T is transient_outward_current.T;
  calcium_current.F is transient_outward_current.F;
  membrane.i_K is delayed_rectifier_potassium_current.i_K;
  transient_outward_current.V is delayed_rectifier_potassium_current.V;
  transient_outward_current.R is delayed_rectifier_potassium_current.R;
  transient_outward_current.T is delayed_rectifier_potassium_current.T;
  transient_outward_current.F is delayed_rectifier_potassium_current.F;
  membrane.i_K1 is inward_rectifier_potassium_current.i_K1;
  delayed_rectifier_potassium_current.V is inward_rectifier_potassium_current_K1_gate.V;
  inward_rectifier_potassium_current_K1_gate.V is sodium_background_current.V;
  membrane.i_b_Na is sodium_background_current.i_b_Na;
  sodium_background_current.V is calcium_background_current.V;
  membrane.i_b_Ca is calcium_background_current.i_b_Ca;
  membrane.i_NaCa is sodium_calcium_pump.i_NaCa;
  calcium_background_current.V is sodium_calcium_pump.V;
  membrane.i_NaK is sodium_potassium_pump.i_NaK;
  sodium_calcium_pump.V is sodium_potassium_pump.V;
  ionic_concentrations.Na_i is sodium_current.Na_i;
  ionic_concentrations.Na_e is sodium_current.Na_e;
  ionic_concentrations.Ca_i is calcium_current.Ca_i;
  ionic_concentrations.Ca_e is calcium_current.Ca_e;
  sodium_current.Na_i is transient_outward_current.Na_i;
  sodium_current.Na_e is transient_outward_current.Na_e;
  ionic_concentrations.K_i is transient_outward_current.K_i;
  ionic_concentrations.K_e is transient_outward_current.K_e;
  transient_outward_current.K_i is delayed_rectifier_potassium_current.K_i;
  transient_outward_current.K_e is delayed_rectifier_potassium_current.K_e;
  transient_outward_current.Na_i is sodium_potassium_pump.Na_i;
  delayed_rectifier_potassium_current.K_e is sodium_potassium_pump.K_e;
  transient_outward_current.Na_e is sodium_potassium_pump.Na_e;
  sodium_potassium_pump.Na_i is sodium_calcium_pump.Na_i;
  sodium_potassium_pump.Na_e is sodium_calcium_pump.Na_e;
  calcium_current.Ca_i is sodium_calcium_pump.Ca_i;
  calcium_current.Ca_e is sodium_calcium_pump.Ca_e;
  sodium_current.E_Na is sodium_background_current.E_Na;
  calcium_current.E_Ca is calcium_background_current.E_Ca;
  delayed_rectifier_potassium_current.E_K is inward_rectifier_potassium_current_K1_gate.E_K;
  delayed_rectifier_potassium_current.X is delayed_rectifier_potassium_current_X_gate.X;
  inward_rectifier_potassium_current_K1_gate.time is delayed_rectifier_potassium_current_X_gate.time;
  sodium_potassium_pump.V is delayed_rectifier_potassium_current_X_gate.V;
  sodium_current.m is sodium_current_m_gate.m;
  delayed_rectifier_potassium_current_X_gate.time is sodium_current_m_gate.time;
  delayed_rectifier_potassium_current_X_gate.V is sodium_current_m_gate.V;
  sodium_current.v is sodium_current_v_gate.v;
  sodium_current_m_gate.time is sodium_current_v_gate.time;
  sodium_current_m_gate.V is sodium_current_v_gate.V;
  calcium_current.d_infinity is calcium_current_d_gate.d_infinity;
  sodium_current_v_gate.time is calcium_current_d_gate.time;
  sodium_current_v_gate.V is calcium_current_d_gate.V;
  calcium_current.f is calcium_current_f_gate.f;
  calcium_current_d_gate.time is calcium_current_f_gate.time;
  calcium_current_d_gate.V is calcium_current_f_gate.V;
  sodium_calcium_pump.Ca_i is calcium_current_f_Ca_gate.Ca_i;
  calcium_current.f_Ca is calcium_current_f_Ca_gate.f_Ca;
  transient_outward_current.to is transient_outward_current_to_gate.to;
  calcium_current_f_gate.time is transient_outward_current_to_gate.time;
  calcium_current_f_gate.V is transient_outward_current_to_gate.V;
  transient_outward_current.r_infinity is transient_outward_current_r_gate.r_infinity;
  transient_outward_current_to_gate.time is transient_outward_current_r_gate.time;
  transient_outward_current_to_gate.V is transient_outward_current_r_gate.V;
end
