//Created by libAntimony v1.3
model Slow_Twitch__cell(time_)
end

model Slow_Twitch__sarco_Cl_channel(vS, V_a, A_a, Cl_i, Cl_o, FF, RR, TT, g_Cl_bar, I_Cl, time_)

  // Assignment Rules:
  a := 1 / ( 1 + exp(( vS - V_a ) / A_a ));
  J_Cl := vS * (( Cl_i - Cl_o * exp( FF * vS / ( RR * TT ))) / ( 1 - exp( FF * vS / ( RR * TT ))));
  g_Cl := g_Cl_bar * power( a , 4 );
  I_Cl := g_Cl * ( J_Cl / 45 );
end

model Slow_Twitch__sarco_IR_channel(K_e, del, E_K, vS, FF, RR, TT, G_K, K_K, K_S, S_i, I_IR, J_K, time_)

  // Assignment Rules:
  K_R := K_e * exp(-( del ) * E_K * ( FF / ( RR * TT )));
  g_IR_bar := G_K * (power( K_R , 2 ) / ( K_K + power( K_R , 2 )));
  y := 1 - power( 1 + K_S * ( 1 + power( K_R , 2 ) / K_K ) / (power( S_i , 2 ) * exp( 2 * ( 1 - del ) * vS * FF / ( RR * TT ))), -1 );
  g_IR := g_IR_bar * y;
  I_IR := g_IR * piecewise( 1 , J_K > 0 , 0 ) * ( J_K / 50 );
end

model Slow_Twitch__sarco_DR_channel(alpha_n_bar, V_n, K_alpha_n, beta_n_bar, K_beta_n, V_h_K_inf, A_h_K_inf, g_K_bar, I_DR, J_K, time_, vS)

  // Assignment Rules:
  alpha_n := alpha_n_bar * (( vS - V_n ) / ( 1 - exp(-((( vS - V_n ) / K_alpha_n )))));
  beta_n := beta_n_bar * exp(-((( vS - V_n ) / K_beta_n )));
  h_K_inf := 1 / ( 1 + exp(( vS - V_h_K_inf ) / A_h_K_inf ));
  tau_h_K := 1000 * exp(-((( vS + 40 ) / 25.75 )));
  g_DR := g_K_bar * power( n , 4 ) * h_K;
  I_DR := g_DR * ( J_K / 50 );

  // Rate Rules:
  n' = alpha_n * ( 1 - n ) - beta_n * n;
  h_K' = ( h_K_inf - h_K ) / tau_h_K;

  // Variable initializations:
  n = 0.009466;
  h_K = 0.9952;
end

model Slow_Twitch__sarco_Na_channel(vS, Na_i, Na_e, alpha_h_bar, V_h, K_alpha_h, beta_h_bar, K_beta_h, alpha_m_bar, V_m, K_alpha_m, beta_m_bar, K_beta_m, V_S_inf, A_S_inf, FF, RR, TT, V_tau, g_Na_bar, I_Na, time_)

  // Assignment Rules:
  alpha_h := alpha_h_bar * exp(-((( vS - V_h ) / K_alpha_h )));
  beta_h := beta_h_bar / ( 1 + exp(-((( vS - V_h ) / K_beta_h ))));
  alpha_m := alpha_m_bar * (( vS - V_m ) / ( 1 - exp(-((( vS - V_m ) / K_alpha_m )))));
  beta_m := beta_m_bar * exp(-((( vS - V_m ) / K_beta_m )));
  S_inf := 1 / ( 1 + exp(( vS - V_S_inf ) / A_S_inf ));
  tau_S := 8571 / ( 0.2 + 5.65 * power(( vS + V_tau ) / 100 , 2 ));
  g_Na := g_Na_bar * power( m , 3 ) * h * S;
  J_Na := vS * (( Na_i - Na_e * exp( -1 * FF * vS / ( RR * TT ))) / ( 1 - exp( -1 * FF * vS / ( RR * TT ))));
  I_Na := g_Na * ( J_Na / 75 );

  // Rate Rules:
  m' = alpha_m * ( 1 - m ) - beta_m * m;
  h' = alpha_h * ( 1 - h ) - beta_h * h;
  S' = ( S_inf - S ) / tau_S;

  // Variable initializations:
  m = 0.0358;
  h = 0.4981;
  S = 0.581;
end

model Slow_Twitch__sarco_NaK_channel(FF, RR, TT, K_m_K, K_m_Na, I_NaK, J_NaK_bar, K_e, Na_i, Na_e, time_, vS)

  // Assignment Rules:
  sig := 1 / 7 * (exp( Na_e / 67.3 ) - 1 );
  f1 := power( 1 + 0.12 * exp( -0.1 * vS * ( FF / ( RR * TT ))) + 0.04 * sig * exp(-(( vS * ( FF / ( RR * TT ))))), -1 );
  I_NaK_bar := FF * ( J_NaK_bar / (power( 1 + K_m_K / K_e , 2 ) * power( 1 + K_m_Na / Na_i , 3 )));
  I_NaK := I_NaK_bar * f1;
end

model Slow_Twitch__t_Cl_channel(vT, V_a, A_a, Cl_i_t, Cl_o_t, FF, RR, TT, g_Cl_bar, I_Cl_t, eta_Cl, time_)

  // Assignment Rules:
  a_t := 1 / ( 1 + exp(( vT - V_a ) / A_a ));
  J_Cl_t := vT * (( Cl_i_t - Cl_o_t * exp( FF * vT / ( RR * TT ))) / ( 1 - exp( FF * vT / ( RR * TT ))));
  I_Cl_t := eta_Cl * g_Cl_t * ( J_Cl_t / 45 );
  g_Cl_t := g_Cl_bar * power( a_t , 4 );
end

model Slow_Twitch__t_IR_channel(K_t, del, E_K_t, vT, FF, RR, TT, G_K, K_K, K_S, S_i, I_IR_t, J_K_t, eta_IR, time_)

  // Assignment Rules:
  K_R_t := K_t * exp(-( del ) * E_K_t * ( FF / ( RR * TT )));
  g_IR_bar_t := G_K * (power( K_R_t , 2 ) / ( K_K + power( K_R_t , 2 )));
  y_t := 1 - power( 1 + K_S * ( 1 + power( K_R_t , 2 ) / K_K ) / (power( S_i , 2 ) * exp( 2 * ( 1 - del ) * vT * FF / ( RR * TT ))), -1 );
  g_IR_t := g_IR_bar_t * y_t;
  I_IR_t := eta_IR * g_IR_t * ( J_K_t / 50 );
end

model Slow_Twitch__t_DR_channel(alpha_n_bar, V_n, K_alpha_n, beta_n_bar, K_beta_n, V_h_K_inf, A_h_K_inf, g_K_bar, I_DR_t, J_K_t, eta_DR, time_, vT)

  // Assignment Rules:
  alpha_n_t := alpha_n_bar * (( vT - V_n ) / ( 1 - exp(-((( vT - V_n ) / K_alpha_n )))));
  beta_n_t := beta_n_bar * exp(-((( vT - V_n ) / K_beta_n )));
  h_K_inf_t := 1 / ( 1 + exp(( vT - V_h_K_inf ) / A_h_K_inf ));
  tau_h_K_t := 1 * exp(-((( vT + 40 ) / 25.75 )));
  g_DR_t := g_K_bar * power( n_t , 4 ) * h_K_t;
  I_DR_t := eta_DR * g_DR_t * ( J_K_t / 50 );

  // Rate Rules:
  n_t' = alpha_n_t * ( 1 - n_t ) - beta_n_t * n_t;
  h_K_t' = ( h_K_inf_t - h_K_t ) / tau_h_K_t;

  // Variable initializations:
  n_t = 0.009466;
  h_K_t = 0.9952;
end

model Slow_Twitch__t_Na_channel(vT, Na_i, Na_t, alpha_h_bar, V_h, K_alpha_h, beta_h_bar, K_beta_h, alpha_m_bar, V_m, K_alpha_m, beta_m_bar, K_beta_m, V_S_inf, A_S_inf, FF, RR, TT, V_tau, g_Na_bar, I_Na_t, eta_Na, time_)

  // Assignment Rules:
  alpha_h_t := alpha_h_bar * exp(-((( vT - V_h ) / K_alpha_h )));
  beta_h_t := beta_h_bar / ( 1 + exp(-((( vT - V_h ) / K_beta_h ))));
  alpha_m_t := alpha_m_bar * (( vT - V_m ) / ( 1 - exp(-((( vT - V_m ) / K_alpha_m )))));
  beta_m_t := beta_m_bar * exp(-((( vT - V_m ) / K_beta_m )));
  S_inf_t := 1 / ( 1 + exp(( vT - V_S_inf ) / A_S_inf ));
  tau_S_t := 8571 / ( 0.2 + 5.65 * power(( vT + V_tau ) / 100 , 2 ));
  g_Na_t := g_Na_bar * power( m_t , 3 ) * h_t * S_t;
  J_Na_t := vT * (( Na_i - Na_t * exp( -1 * FF * vT / ( RR * TT ))) / ( 1 - exp( -1 * FF * vT / ( RR * TT ))));
  I_Na_t := eta_Na * g_Na_t * ( J_Na_t / 75 );

  // Rate Rules:
  m_t' = alpha_m_t * ( 1 - m_t ) - beta_m_t * m_t;
  h_t' = alpha_h_t * ( 1 - h_t ) - beta_h_t * h_t;
  S_t' = ( S_inf_t - S_t ) / tau_S_t;

  // Variable initializations:
  m_t = 0.0358;
  h_t = 0.4981;
  S_t = 0.581;
end

model Slow_Twitch__t_NaK_channel(FF, RR, TT, K_m_K, K_m_Na, I_NaK_t, J_NaK_bar, K_t, Na_i, Na_t, eta_NaK, time_, vT)

  // Assignment Rules:
  sig_t := 1 / 7 * (exp( Na_t / 67.3 ) - 1 );
  f1_t := power( 1 + 0.12 * exp( -0.1 * vT * ( FF / ( RR * TT ))) + 0.04 * sig_t * exp(-(( vT * ( FF / ( RR * TT ))))), -1 );
  I_NaK_bar_t := FF * ( J_NaK_bar / (power( 1 + K_m_K / K_t , 2 ) * power( 1 + K_m_Na / Na_i , 3 )));
  I_NaK_t := eta_NaK * I_NaK_bar_t * f1_t;
end

model Slow_Twitch__wal_environment(FF, alpha_h_bar, alpha_m_bar, alpha_n_bar, beta_h_bar, beta_m_bar, beta_n_bar, V_m, V_n, V_h, V_a, V_S_inf, V_h_K_inf, A_a, A_S_inf, A_h_K_inf, K_alpha_h, K_beta_h, K_alpha_m, K_alpha_n, K_beta_m, K_beta_n, RR, TT, g_Cl_bar, g_K_bar, g_Na_bar, G_K, del, K_K, K_S, K_m_K, K_m_Na, S_i, J_NaK_bar, V_tau, I_T, vS, vT, K_t, K_i, K_e, Na_i, Na_t, Na_e, E_K, E_K_t, Cl_i, Cl_o, Cl_i_t, Cl_o_t, J_K, J_K_t, eta_Cl, eta_IR, eta_DR, eta_Na, eta_NaK, I_Cl, I_IR, I_DR, I_Na, I_NaK, I_Cl_t, I_IR_t, I_DR_t, I_Na_t, I_NaK_t, time_)

  // Sub-modules, and any changes to those submodules:
  sarco_Cl_channel: Slow_Twitch__sarco_Cl_channel(vS, V_a, A_a, Cl_i, Cl_o, FF, RR, TT, g_Cl_bar, I_Cl, time_);
  sarco_IR_channel: Slow_Twitch__sarco_IR_channel(K_e, del, E_K, vS, FF, RR, TT, G_K, K_K, K_S, S_i, I_IR, J_K, time_);
  sarco_DR_channel: Slow_Twitch__sarco_DR_channel(alpha_n_bar, V_n, K_alpha_n, beta_n_bar, K_beta_n, V_h_K_inf, A_h_K_inf, g_K_bar, I_DR, J_K, time_, vS);
  sarco_Na_channel: Slow_Twitch__sarco_Na_channel(vS, Na_i, Na_e, alpha_h_bar, V_h, K_alpha_h, beta_h_bar, K_beta_h, alpha_m_bar, V_m, K_alpha_m, beta_m_bar, K_beta_m, V_S_inf, A_S_inf, FF, RR, TT, V_tau, g_Na_bar, I_Na, time_);
  sarco_NaK_channel: Slow_Twitch__sarco_NaK_channel(FF, RR, TT, K_m_K, K_m_Na, I_NaK, J_NaK_bar, K_e, Na_i, Na_e, time_, vS);
  t_Cl_channel: Slow_Twitch__t_Cl_channel(vT, V_a, A_a, Cl_i_t, Cl_o_t, FF, RR, TT, g_Cl_bar, I_Cl_t, eta_Cl, time_);
  t_IR_channel: Slow_Twitch__t_IR_channel(K_t, del, E_K_t, vT, FF, RR, TT, G_K, K_K, K_S, S_i, I_IR_t, J_K_t, eta_IR, time_);
  t_DR_channel: Slow_Twitch__t_DR_channel(alpha_n_bar, V_n, K_alpha_n, beta_n_bar, K_beta_n, V_h_K_inf, A_h_K_inf, g_K_bar, I_DR_t, J_K_t, eta_DR, time_, vT);
  t_Na_channel: Slow_Twitch__t_Na_channel(vT, Na_i, Na_t, alpha_h_bar, V_h, K_alpha_h, beta_h_bar, K_beta_h, alpha_m_bar, V_m, K_alpha_m, beta_m_bar, K_beta_m, V_S_inf, A_S_inf, FF, RR, TT, V_tau, g_Na_bar, I_Na_t, eta_Na, time_);
  t_NaK_channel: Slow_Twitch__t_NaK_channel(FF, RR, TT, K_m_K, K_m_Na, I_NaK_t, J_NaK_bar, K_t, Na_i, Na_t, eta_NaK, time_, vT);

  // Assignment Rules:
  I_T := 1000 / 1 * (( vS - vT ) / R_a );
  I_ionic_s := I_Cl + I_IR + I_DR + I_Na + I_NaK + -( I_HH );
  I_ionic_t := I_Cl_t + I_IR_t + I_DR_t + I_Na_t + I_NaK_t;
  E_K := RR * TT / FF * ln( K_e / K_i );
  E_K_t := RR * TT / FF * ln( K_t / K_i );
  Cl_i := 156.5 / ( 5 + exp(-( FF ) * E_K / ( RR * TT )));
  Cl_o := 156.5 - 5 * Cl_i;
  Cl_i_t := 156.5 / ( 5 + exp(-( FF ) * E_K_t / ( RR * TT )));
  Cl_o_t := 156.5 - 5 * Cl_i_t;
  J_K := vS * (( K_i - K_e * exp( -1 * FF * vS / ( RR * TT ))) / ( 1 - exp( -1 * FF * vS / ( RR * TT ))));
  J_K_t := vT * (( K_i - K_t * exp( -1 * FF * vT / ( RR * TT ))) / ( 1 - exp( -1 * FF * vT / ( RR * TT ))));
  I_HH := piecewise( 150 , ( time_ >= 0) && (time_ < 0.5 ), 150 , ( time_ >= 50) && (time_ < 50.5 ), 150 , ( time_ >= 100) && (time_ < 100.5 ), 150 , ( time_ >= 150) && (time_ < 150.5 ), 150 , ( time_ >= 200) && (time_ < 200.5 ), 150 , ( time_ >= 250) && (time_ < 250.5 ), 150 , ( time_ >= 300) && (time_ < 300.5 ), 150 , ( time_ >= 350) && (time_ < 350.5 ), 150 , ( time_ >= 400) && (time_ < 400.5 ), 0 );

  // Rate Rules:
  vS' = -((( I_ionic_s + I_T ) / C_m ));
  vT' = -((( I_ionic_t - I_T / gam ) / C_m ));
  K_t' = ( I_IR_t + I_DR_t + I_K_rest + -( 2 ) * I_NaK_t ) / ( 1000 / 1 * FF * tsi ) - ( K_t - K_e ) / tau_K;
  K_i' = -( f_T ) * (( I_IR_t + I_DR_t + I_K_rest + -( 2 ) * I_NaK_t ) / ( 1000 / 1 * FF * tsi )) - ( I_IR + I_DR + I_K_rest + -2 * I_NaK ) / ( 1000 / 1 * FF * tsi2 );
  K_e' = ( I_IR + I_DR + I_K_rest + -( 2 ) * I_NaK ) / ( 1000 / 1 * FF * tsi3 ) + ( K_t - K_e ) / tau_K2;
  Na_i' = -( f_T ) * (( I_Na_t + I_Na_rest + 3 * I_NaK_t ) / ( 1000 / 1 * FF * tsi )) - ( I_Na + I_Na_rest + 3 * I_NaK ) / ( 1000 / 1 * FF * tsi2 );
  Na_t' = ( I_Na_t + I_Na_rest + 3 * I_NaK_t ) / ( 1000 / 1 * FF * tsi ) - ( Na_t - Na_e ) / tau_Na;
  Na_e' = ( I_Na + I_Na_rest + 3 * I_NaK ) / ( 1000 / 1 * FF * tsi3 ) + ( Na_t - Na_e ) / tau_Na2;

  // Variable initializations:
  C_m = 0.58;
  gam = 2.79;
  R_a = 150;
  tsi = 0.000001;
  tsi2 = 0.0025;
  tsi3 = 0.0005;
  FF = 96485;
  tau_K = 559;
  tau_Na = 559;
  f_T = 0.00174;
  tau_K2 = 40229.885;
  tau_Na2 = 40229.885;
  I_K_rest = 0.34;
  I_Na_rest = -0.43;
  alpha_h_bar = 0.0081;
  alpha_m_bar = 0.288;
  alpha_n_bar = 0.0131;
  beta_h_bar = 4.38;
  beta_m_bar = 1.38;
  beta_n_bar = 0.067;
  V_m = -46;
  V_n = -40;
  V_h = -45;
  V_a = 70;
  V_S_inf = -68;
  V_h_K_inf = -40;
  A_a = 150;
  A_S_inf = 7.1;
  A_h_K_inf = 7.5;
  K_alpha_h = 14.7;
  K_beta_h = 9;
  K_alpha_m = 10;
  K_alpha_n = 7;
  K_beta_m = 18;
  K_beta_n = 40;
  RR = 8314.41;
  TT = 293;
  g_Cl_bar = 3.275;
  g_K_bar = 10.8;
  g_Na_bar = 134;
  G_K = 1.85;
  del = 0.4;
  K_K = 950;
  K_S = 1;
  K_m_K = 1;
  K_m_Na = 13;
  S_i = 10;
  J_NaK_bar = 0.0001656;
  V_tau = 70;
  vS = -79.974;
  vT = -80.2;
  K_t = 5.9;
  K_i = 150.9;
  K_e = 5.9;
  Na_i = 12.7;
  Na_t = 133;
  Na_e = 133;
  eta_Cl = 0.1;
  eta_IR = 1.0;
  eta_DR = 0.45;
  eta_Na = 0.1;
  eta_NaK = 0.1;
end

model Slow_Twitch__sternrios(O_0, O_1, O_2, O_3, O_4, time_, vT)

  // Assignment Rules:
  k_C := 0.5 * alpha1 * exp(( vT - Vbar ) / ( 8 * K ));
  k_Cm := 0.5 * alpha1 * exp(( Vbar - vT ) / ( 8 * K ));

  // Rate Rules:
  O_0' = k_L * C_0 + -( k_Lm ) * O_0 + -4 * k_C * O_0 / f + f * k_Cm * O_1;
  O_1' = k_L * C_1 / f + -( k_Lm ) * f * O_1 + 4 * k_C * O_0 / f + -( f ) * k_Cm * O_1 + -3 * k_C * O_1 / f + 2 * f * k_Cm * O_2;
  O_2' = 3 * k_C * O_1 / f + -2 * f * k_Cm * O_2 + k_L * C_2 / power( f , 2 ) + -( k_Lm ) * power( f , 2 ) * O_2 + -2 * k_C * O_2 / f + 3 * f * k_Cm * O_3;
  O_3' = k_L * C_3 / power( f , 3 ) + -( k_Lm ) * power( f , 3 ) * O_3 + 2 * k_C * O_2 / f + -3 * k_Cm * f * O_3 + -( k_C ) * O_3 / f + 4 * f * k_Cm * O_4;
  O_4' = k_C * O_3 / f + -4 * f * k_Cm * O_4 + k_L * C_4 / power( f , 4 ) + -( k_Lm ) * power( f , 4 ) * O_4;
  C_0' = -( k_L ) * C_0 + k_Lm * O_0 + -4 * k_C * C_0 + k_Cm * C_1;
  C_1' = 4 * k_C * C_0 + -( k_Cm ) * C_1 + -( k_L ) * C_1 / f + f * k_Lm * O_1 + -3 * k_C * C_1 + 2 * k_Cm * C_2;
  C_2' = 3 * k_C * C_1 + -2 * k_Cm * C_2 + -( k_L ) * C_2 / power( f , 2 ) + power( f , 2 ) * k_Lm * O_2 + -2 * k_C * C_2 + 3 * k_Cm * C_3;
  C_3' = 2 * k_C * C_2 + -3 * k_Cm * C_3 + -( k_L ) * C_3 / power( f , 3 ) + k_Lm * power( f , 3 ) * O_3 + -( k_C ) * C_3 + 4 * k_Cm * C_4;
  C_4' = k_C * C_3 + -4 * k_Cm * C_4 + -( k_L ) * C_4 / power( f , 4 ) + k_Lm * power( f , 4 ) * O_4;

  // Variable initializations:
  O_0 = 0;
  O_1 = 0;
  O_2 = 0;
  O_3 = 0;
  O_4 = 0;
  k_L = 0.002;
  k_Lm = 1000;
  f = 0.2;
  alpha1 = 0.2;
  K = 4.5;
  Vbar = -20;
  C_0 = 1;
  C_1 = 0;
  C_2 = 0;
  C_3 = 0;
  C_4 = 0;
end

model Slow_Twitch__razumova(Ca_1, time_, O_0, O_1, O_2, O_3, O_4)

  // Assignment Rules:
  V_o := 0.95 * L_x * pi * power( R_R , 2 );
  V_1 := 0.01 * V_o;
  V_2 := 0.99 * V_o;
  V_SR := 0.05 * L_x * pi * power( R_R , 2 );
  V_SR1 := 0.01 * V_SR;
  V_SR2 := 0.99 * V_SR;
  T_0 := T_tot + -( Ca_T_2 ) + -( Ca_CaT2 ) + -( D_0 ) + -( D_1 ) + -( D_2 ) + -( A_1 ) + -( A_2 );

  // Rate Rules:
  Ca_1' = i2 * ( O_0 + O_1 + O_2 + O_3 + O_4 ) * (( Ca_SR1 - Ca_1 ) / V_1 ) - nu_SR * ( Ca_1 / ( Ca_1 + K_SR ) / V_1 ) + L_e * (( Ca_SR1 - Ca_1 ) / V_1 ) + -( tau_R ) * (( Ca_1 - Ca_2 ) / V_1 ) + -(( k_P_on * Ca_1 * ( P_tot + -( Ca_P1 ) + -( Mg_P1 )) + -( k_P_off ) * Ca_P1 )) + -(( k_CATP_on * Ca_1 * ATP1 + -( k_CATP_off ) * Ca_ATP1 ));
  Ca_SR1' = -(( i2 * ( O_0 + O_1 + O_2 + O_3 + O_4 ))) * (( Ca_SR1 - Ca_1 ) / V_SR1 ) + nu_SR * ( Ca_1 / ( Ca_1 + K_SR ) / V_SR1 ) + -( L_e ) * (( Ca_SR1 - Ca_1 ) / V_SR1 ) + -( tau_SR_R ) * (( Ca_SR1 - Ca_SR2 ) / V_SR1 ) + -(( k_Cs_on * Ca_SR1 * ( Cs_tot - Ca_Cs1 ) + -( k_Cs_off ) * Ca_Cs1 ));
  Ca_2' = -( nu_SR ) * ( Ca_2 / ( Ca_2 + K_SR ) / V_2 ) + L_e * (( Ca_SR2 + -( Ca_2 )) / V_2 ) + tau_R * (( Ca_1 - Ca_2 ) / V_2 ) + -(( k_T_on * Ca_2 * T_0 + -( k_T_off ) * Ca_T_2 + k_T_on * Ca_2 * Ca_T_2 + -( k_T_off ) * Ca_CaT2 + k_T_on * Ca_2 * D_0 + -( k_T_off ) * D_1 + k_T_on * Ca_2 * D_1 + -( k_T_off ) * D_2 )) + -(( k_P_on * Ca_2 * ( P_tot + -( Ca_P2 ) + -( Mg_P2 )) + -( k_P_off ) * Ca_P2 )) + -(( k_CATP_on * Ca_2 * ATP2 + -( k_CATP_off ) * Ca_ATP2 ));
  Ca_SR2' = nu_SR * ( Ca_2 / ( Ca_2 + K_SR ) / V_SR2 ) + -( L_e ) * (( Ca_SR2 + -( Ca_2 )) / V_SR2 ) + tau_SR_R * (( Ca_SR1 + -( Ca_SR2 )) / V_SR2 ) + -(( k_Cs_on * Ca_SR2 * ( Cs_tot + -( Ca_Cs2 )) + -( k_Cs_off ) * Ca_Cs2 )) - 1000 / 1 * ( A_p * ( P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP ) * piecewise( 1 , P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP > 0 , 0 ) * ( 0.001 / 1 ) * P_SR * Ca_SR2 - B_p * P_C_SR * ( PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 ) * piecewise( 1 , PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 > 0 , 0 ));
  Ca_T_2' = k_T_on * Ca_2 * T_0 + -( k_T_off ) * Ca_T_2 + -( k_T_on ) * Ca_2 * Ca_T_2 + k_T_off * Ca_CaT2 + -( k_0_on ) * Ca_T_2 + k_0_off * D_1;
  Ca_P1' = k_P_on * Ca_1 * ( P_tot + -( Ca_P1 ) + -( Mg_P1 )) + -( k_P_off ) * Ca_P1;
  Ca_P2' = k_P_on * Ca_2 * ( P_tot + -( Ca_P2 ) + -( Mg_P2 )) + -( k_P_off ) * Ca_P2;
  Mg_P1' = k_Mg_on * ( P_tot + -( Ca_P1 ) + -( Mg_P1 )) * Mg1 + -( k_Mg_off ) * Mg_P1;
  Mg_P2' = k_Mg_on * ( P_tot + -( Ca_P2 ) + -( Mg_P2 )) * Mg2 + -( k_Mg_off ) * Mg_P2;
  Ca_Cs1' = k_Cs_on * Ca_SR1 * ( Cs_tot + -( Ca_Cs1 )) + -( k_Cs_off ) * Ca_Cs1;
  Ca_Cs2' = k_Cs_on * Ca_SR2 * ( Cs_tot + -( Ca_Cs2 )) + -( k_Cs_off ) * Ca_Cs2;
  Ca_ATP1' = k_CATP_on * Ca_1 * ATP1 + -( k_CATP_off ) * Ca_ATP1 + -( tau_ATP ) * (( Ca_ATP1 + -( Ca_ATP2 )) / V_1 );
  Ca_ATP2' = k_CATP_on * Ca_2 * ATP2 + -( k_CATP_off ) * Ca_ATP2 + tau_ATP * (( Ca_ATP1 + -( Ca_ATP2 )) / V_2 );
  Mg_ATP1' = k_MATP_on * Mg1 * ATP1 + -( k_MATP_off ) * Mg_ATP1 + -( tau_ATP ) * (( Mg_ATP1 + -( Mg_ATP2 )) / V_1 );
  Mg_ATP2' = k_MATP_on * Mg2 * ATP2 + -( k_MATP_off ) * Mg_ATP2 + tau_ATP * (( Mg_ATP1 + -( Mg_ATP2 )) / V_2 );
  ATP1' = -(( k_CATP_on * Ca_1 * ATP1 + -( k_CATP_off ) * Ca_ATP1 )) + -(( k_MATP_on * Mg1 * ATP1 + -( k_MATP_off ) * Mg_ATP1 )) + -( tau_ATP ) * (( ATP1 + -( ATP2 )) / V_1 );
  ATP2' = -(( k_CATP_on * Ca_2 * ATP2 + -( k_CATP_off ) * Ca_ATP2 )) + -(( k_MATP_on * Mg2 * ATP2 + -( k_MATP_off ) * Mg_ATP2 )) + tau_ATP * (( ATP1 + -( ATP2 )) / V_2 );
  Mg1' = -(( k_Mg_on * ( P_tot + -( Ca_P1 ) + -( Mg_P1 )) * Mg1 + -( k_Mg_off ) * Mg_P1 )) + -(( k_MATP_on * Mg1 * ATP1 + -( k_MATP_off ) * Mg_ATP1 )) + -( tau_Mg ) * (( Mg1 + -( Mg2 )) / V_1 );
  Mg2' = -(( k_Mg_on * ( P_tot + -( Ca_P2 ) + -( Mg_P2 )) * Mg2 + -( k_Mg_off ) * Mg_P2 )) + -(( k_MATP_on * Mg2 * ATP2 + -( k_MATP_off ) * Mg_ATP2 )) + tau_Mg * (( Mg1 + -( Mg2 )) / V_2 );
  Ca_CaT2' = k_T_on * Ca_2 * Ca_T_2 + -( k_T_off ) * Ca_CaT2 + -( k_Ca_on ) * Ca_CaT2 + k_Ca_off * D_2;
  D_0' = -( k_T_on ) * Ca_2 * D_0 + k_T_off * D_1 + k_0_on * T_0 + -( k_0_off ) * D_0;
  D_1' = k_T_on * Ca_2 * D_0 + -( k_T_off ) * D_1 + k_0_on * Ca_T_2 + -( k_0_off ) * D_1 + -( k_T_on ) * Ca_2 * D_1 + k_T_off * D_2;
  D_2' = k_T_on * Ca_2 * D_1 + -( k_T_off ) * D_2 + k_Ca_on * Ca_CaT2 + -( k_Ca_off ) * D_2 + -( f_o ) * D_2 + f_p * A_1 + g_o * A_2;
  A_1' = f_o * D_2 + -( f_p ) * A_1 + h_p * A_2 + -( h_o ) * A_1;
  A_2' = -( h_p ) * A_2 + h_o * A_1 + -( g_o ) * A_2;
  P' = 0.001 / 1 * ( h_o * A_1 - h_p * A_2 ) + -1 * b_p * P + -1 * k_p * (( P - P_SR ) / V_2 );
  P_SR' = k_p * (( P - P_SR ) / V_SR2 ) - 1 * ( A_p * ( P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP ) * piecewise( 1 , P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP > 0 , 0 ) * ( 0.001 / 1 ) * P_SR * Ca_SR2 - B_p * P_C_SR * ( PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 ) * piecewise( 1 , PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 > 0 , 0 ));
  P_C_SR' = 1 * ( A_p * ( P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP ) * piecewise( 1 , P_SR * ( 0.001 / 1 ) * Ca_SR2 - PP > 0 , 0 ) * ( 0.001 / 1 ) * P_SR * Ca_SR2 - B_p * P_C_SR * ( PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 ) * piecewise( 1 , PP - P_SR * ( 0.001 / 1 ) * Ca_SR2 > 0 , 0 ));

  // Variable initializations:
  nu_SR = 2.4375;
  K_SR = 1;
  L_e = 0.00004;
  tau_R = 0.75;
  tau_SR_R = 0.75;
  L_x = 1.1;
  R_R = 0.5;
  k_T_on = 0.0885;
  k_T_off = 0.115;
  T_tot = 140;
  k_P_on = 0;
  k_P_off = 0;
  P_tot = 1500;
  k_Mg_on = 0;
  k_Mg_off = 0;
  k_Cs_on = 0.000004;
  k_Cs_off = 0.005;
  Cs_tot = 31000;
  k_CATP_on = 0.15;
  k_CATP_off = 30;
  k_MATP_on = 0.0015;
  k_MATP_off = 0.15;
  tau_ATP = 0.375;
  tau_Mg = 1.5;
  k_0_on = 0;
  k_0_off = 0.15;
  k_Ca_on = 0.15;
  k_Ca_off = 0.05;
  f_o = 0.5;
  f_p = 5;
  h_o = 0.08;
  h_p = 0.06;
  g_o = 0.04;
  b_p = 0.00000394;
  k_p = 0.00000362;
  A_p = 1;
  B_p = 0.0001;
  PP = 6;
  Ca_1 = 0.1;
  Ca_SR1 = 1500;
  Ca_2 = 0.1;
  Ca_SR2 = 1500;
  Ca_T_2 = 25;
  Ca_P1 = 615;
  Ca_P2 = 615;
  Mg_P1 = 811;
  Mg_P2 = 811;
  Ca_Cs1 = 16900;
  Ca_Cs2 = 16900;
  Ca_ATP1 = 0.4;
  Ca_ATP2 = 0.4;
  Mg_ATP1 = 7200;
  Mg_ATP2 = 7200;
  ATP1 = 799.6;
  ATP2 = 799.6;
  Mg1 = 1000;
  Mg2 = 1000;
  Ca_CaT2 = 3;
  D_0 = 0.8;
  D_1 = 1.2;
  D_2 = 3;
  A_1 = 0.3;
  A_2 = 0.23;
  P = 0.23;
  P_SR = 0.23;
  P_C_SR = 0.23;
  i2 = 60;
end

model Slow_Twitch____main()

  // Sub-modules, and any changes to those submodules:
  cell: Slow_Twitch__cell(time_);
  wal_environment: Slow_Twitch__wal_environment(FF, alpha_h_bar, alpha_m_bar, alpha_n_bar, beta_h_bar, beta_m_bar, beta_n_bar, V_m, V_n, V_h, V_a, V_S_inf, V_h_K_inf, A_a, A_S_inf, A_h_K_inf, K_alpha_h, K_beta_h, K_alpha_m, K_alpha_n, K_beta_m, K_beta_n, RR, TT, g_Cl_bar, g_K_bar, g_Na_bar, G_K, del, K_K, K_S, K_m_K, K_m_Na, S_i, J_NaK_bar, V_tau, I_T, vS, vT, K_t, K_i, K_e, Na_i, Na_t, Na_e, E_K, E_K_t, Cl_i, Cl_o, Cl_i_t, Cl_o_t, J_K, J_K_t, eta_Cl, eta_IR, eta_DR, eta_Na, eta_NaK, I_Cl, I_IR, I_DR, I_Na, I_NaK, I_Cl_t, I_IR_t, I_DR_t, I_Na_t, I_NaK_t, time_);
  sternrios: Slow_Twitch__sternrios(O_0, O_1, O_2, O_3, O_4, time_, vT);
  razumova: Slow_Twitch__razumova(Ca_1, time_, O_0, O_1, O_2, O_3, O_4);
end
