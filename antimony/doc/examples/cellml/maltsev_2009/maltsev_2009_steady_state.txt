//Created by libAntimony v1.3
model maltsev_2009__environment(time_)
end

model maltsev_2009__Vm(Vm, Cm, time_, i_CaT, i_CaL, i_f, i_st, i_Kr, i_Ks, i_to, i_sus, i_NaK, i_NaCa, i_b_Ca, i_b_Na)

  // Rate Rules:
  Vm' = -((i_CaL + i_CaT + i_f + i_st + i_Kr + i_Ks + i_to + i_sus + i_NaK + i_NaCa + i_b_Ca + i_b_Na)) / Cm;

  // Variable initializations:
  Vm = -57.9639346865;
end

model maltsev_2009__electric_potentials(E_Na, E_K, E_Ks, R, T, F, Nai, Nao, Ki, Ko)

  // Assignment Rules:
  E_Na := R * T / F * ln(Nao / Nai);
  E_K := R * T / F * ln(Ko / Ki);
  E_Ks := R * T / F * ln((Ko + 0.12 * Nao) / (Ki + 0.12 * Nai));
end

model maltsev_2009__i_CaL_dL_gate(dL, Vm, time_)

  // Assignment Rules:
  dL_infinity := 1 / (1 + exp(-((Vm + 13.5 )) / 6 ));
  tau_dL := 1 / (alpha_dL + beta_dL);
  alpha_dL := -(0.02839 ) * (adVm + 35 ) / (exp(-((adVm + 35 )) / 2.5 ) - 1 ) - 0.0849 * adVm / (exp(-(adVm) / 4.8 ) - 1 );
  beta_dL := 0.01143 * (bdVm - 5 ) / (exp((bdVm - 5 ) / 2.5 ) - 1 );
  adVm := piecewise( -(35.00001 ) , Vm == -(35 ) , 0.00001 , Vm == 0 , Vm );
  bdVm := piecewise( 5.00001 , Vm == 5 , Vm );

  // Rate Rules:
  dL' = (dL_infinity - dL) / tau_dL;

  // Variable initializations:
  dL = 0.000584545564405;
end

model maltsev_2009__i_CaL_fL_gate(fL, Vm, time_)

  // Assignment Rules:
  fL_infinity := 1 / (1 + exp((Vm + 35 ) / 7.3 ));
  tau_fL := 44.3 + 257.1 * exp(-(power((Vm + 32.5 ) / 13.9 , 2 )));

  // Rate Rules:
  fL' = (fL_infinity - fL) / tau_fL;

  // Variable initializations:
  fL = 0.862381249774;
end

model maltsev_2009__i_CaL_fCa_gate(fCa, Vm, Ca_sub, time_)

  // Assignment Rules:
  fCa_infinity := Km_fCa / (Km_fCa + Ca_sub);
  tau_fCa := fCa_infinity / alpha_fCa;

  // Rate Rules:
  fCa' = (fCa_infinity - fCa) / tau_fCa;

  // Variable initializations:
  fCa = 0.711395919653;
  alpha_fCa = 0.021;
  Km_fCa = 0.00035;
end

model maltsev_2009__i_CaL(i_CaL, E_CaL, Cm, time_, Vm, Ca_sub, dL, fL, fCa)

  // Sub-modules, and any changes to those submodules:
  i_CaL_dL_gate: maltsev_2009__i_CaL_dL_gate(dL, Vm, time_);
  i_CaL_fL_gate: maltsev_2009__i_CaL_fL_gate(fL, Vm, time_);
  i_CaL_fCa_gate: maltsev_2009__i_CaL_fCa_gate(fCa, Vm, Ca_sub, time_);

  // Assignment Rules:
  i_CaL := Cm * g_CaL * (Vm - E_CaL) * dL * fL * fCa;

  // Variable initializations:
  E_CaL = 45;
  g_CaL = 0.464;
end

model maltsev_2009__i_CaT_dT_gate(dT, Vm, time_)

  // Assignment Rules:
  dT_infinity := 1 / (1 + exp(-((Vm + 26.3 )) / 6 ));
  tau_dT := 1 / (1.068 * exp((Vm + 26.3 ) / 30 ) + 1.068 * exp(-((Vm + 26.3 )) / 30 ));

  // Rate Rules:
  dT' = (dT_infinity - dT) / tau_dT;

  // Variable initializations:
  dT = 0.00504393374639;
end

model maltsev_2009__i_CaT_fT_gate(fT, Vm, time_)

  // Assignment Rules:
  fT_infinity := 1 / (1 + exp((Vm + 61.7 ) / 5.6 ));
  tau_fT := 1 / (0.0153 * exp(-((Vm + 61.7 )) / 83.3 ) + 0.015 * exp((Vm + 61.7 ) / 15.38 ));

  // Rate Rules:
  fT' = (fT_infinity - fT) / tau_fT;

  // Variable initializations:
  fT = 0.420757825415;
end

model maltsev_2009__i_CaT(i_CaT, Cm, time_, Vm, dT, fT)

  // Sub-modules, and any changes to those submodules:
  i_CaT_dT_gate: maltsev_2009__i_CaT_dT_gate(dT, Vm, time_);
  i_CaT_fT_gate: maltsev_2009__i_CaT_fT_gate(fT, Vm, time_);

  // Assignment Rules:
  i_CaT := Cm * g_CaT * (Vm - E_CaT) * dT * fT;

  // Variable initializations:
  g_CaT = 0.1832;
  E_CaT = 45;
end

model maltsev_2009__i_Kr_pa_gate(paS, paF, Vm, time_)

  // Assignment Rules:
  pa_infinity := 1 / (1 + exp(-((Vm + 23.2 )) / 10.6 ));
  tau_paS := 0.84655354 / (0.0042 * exp(Vm / 17 ) + 0.00015 * exp(-(Vm) / 21.6 ));
  tau_paF := 0.84655354 / (0.0372 * exp(Vm / 15.9 ) + 0.00096 * exp(-(Vm) / 22.5 ));

  // Rate Rules:
  paS' = (pa_infinity - paS) / tau_paS;
  paF' = (pa_infinity - paF) / tau_paF;

  // Variable initializations:
  paS = 0.453100576739;
  paF = 0.144755091176;
end

model maltsev_2009__i_Kr_pi_gate(pi_, Vm, time_)

  // Assignment Rules:
  pi_infinity := 1 / (1 + exp((Vm + 28.6 ) / 17.1 ));
  tau_pi := 1 / (0.1 * exp(-(Vm) / 54.645 ) + 0.656 * exp(Vm / 106.157 ));

  // Rate Rules:
  pi_' = (pi_infinity - pi_) / tau_pi;

  // Variable initializations:
  pi_ = 0.849409822329;
end

model maltsev_2009__i_Kr(i_Kr, Cm, time_, Vm, E_K, paS, paF, pi_)

  // Sub-modules, and any changes to those submodules:
  i_Kr_pa_gate: maltsev_2009__i_Kr_pa_gate(paS, paF, Vm, time_);
  i_Kr_pi_gate: maltsev_2009__i_Kr_pi_gate(pi_, Vm, time_);

  // Assignment Rules:
  i_Kr := Cm * g_Kr * (Vm - E_K) * (0.6 * paF + 0.4 * paS) * pi_;

  // Variable initializations:
  g_Kr = 0.08113973;
end

model maltsev_2009__i_Ks_n_gate(n, Vm, time_)

  // Assignment Rules:
  n_infinity := alpha_n / (alpha_n + beta_n);
  tau_n := 1 / (alpha_n + beta_n);
  alpha_n := 0.014 / (1 + exp(-((Vm - 40 )) / 9 ));
  beta_n := 0.001 * exp(-(Vm) / 45 );

  // Rate Rules:
  n' = (n_infinity - n) / tau_n;

  // Variable initializations:
  n = 0.0264600410928;
end

model maltsev_2009__i_Ks(i_Ks, E_Ks, Cm, time_, Vm, n)

  // Sub-modules, and any changes to those submodules:
  i_Ks_n_gate: maltsev_2009__i_Ks_n_gate(n, Vm, time_);

  // Assignment Rules:
  i_Ks := Cm * g_Ks * (Vm - E_Ks) * power(n, 2 );

  // Variable initializations:
  g_Ks = 0.0259;
end

model maltsev_2009__AP_sensitive_currents_q_gate(q, Vm, time_)

  // Assignment Rules:
  q_infinity := 1 / (1 + exp((Vm + 49 ) / 13 ));
  tau_q := 6.06 + 39.102 / (0.57 * exp(-(0.08 ) * (Vm + 44 )) + 0.065 * exp(0.1 * (Vm + 45.93 )));

  // Rate Rules:
  q' = (q_infinity - q) / tau_q;

  // Variable initializations:
  q = 0.694241313965;
end

model maltsev_2009__AP_sensitive_currents_r_gate(r, Vm, time_)

  // Assignment Rules:
  r_infinity := 1 / (1 + exp(-((Vm - 19.3 )) / 15 ));
  tau_r := 2.75352 + 14.40516 / (1.037 * exp(0.09 * (Vm + 30.61 )) + 0.369 * exp(-(0.12 ) * (Vm + 23.84 )));

  // Rate Rules:
  r' = (r_infinity - r) / tau_r;

  // Variable initializations:
  r = 0.00558131733359;
end

model maltsev_2009__AP_sensitive_currents(i_to, i_sus, Cm, E_K, time_, Vm, q, r)

  // Sub-modules, and any changes to those submodules:
  AP_sensitive_currents_q_gate: maltsev_2009__AP_sensitive_currents_q_gate(q, Vm, time_);
  AP_sensitive_currents_r_gate: maltsev_2009__AP_sensitive_currents_r_gate(r, Vm, time_);

  // Assignment Rules:
  i_to := Cm * g_to * (Vm - E_K) * q * r;
  i_sus := Cm * g_sus * (Vm - E_K) * r;

  // Variable initializations:
  g_to = 0.252;
  g_sus = 0.02;
end

model maltsev_2009__i_f_y_gate(y, Vm, time_)

  // Assignment Rules:
  y_infinity := 1 / (1 + exp((Vm - VIf_half) / 13.5 ));
  tau_y := 0.7166529 / (exp(-((Vm + 386.9 )) / 45.302 ) + exp((Vm - 73.08 ) / 19.231 ));

  // Rate Rules:
  y' = (y_infinity - y) / tau_y;

  // Variable initializations:
  y = 0.113643187247;
  VIf_half = -64;
end

model maltsev_2009__i_f(i_f, i_f_Na, i_f_K, Cm, E_K, E_Na, time_, Vm, y)

  // Sub-modules, and any changes to those submodules:
  i_f_y_gate: maltsev_2009__i_f_y_gate(y, Vm, time_);

  // Assignment Rules:
  i_f := i_f_Na + i_f_K;
  i_f_Na := Cm * 0.3833 * g_if * (Vm - E_Na) * power(y, 2 );
  i_f_K := Cm * 0.6167 * g_if * (Vm - E_K) * power(y, 2 );

  // Variable initializations:
  g_if = 0.15;
end

model maltsev_2009__i_st_qa_gate(qa, Vm, time_)

  // Assignment Rules:
  qa_infinity := 1 / (1 + exp(-((Vm + 57 )) / 5 ));
  tau_qa := 1 / (alpha_qa + beta_qa);
  alpha_qa := 1 / (0.15 * exp(-(Vm) / 11 ) + 0.2 * exp(-(Vm) / 700 ));
  beta_qa := 1 / (16 * exp(Vm / 8 ) + 15 * exp(Vm / 50 ));

  // Rate Rules:
  qa' = (qa_infinity - qa) / tau_qa;

  // Variable initializations:
  qa = 0.42380243163;
end

model maltsev_2009__i_st_qi_gate(qi, Vm, time_)

  // Assignment Rules:
  qi_infinity := alpha_qi / (alpha_qi + beta_qi);
  tau_qi := 6.65 / (alpha_qi + beta_qi);
  alpha_qi := 1 / (3100 * exp(Vm / 13 ) + 700 * exp(Vm / 70 ));
  beta_qi := 1 / (95 * exp(-(Vm) / 10 ) + 50 * exp(-(Vm) / 700 )) + 0.000229 / (1 + exp(-(Vm) / 5 ));

  // Rate Rules:
  qi' = (qi_infinity - qi) / tau_qi;

  // Variable initializations:
  qi = 0.447294008304;
end

model maltsev_2009__i_st(i_st, Cm, time_, Vm, qa, qi)

  // Sub-modules, and any changes to those submodules:
  i_st_qa_gate: maltsev_2009__i_st_qa_gate(qa, Vm, time_);
  i_st_qi_gate: maltsev_2009__i_st_qi_gate(qi, Vm, time_);

  // Assignment Rules:
  i_st := Cm * g_st * (Vm - E_st) * qa * qi;

  // Variable initializations:
  g_st = 0.003;
  E_st = 37.4;
end

model maltsev_2009__i_b_Na(i_b_Na, Cm, E_Na, Vm)

  // Assignment Rules:
  i_b_Na := Cm * g_b_Na * (Vm - E_Na);

  // Variable initializations:
  g_b_Na = 0.00486;
end

model maltsev_2009__i_NaK(i_NaK, Cm, Nai, Ko, Vm, E_Na, time_)

  // Assignment Rules:
  i_NaK := Cm * i_NaK_max / ((1 + power(Km_Kp / Ko, 1.2 )) * (1 + power(Km_Nap / Nai, 1.3 )) * (1 + exp(-((Vm - E_Na + 120 )) / 30 )));

  // Variable initializations:
  Km_Kp = 1.4;
  Km_Nap = 14;
  i_NaK_max = 2.88;
end

model maltsev_2009__i_b_Ca(i_b_Ca, Cm, E_CaL, Vm)

  // Assignment Rules:
  i_b_Ca := Cm * g_b_Ca * (Vm - E_CaL);

  // Variable initializations:
  g_b_Ca = 0.0006;
end

model maltsev_2009__i_NaCa(i_NaCa, Cm, Cao, Nao, Ca_sub, Nai, time_, R, T, F, Vm)

  // Assignment Rules:
  i_NaCa := Cm * kNaCa * (x2 * k21 - x1 * k12) / (x1 + x2 + x3 + x4);
  x1 := k41 * k34 * (k23 + k21) + k21 * k32 * (k43 + k41);
  x2 := k32 * k43 * (k14 + k12) + k41 * k12 * (k34 + k32);
  x3 := k14 * k43 * (k23 + k21) + k12 * k23 * (k43 + k41);
  x4 := k23 * k34 * (k14 + k12) + k14 * k21 * (k34 + k32);
  k41 := exp(-(Qn) * Vm / (2 * RTOnF));
  k34 := Nao / (K3no + Nao);
  k23 := Nao / K1no * Nao / K2no * (1 + Nao / K3no) * exp(-(Qn) * Vm / (2 * RTOnF)) / do;
  k21 := Cao / Kco * exp(Qco * Vm / RTOnF) / do;
  k32 := exp(Qn * Vm / (2 * RTOnF));
  k43 := Nai / (K3ni + Nai);
  k12 := Ca_sub / Kci * exp(-(Qci) * Vm / RTOnF) / di;
  k14 := Nai / K1ni * Nai / K2ni * (1 + Nai / K3ni) * exp(Qn * Vm / (2 * RTOnF)) / di;
  RTOnF := R * T / F;
  do := 1 + Cao / Kco * (1 + exp(Qco * Vm / RTOnF)) + Nao / K1no * (1 + Nao / K2no * (1 + Nao / K3no));
  di := 1 + Ca_sub / Kci * (1 + exp(-(Qci) * Vm / RTOnF) + Nai / Kcni) + Nai / K1ni * (1 + Nai / K2ni * (1 + Nai / K3ni));

  // Variable initializations:
  kNaCa = 187.5;
  Qci = 0.1369;
  Qn = 0.4315;
  Qco = 0;
  K3ni = 26.44;
  Kci = 0.0207;
  K1ni = 395.3;
  K2ni = 2.289;
  Kcni = 26.44;
  K3no = 4.663;
  K1no = 1628;
  K2no = 561.4;
  Kco = 3.663;
end

model maltsev_2009__j_SRCarel(j_SRCarel, time_, Ca_sub, Ca_jsr)

  // Assignment Rules:
  j_SRCarel := ks * O * (Ca_jsr - Ca_sub);
  koSRCa := koCa / kCaSR;
  kiSRCa := kiCa * kCaSR;
  kCaSR := MaxSR - (MaxSR - MinSR) / (1 + power(EC50_SR / Ca_jsr, HSR));

  // Rate Rules:
  R' = kim * RI - kiSRCa * Ca_sub * R - (koSRCa * power(Ca_sub, 2 ) * R - kom * O);
  O' = koSRCa * power(Ca_sub, 2 ) * R - kom * O - (kiSRCa * Ca_sub * O - kim * I);
  I' = kiSRCa * Ca_sub * O - kim * I - (kom * I - koSRCa * power(Ca_sub, 2 ) * RI);
  RI' = kom * I - koSRCa * power(Ca_sub, 2 ) * RI - (kim * RI - kiSRCa * Ca_sub * R);

  // Variable initializations:
  R = 0.688047760973;
  O = 1.7340201253e-7;
  I = 7.86181717518e-8;
  RI = 0.311951987007;
  ks = 250000;
  MaxSR = 15;
  MinSR = 1;
  EC50_SR = 0.45;
  HSR = 2.5;
  koCa = 10;
  kiCa = 0.5;
  kim = 0.005;
  kom = 0.06;
end

model maltsev_2009__intracellular_calcium_fluxes(j_Ca_dif, j_up, j_tr, Ca_nsr, Cai, Ca_sub, Ca_jsr)

  // Assignment Rules:
  j_Ca_dif := (Ca_sub - Cai) / tau_dif_Ca;
  j_up := P_up / (1 + K_up / Cai);
  j_tr := (Ca_nsr - Ca_jsr) / tau_tr;

  // Variable initializations:
  tau_dif_Ca = 0.04;
  tau_tr = 40;
  P_up = 0.012;
  K_up = 0.0006;
end

model maltsev_2009__calcium_buffering(TC_tot, TMC_tot, CM_tot, CQ_tot, delta_fTC, delta_fTMC, delta_fCMs, delta_fCMi, delta_fCQ, time_, Mgi, Cai, Ca_sub, Ca_jsr)

  // Assignment Rules:
  delta_fTC := kf_TC * Cai * (1 - fTC) - kb_TC * fTC;
  delta_fTMC := kf_TMC * Cai * (1 - (fTMC + fTMM)) - kb_TMC * fTMC;
  delta_fCMs := kf_CM * Ca_sub * (1 - fCMs) - kb_CM * fCMs;
  delta_fCMi := kf_CM * Cai * (1 - fCMi) - kb_CM * fCMi;
  delta_fCQ := kf_CQ * Ca_jsr * (1 - fCQ) - kb_CQ * fCQ;
  delta_fTMM := kf_TMM * Mgi * (1 - (fTMC + fTMM)) - kb_TMM * fTMM;

  // Rate Rules:
  fTMM' = delta_fTMM;
  fCMi' = delta_fCMi;
  fCMs' = delta_fCMs;
  fTC' = delta_fTC;
  fTMC' = delta_fTMC;
  fCQ' = delta_fCQ;

  // Variable initializations:
  TC_tot = 0.031;
  TMC_tot = 0.062;
  CM_tot = 0.045;
  CQ_tot = 10;
  fTMM = 0.501049376634;
  fCMi = 0.0594880901438;
  fCMs = 0.054381370046;
  fTC = 0.0291316176172;
  fTMC = 0.432694959597;
  fCQ = 0.273207128393;
  kf_TC = 88.8;
  kf_TMM = 2.277;
  kf_TMC = 227.7;
  kf_CM = 227.7;
  kf_CQ = 0.534;
  kb_TC = 0.446;
  kb_TMC = 0.00751;
  kb_TMM = 0.751;
  kb_CM = 0.542;
  kb_CQ = 0.445;
end

model maltsev_2009__calcium_dynamics(Cai, Ca_nsr, Ca_jsr, Ca_sub, V_i, V_jsr, V_nsr, V_sub, time_, F, i_b_Ca, i_CaL, i_CaT, i_NaCa, j_SRCarel, j_Ca_dif, j_tr, j_up, TMC_tot, CM_tot, TC_tot, CQ_tot, delta_fTMC, delta_fCMi, delta_fCMs, delta_fTC, delta_fCQ)

  // Rate Rules:
  Cai' = (j_Ca_dif * V_sub - j_up * V_nsr) / V_i - (CM_tot * delta_fCMi + TC_tot * delta_fTC + TMC_tot * delta_fTMC);
  Ca_nsr' = j_up - j_tr * V_jsr / V_nsr;
  Ca_jsr' = j_tr - (j_SRCarel + CQ_tot * delta_fCQ);
  Ca_sub' = j_SRCarel * V_jsr / V_sub - ((i_CaL + i_CaT + i_b_Ca - 2 * i_NaCa) / (2 * F * V_sub) + j_Ca_dif + CM_tot * delta_fCMs);

  // Variable initializations:
  Cai = 0.000150018670943;
  Ca_nsr = 1.49348117734;
  Ca_jsr = 0.316762674605;
  Ca_sub = 0.000138112560112;
end

model maltsev_2009__model_parameters(Cao, Nai, Nao, Ki, Ko, Mgi, R, T, F, Cm, V_sub, V_jsr, V_nsr, V_i)

  // Assignment Rules:
  V_sub := 0.001 * 2 * pi * L_sub * (R_cell - L_sub / 2 ) * L_cell;
  V_jsr := V_jsr_part * V_cell;
  V_nsr := V_nsr_part * V_cell;
  V_i := V_i_part * V_cell - V_sub;
  V_cell := 0.001 * pi * power(R_cell, 2 ) * L_cell;

  // Variable initializations:
  Cao = 2;
  Nai = 10;
  Nao = 140;
  Ki = 140;
  Ko = 5.4;
  Mgi = 2.5;
  R = 8314.4;
  T = 310.15;
  F = 96485;
  Cm = 32;
  V_jsr_part = 0.0012;
  V_i_part = 0.46;
  V_nsr_part = 0.0116;
  R_cell = 4;
  L_cell = 70;
  L_sub = 0.02;
end

model maltsev_2009____main()

  // Sub-modules, and any changes to those submodules:
  environment: maltsev_2009__environment(time_);
  Vm: maltsev_2009__Vm(Vm0, Cm, time_, i_CaT0, i_CaL0, i_f0, i_st0, i_Kr0, i_Ks0, i_to, i_sus, i_NaK0, i_NaCa0, i_b_Ca0, i_b_Na0);
  electric_potentials: maltsev_2009__electric_potentials(E_Na, E_K, E_Ks, R, T, F, Nai, Nao, Ki, Ko);
  i_CaL: maltsev_2009__i_CaL(i_CaL0, E_CaL, Cm, time_, Vm0, Ca_sub, dL, fL, fCa);
  i_CaT: maltsev_2009__i_CaT(i_CaT0, Cm, time_, Vm0, dT, fT);
  i_Kr: maltsev_2009__i_Kr(i_Kr0, Cm, time_, Vm0, E_K, paS, paF, pi_);
  i_Ks: maltsev_2009__i_Ks(i_Ks0, E_Ks, Cm, time_, Vm0, n);
  AP_sensitive_currents: maltsev_2009__AP_sensitive_currents(i_to, i_sus, Cm, E_K, time_, Vm0, q, r);
  i_f: maltsev_2009__i_f(i_f0, i_f_Na, i_f_K, Cm, E_K, E_Na, time_, Vm0, y);
  i_st: maltsev_2009__i_st(i_st0, Cm, time_, Vm0, qa, qi);
  i_b_Na: maltsev_2009__i_b_Na(i_b_Na0, Cm, E_Na, Vm0);
  i_NaK: maltsev_2009__i_NaK(i_NaK0, Cm, Nai, Ko, Vm0, E_Na, time_);
  i_b_Ca: maltsev_2009__i_b_Ca(i_b_Ca0, Cm, E_CaL, Vm0);
  i_NaCa: maltsev_2009__i_NaCa(i_NaCa0, Cm, Cao, Nao, Ca_sub, Nai, time_, R, T, F, Vm0);
  j_SRCarel: maltsev_2009__j_SRCarel(j_SRCarel0, time_, Ca_sub, Ca_jsr);
  intracellular_calcium_fluxes: maltsev_2009__intracellular_calcium_fluxes(j_Ca_dif, j_up, j_tr, Ca_nsr, Cai, Ca_sub, Ca_jsr);
  calcium_buffering: maltsev_2009__calcium_buffering(TC_tot, TMC_tot, CM_tot, CQ_tot, delta_fTC, delta_fTMC, delta_fCMs, delta_fCMi, delta_fCQ, time_, Mgi, Cai, Ca_sub, Ca_jsr);
  calcium_dynamics: maltsev_2009__calcium_dynamics(Cai, Ca_nsr, Ca_jsr, Ca_sub, V_i, V_jsr, V_nsr, V_sub, time_, F, i_b_Ca0, i_CaL0, i_CaT0, i_NaCa0, j_SRCarel0, j_Ca_dif, j_tr, j_up, TMC_tot, CM_tot, TC_tot, CQ_tot, delta_fTMC, delta_fCMi, delta_fCMs, delta_fTC, delta_fCQ);
  model_parameters: maltsev_2009__model_parameters(Cao, Nai, Nao, Ki, Ko, Mgi, R, T, F, Cm, V_sub, V_jsr, V_nsr, V_i);
end
