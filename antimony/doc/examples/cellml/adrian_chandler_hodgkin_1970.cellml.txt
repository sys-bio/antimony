//Created by libAntimony v1.3
model cellmlmod_interface()

  // Assignment Rules:
  IStimC := Istim
  AmC := Am

  // Variable initializations:
  Cm = 0.009;
  Am = 200.0;
  IstimStart = 10;
  IstimEnd = 50000;
  IstimAmplitude = 0.5;
  IstimPeriod = 1000;
  IstimPulseDuration = 1;

  //Other declarations:
  var t, Cm, Am, Istim, Vm, Vt, m, h, n, INa, IK, IL, IT, IStimC, AmC, IstimStart;
  var IstimEnd, IstimAmplitude, IstimPeriod, IstimPulseDuration;
end

model cellmlmod_membrane()

  // Rate Rules:
  Vm' = (Istim - (INa + IK + IL + IT)) / Cm

  // Variable initializations:
  Vm = -95.0;

  //Other declarations:
  var t, Cm, Am, Istim, Vm, m, h, n, INa, IK, IL, IT, Vt;
end

model cellmlmod_sodium_current()

  // Assignment Rules:
  INa := gNa_max * m * m * m * h * (Vm - ENa)

  // Variable initializations:
  gNa_max = 1.8;
  ENa = 50.0;

  //Other declarations:
  var t, Vm, INa, m, h, gNa_max, ENa;
end

model cellmlmod_sodium_current_m_gate()

  // Assignment Rules:
  alpha_m := alpha_m_max * (Vm - Em) / (1.0  - exp((Em - Vm) / v_alpha_m))
  beta_m := beta_m_max * exp((Em - Vm) / v_beta_m)

  // Rate Rules:
  m' = alpha_m * (1.0  - m) - beta_m * m

  // Variable initializations:
  m = 0.0;
  alpha_m_max = 0.208;
  beta_m_max = 2.081;
  Em = -42.0;
  v_alpha_m = 10.0;
  v_beta_m = 18.0;

  //Other declarations:
  var t, Vm, m, alpha_m, beta_m, alpha_m_max, beta_m_max, Em, v_alpha_m, v_beta_m;
end

model cellmlmod_sodium_current_h_gate()

  // Assignment Rules:
  alpha_h := alpha_h_max * exp((Eh - Vm) / v_alpha_h)
  beta_h := beta_h_max / (1.0  + exp((Eh - Vm) / v_beta_h))

  // Rate Rules:
  h' = alpha_h * (1.0  - h) - beta_h * h

  // Variable initializations:
  h = 1.0;
  alpha_h_max = 0.0156;
  beta_h_max = 3.382;
  Eh = -41.0;
  v_alpha_h = 14.7;
  v_beta_h = 7.6;

  //Other declarations:
  var t, Vm, h, alpha_h, beta_h, alpha_h_max, beta_h_max, Eh, v_alpha_h, v_beta_h;
end

model cellmlmod_potassium_current()

  // Assignment Rules:
  IK := gK_max * n * n * n * n * (Vm - EK)

  // Variable initializations:
  gK_max = 0.415;
  EK = -70.0;

  //Other declarations:
  var t, Vm, IK, n, gK_max, EK;
end

model cellmlmod_potassium_current_n_gate()

  // Assignment Rules:
  alpha_n := alpha_n_max * (Vm - En) / (1.0  - exp((En - Vm) / v_alpha_n))
  beta_n := beta_n_max * exp((En - Vm) / v_beta_n)

  // Rate Rules:
  n' = alpha_n * (1.0  - n) - beta_n * n

  // Variable initializations:
  n = 0.0;
  alpha_n_max = 0.0229;
  beta_n_max = 0.09616;
  En = -40.0;
  v_alpha_n = 7.0;
  v_beta_n = 40.0;

  //Other declarations:
  var t, Vm, n, alpha_n, beta_n, alpha_n_max, beta_n_max, En, v_alpha_n, v_beta_n;
end

model cellmlmod_leak_current()

  // Assignment Rules:
  IL := gL_max * (Vm - EL)

  // Variable initializations:
  EL = -95.0;
  gL_max = 0.0024;

  //Other declarations:
  var Vm, IL, EL, gL_max;
end

model cellmlmod_Ttubular_current()

  // Assignment Rules:
  IT := (Vm - Vt) / Rs

  // Variable initializations:
  Rs = 15.0;

  //Other declarations:
  var t, Vm, IT, Vt, Rs;
end

model cellmlmod_Ttubular_current_Vt_var()

  // Rate Rules:
  Vt' = (Vm - Vt) / (Rs * Ct)

  // Variable initializations:
  Vt = -95.0;
  Ct = 0.04;

  //Other declarations:
  var t, Vm, Rs, Vt, Ct;
end

model adrian_model_1970()

  // Sub-modules, and any changes to those submodules:
  interface: cellmlmod_interface()
  membrane: cellmlmod_membrane()
  sodium_current: cellmlmod_sodium_current()
  sodium_current_m_gate: cellmlmod_sodium_current_m_gate()
  sodium_current_h_gate: cellmlmod_sodium_current_h_gate()
  potassium_current: cellmlmod_potassium_current()
  potassium_current_n_gate: cellmlmod_potassium_current_n_gate()
  leak_current: cellmlmod_leak_current()
  Ttubular_current: cellmlmod_Ttubular_current()
  Ttubular_current_Vt_var: cellmlmod_Ttubular_current_Vt_var()
  interface.t is membrane.t;
  interface.Cm is membrane.Cm;
  interface.Am is membrane.Am;
  interface.Istim is membrane.Istim;
  interface.Vm is membrane.Vm;
  interface.Vt is membrane.Vt;
  interface.m is membrane.m;
  interface.h is membrane.h;
  interface.n is membrane.n;
  interface.INa is membrane.INa;
  interface.IK is membrane.IK;
  interface.IL is membrane.IL;
  interface.IT is membrane.IT;
  membrane.t is sodium_current.t;
  membrane.Vm is sodium_current.Vm;
  membrane.m is sodium_current.m;
  membrane.h is sodium_current.h;
  membrane.INa is sodium_current.INa;
  sodium_current.t is sodium_current_m_gate.t;
  sodium_current.Vm is sodium_current_m_gate.Vm;
  sodium_current.m is sodium_current_m_gate.m;
  sodium_current_m_gate.t is sodium_current_h_gate.t;
  sodium_current_m_gate.Vm is sodium_current_h_gate.Vm;
  sodium_current.h is sodium_current_h_gate.h;
  sodium_current_h_gate.t is potassium_current.t;
  sodium_current_h_gate.Vm is potassium_current.Vm;
  membrane.n is potassium_current.n;
  membrane.IK is potassium_current.IK;
  potassium_current.t is potassium_current_n_gate.t;
  potassium_current.Vm is potassium_current_n_gate.Vm;
  potassium_current.n is potassium_current_n_gate.n;
  potassium_current_n_gate.Vm is leak_current.Vm;
  membrane.IL is leak_current.IL;
  potassium_current_n_gate.t is Ttubular_current.t;
  leak_current.Vm is Ttubular_current.Vm;
  membrane.Vt is Ttubular_current.Vt;
  membrane.IT is Ttubular_current.IT;
  Ttubular_current.t is Ttubular_current_Vt_var.t;
  Ttubular_current.Vm is Ttubular_current_Vt_var.Vm;
  Ttubular_current.Vt is Ttubular_current_Vt_var.Vt;
  Ttubular_current.Rs is Ttubular_current_Vt_var.Rs;
end
