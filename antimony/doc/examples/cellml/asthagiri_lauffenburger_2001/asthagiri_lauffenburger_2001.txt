//Created by libAntimony v1.3
model asthagiri_model_2001__environment(time_)
end

model asthagiri_model_2001__c(c, c2, L0, R0, kr, kf, ku, kc, r, time_)

  // Rate Rules:
  c' = L0 / ( kr / kf ) * r + 2.0 * ( ku / kr ) * c2 - ( c + 2.0 * ( R0 / ( kr / kc )) * power( c , 2.0 ));

  // Variable initializations:
  c = 0.0;
end

model asthagiri_model_2001__c2(c2, c, c_star, R0, kr, kc_plus, kc_minus, kf, ku, kc, time_)

  // Rate Rules:
  c2' = R0 / ( kr / kc ) * power( c , 2.0 ) + kc_minus / kr * c_star - ( ku / kr * c + kc_plus / kr * c2 );

  // Variable initializations:
  c2 = 0.0;
end

model asthagiri_model_2001__c_star(c_star, c2, a1, e0_star, c_star_a1, a1a2, R0, kr, kr_1, kf_1, kc_plus, kc_minus, kr_12, kf_12, A1_T, A2_T, time_)

  // Rate Rules:
  c_star' = kc_plus / kr * c2 + kr_1 / kr * ( A1_T / R0 ) * c_star_a1 + kr_12 / kr * ( A2_T / R0 ) * e0_star - ( kc_minus / kr * c_star + kf_1 * A1_T / kr * c_star * a1 + kf_12 * A1_T / kr * c_star * a1a2 );

  // Variable initializations:
  c_star = 0.0;
end

model asthagiri_model_2001__c_star_a1(c_star_a1, c_star, a1, e0_star, a2, e0_star_e4_star, R0, kr, kr_1, kf_1, kr_2, kf_2, kc_plus, kc_minus, kcat_x, A1_T, A2_T, E4_T, time_)

  // Rate Rules:
  c_star_a1' = kf_1 * R0 / kr * c_star * a1 + kr_2 / kr * ( A2_T / A1_T ) * e0_star + kcat_x / kr * ( E4_T / A1_T ) * e0_star_e4_star - ( kr_1 / kr * c_star_a1 + kf_2 * A2_T / kr * c_star_a1 * a2 );

  // Variable initializations:
  c_star_a1 = 0.0;
end

model asthagiri_model_2001__e0_star(e0_star, c_star_a1, a2, e1, e4_star, e1_e0_star, c_star, a1a2, e0_star_e4_star, kr, kr_12, kf_12, kr_2, kf_2, k1_plus, k1_minus, kx_plus, kx_minus, kcat_1, A1_T, A2_T, E1_T, E4_T, time_)

  // Rate Rules:
  e0_star' = kf_2 * A1_T / kr * c_star_a1 * a2 + kf_12 * A1_T / kr * c_star * a1a2 + ( k1_minus + kcat_1 ) / kr * ( E1_T / A2_T ) * e1_e0_star + kx_minus / kr * ( E4_T / A2_T ) * e0_star_e4_star - ( kr_2 / kr * e0_star + kr_12 / kr * e0_star + k1_plus * E1_T / kr * e0_star * e1 + kx_plus * E4_T / kr * e0_star * e4_star );

  // Variable initializations:
  e0_star = 0.0;
end

model asthagiri_model_2001__a1a2(a1a2, c_star, a1, a2, e0_star, kr, kr_12, kf_12, kc_12, kd_12, A1_T, A2_T, R0, time_)

  // Rate Rules:
  a1a2' = kr_12 / kr * ( A2_T / A1_T ) * e0_star + kc_12 * A2_T / kr * a1 * a2 - ( kd_12 / kr * a1a2 + kf_12 * R0 / kr * c_star * a1a2 );

  // Variable initializations:
  a1a2 = 0.0;
end

model asthagiri_model_2001__r(r, c, c2, c_star, c_star_a1, e0_star, e0_star_e4_star, e1_e0_star, A1_T, A2_T, E1_T, E4_T, R0)

  // Assignment Rules:
  r := 1.0 - ( c + 2.0 * ( c2 + c_star + A1_T / R0 * c_star_a1 + A2_T / R0 * e0_star + E4_T / R0 * e0_star_e4_star + E1_T / R0 * e1_e0_star ));
end

model asthagiri_model_2001__a1(a1, c_star_a1, a1a2, e0_star, e0_star_e4_star, e1_e0_star, A1_T, A2_T, E1_T, E4_T)

  // Assignment Rules:
  a1 := 1.0 - ( c_star_a1 + a1a2 + A2_T / A1_T * e0_star + E4_T / A1_T * e0_star_e4_star + E1_T / A1_T * e1_e0_star );
end

model asthagiri_model_2001__a2(a2, a2_minus, a1a2, e0_star, e0_star_e4_star, e1_e0_star, A1_T, A2_T, E1_T, E4_T)

  // Assignment Rules:
  a2 := 1.0 - ( A1_T / A2_T * a1a2 + e0_star + E4_T / A2_T * e0_star_e4_star + E1_T / A2_T * e1_e0_star + a2_minus );
end

model asthagiri_model_2001__a2_minus(a2_minus, e0_star_e4_star, kr, kcat_x, E4_T, A2_T, time_)

  // Rate Rules:
  a2_minus' = kcat_x / kr * ( E4_T / A2_T ) * e0_star_e4_star;

  // Variable initializations:
  a2_minus = 0.0;
end

model asthagiri_model_2001__e1_star_p1(e1_star_p1, e1_star, p1, kr, kP1_plus, kP1_minus, kcat_P1, E1_T, time_)

  // Rate Rules:
  e1_star_p1' = kP1_plus * E1_T / kr * e1_star * p1 - ( kP1_minus / kr + kcat_P1 / kr ) * e1_star_p1;

  // Variable initializations:
  e1_star_p1 = 0.0;
end

model asthagiri_model_2001__e2_star_p2(e2_star_p2, e2_star, p2, kr, kP2_plus, kP2_minus, kcat_P2, E2_T, time_)

  // Rate Rules:
  e2_star_p2' = kP2_plus * E2_T / kr * e2_star * p2 - ( kP2_minus / kr + kcat_P2 / kr ) * e2_star_p2;

  // Variable initializations:
  e2_star_p2 = 0.0;
end

model asthagiri_model_2001__e3_star_p3(e3_star_p3, e3_star, p3, kr, kP3_plus, kP3_minus, kcat_P3, E3_T, time_)

  // Rate Rules:
  e3_star_p3' = kP3_plus * E3_T / kr * e3_star * p3 - ( kP3_minus / kr + kcat_P3 / kr ) * e3_star_p3;

  // Variable initializations:
  e3_star_p3 = 0.0;
end

model asthagiri_model_2001__e4_star_p4(e4_star_p4, e4_star, p4, kr, kP4_plus, kP4_minus, kcat_P4, E4_T, time_)

  // Rate Rules:
  e4_star_p4' = kP4_plus * E4_T / kr * e4_star * p4 - ( kP4_minus / kr + kcat_P4 / kr ) * e4_star_p4;

  // Variable initializations:
  e4_star_p4 = 0.0;
end

model asthagiri_model_2001__e5_star_p5(e5_star_p5, e5_star, p5, kr, kP5_plus, kP5_minus, kcat_P5, E5_T, time_)

  // Rate Rules:
  e5_star_p5' = kP5_plus * E5_T / kr * e5_star * p5 - ( kP5_minus / kr + kcat_P5 / kr ) * e5_star_p5;

  // Variable initializations:
  e5_star_p5 = 0.0;
end

model asthagiri_model_2001__e1_e0_star(e1_e0_star, e1, e0_star, kr, k1_plus, k1_minus, kcat_1, A2_T, time_)

  // Rate Rules:
  e1_e0_star' = k1_plus * A2_T / kr * e1 * e0_star - ( k1_minus / kr + kcat_1 / kr ) * e1_e0_star;

  // Variable initializations:
  e1_e0_star = 0.0;
end

model asthagiri_model_2001__e2_e1_star(e2_e1_star, e2, e1_star, kr, k2_plus, k2_minus, kcat_2, E1_T, time_)

  // Rate Rules:
  e2_e1_star' = k2_plus * E1_T / kr * e2 * e1_star - ( k2_minus / kr + kcat_2 / kr ) * e2_e1_star;

  // Variable initializations:
  e2_e1_star = 0.0;
end

model asthagiri_model_2001__e3_e2_star(e3_e2_star, e3, e2_star, kr, k3_plus, k3_minus, kcat_3, E2_T, time_)

  // Rate Rules:
  e3_e2_star' = k3_plus * E2_T / kr * e3 * e2_star - ( k3_minus / kr + kcat_3 / kr ) * e3_e2_star;

  // Variable initializations:
  e3_e2_star = 0.0;
end

model asthagiri_model_2001__e4_e3_star(e4_e3_star, e4, e3_star, kr, k4_plus, k4_minus, kcat_4, E3_T, time_)

  // Rate Rules:
  e4_e3_star' = k4_plus * E3_T / kr * e4 * e3_star - ( k4_minus / kr + kcat_4 / kr ) * e4_e3_star;

  // Variable initializations:
  e4_e3_star = 0.0;
end

model asthagiri_model_2001__e5_e4_star(e5_e4_star, e5, e4_star, kr, k5_plus, k5_minus, kcat_5, E4_T, time_)

  // Rate Rules:
  e5_e4_star' = k5_plus * E4_T / kr * e5 * e4_star - ( k5_minus / kr + kcat_5 / kr ) * e5_e4_star;

  // Variable initializations:
  e5_e4_star = 0.0;
end

model asthagiri_model_2001__e2_star_e4_star(e2_star_e4_star, e2_star, e4_star, kr, kz_plus, kz_minus, k2_plus, k2_minus, kcat_z, E2_T, time_)

  // Rate Rules:
  e2_star_e4_star' = kz_plus * E2_T / kr * e4_star * e2_star - ( kz_minus / kr + kcat_z / kr ) * e2_star_e4_star;

  // Variable initializations:
  e2_star_e4_star = 0.0;
end

model asthagiri_model_2001__e0_star_e4_star(e0_star_e4_star, e0_star, e4_star, kr, kx_plus, kx_minus, kcat_x, A2_T, time_)

  // Rate Rules:
  e0_star_e4_star' = kx_plus * A2_T / kr * e4_star * e0_star - ( kx_minus / kr + kcat_x / kr ) * e0_star_e4_star;

  // Variable initializations:
  e0_star_e4_star = 0.0;
end

model asthagiri_model_2001__e2_minus(e2_minus, e2_star_e4_star, kr, kcat_z, E4_T, E2_T, time_)

  // Rate Rules:
  e2_minus' = kcat_z / kr * ( E4_T / E2_T ) * e2_star_e4_star;

  // Variable initializations:
  e2_minus = 0.0;
end

model asthagiri_model_2001__e1_star(e1_star, e1_e0_star, e2_e1_star, e1_star_p1, p1, e2, kr, kcat_1, kcat_2, k2_plus, k2_minus, kP1_plus, kP1_minus, E2_T, P1_T, E1_T, time_)

  // Rate Rules:
  e1_star' = kcat_1 / kr * e1_e0_star + ( k2_minus + kcat_2 ) / kr * ( E2_T / E1_T ) * e2_e1_star + kP1_minus / kr * ( P1_T / E1_T ) * e1_star_p1 - ( k2_plus * E2_T / kr * e1_star * e2 + kP1_plus * P1_T / kr * e1_star * p1 );

  // Variable initializations:
  e1_star = 0.0;
end

model asthagiri_model_2001__e3_star(e3_star, e3_e2_star, e4_e3_star, e3_star_p3, p3, e4, kr, kcat_3, kcat_4, k4_plus, k4_minus, kP3_plus, kP3_minus, E4_T, P3_T, E3_T, time_)

  // Rate Rules:
  e3_star' = kcat_3 / kr * e3_e2_star + ( k4_minus + kcat_4 ) / kr * ( E4_T / E3_T ) * e4_e3_star + kP3_minus / kr * ( P3_T / E3_T ) * e3_star_p3 - ( k4_plus * E4_T / kr * e3_star * e4 + kP3_plus * P3_T / kr * e3_star * p3 );

  // Variable initializations:
  e3_star = 0.0;
end

model asthagiri_model_2001__e5_star(e5_star, e5_e4_star, e5_star_p5, p5, kr, kcat_5, kP5_plus, kP5_minus, P5_T, E5_T, time_)

  // Rate Rules:
  e5_star' = kcat_5 / kr * e5_e4_star + kP5_minus / kr * ( P5_T / E5_T ) * e5_star_p5 - kP5_plus * P5_T / kr * e5_star * p5;

  // Variable initializations:
  e5_star = 0.0;
end

model asthagiri_model_2001__e2_star(e2_star, e2_e1_star, e3_e2_star, e2_star_p2, e4_star, e2_star_e4_star, p2, e3, kr, kcat_2, kcat_3, k3_plus, k3_minus, kz_plus, kz_minus, kP2_plus, kP2_minus, E2_T, P2_T, E3_T, E4_T, time_)

  // Rate Rules:
  e2_star' = kcat_2 / kr * e2_e1_star + ( k3_minus + kcat_3 ) / kr * ( E3_T / E2_T ) * e3_e2_star + kP2_minus / kr * ( P2_T / E2_T ) * e2_star_p2 + kz_minus / kr * ( E4_T / E2_T ) * e2_star_e4_star - ( k3_plus * E3_T / kr * e2_star * e3 + kP2_plus * P2_T / kr * e2_star * p2 + kz_plus * E4_T / kr * e2_star * e4_star );

  // Variable initializations:
  e2_star = 0.0;
end

model asthagiri_model_2001__e4_star(e4_star, e4_e3_star, e5_e4_star, e4_star_p4, e2_star, e2_star_e4_star, e0_star, e0_star_e4_star, p4, e5, kr, kcat_4, kcat_5, kcat_x, kcat_z, k5_plus, k5_minus, kz_plus, kz_minus, kx_plus, kx_minus, kP4_plus, kP4_minus, A2_T, E2_T, P4_T, E5_T, E4_T, time_)

  // Rate Rules:
  e4_star' = kcat_4 / kr * e4_e3_star + ( k5_minus + kcat_5 ) / kr * ( E5_T / E4_T ) * e5_e4_star + kP4_minus / kr * ( P4_T / E4_T ) * e4_star_p4 + ( kx_minus / kr + kcat_x / kr ) * e0_star_e4_star + ( kz_minus / kr + kcat_z / kr ) * e2_star_e4_star - ( k5_plus * E5_T / kr * e4_star * e5 + kP4_plus * P4_T / kr * e4_star * p4 + kx_plus * A2_T / kr * e0_star * e4_star + kz_plus * E2_T / kr * e2_star * e4_star );

  // Variable initializations:
  e4_star = 0.0;
end

model asthagiri_model_2001__p1(p1, e1_star_p1)

  // Assignment Rules:
  p1 := 1.0 - e1_star_p1;
end

model asthagiri_model_2001__p2(p2, e2_star_p2)

  // Assignment Rules:
  p2 := 1.0 - e2_star_p2;
end

model asthagiri_model_2001__p3(p3, e3_star_p3)

  // Assignment Rules:
  p3 := 1.0 - e3_star_p3;
end

model asthagiri_model_2001__p4(p4, e4_star_p4)

  // Assignment Rules:
  p4 := 1.0 - e4_star_p4;
end

model asthagiri_model_2001__p5(p5, e5_star_p5)

  // Assignment Rules:
  p5 := 1.0 - e5_star_p5;
end

model asthagiri_model_2001__e1(e1, e1_e0_star, e1_star, e2_e1_star, e1_star_p1, E1_T, E2_T, P1_T)

  // Assignment Rules:
  e1 := 1.0 - ( e1_e0_star + e1_star + E2_T / E1_T * e2_e1_star + P1_T / E1_T * e1_star_p1 );
end

model asthagiri_model_2001__e3(e3, e3_e2_star, e3_star, e4_e3_star, e3_star_p3, E3_T, E4_T, P3_T)

  // Assignment Rules:
  e3 := 1.0 - ( e3_e2_star + e3_star + E4_T / E3_T * e4_e3_star + P3_T / E3_T * e3_star_p3 );
end

model asthagiri_model_2001__e5(e5, e5_e4_star, e5_star, e5_star_p5, E5_T, P5_T)

  // Assignment Rules:
  e5 := 1.0 - ( e5_e4_star + e5_star + P5_T / E5_T * e5_star_p5 );
end

model asthagiri_model_2001__e2(e2, e2_e1_star, e3_star, e3_e2_star, e2_minus, e2_star_p2, e2_star_e4_star, E2_T, E3_T, E4_T, P2_T)

  // Assignment Rules:
  e2 := 1.0 - ( e3_e2_star + e3_star + E3_T / E2_T * e3_e2_star + E4_T / E2_T * e2_star_e4_star + P2_T / E2_T * e2_star_p2 );
end

model asthagiri_model_2001__e4(e4, e4_e3_star, e4_star, e5_e4_star, e4_star_p4, e2_star_e4_star, e0_star_e4_star, E4_T, E5_T, P4_T)

  // Assignment Rules:
  e4 := 1.0 - ( e4_e3_star + e4_star + E5_T / E4_T * e5_e4_star + P4_T / E4_T * e4_star_p4 + e0_star_e4_star + e2_star_e4_star );
end

model asthagiri_model_2001__model_parameters(L0, R0, A1_T, A2_T, E1_T, E2_T, E3_T, E4_T, E5_T, P1_T, P2_T, P3_T, P4_T, P5_T, kf, kr, kc, ku, kc_plus, kc_minus, kf_1, kf_2, kf_12, kc_12, kr_1, kr_2, kr_12, kd_12, k1_plus, kP1_plus, k2_plus, kP2_plus, k3_plus, kP3_plus, k4_plus, kP4_plus, k5_plus, kP5_plus, kx_plus, kz_plus, k1_minus, kP1_minus, k2_minus, kP2_minus, k3_minus, kP3_minus, k4_minus, kP4_minus, k5_minus, kP5_minus, kx_minus, kz_minus, kcat_1, kcat_2, kcat_3, kcat_4, kcat_5, kcat_P1, kcat_P2, kcat_P3, kcat_P4, kcat_P5, kcat_x, kcat_z)

  // Assignment Rules:
  L0 := kr / kf;
  kr_1 := kf_1 * 1E-7;
  kr_2 := kf_2 * 1E-7;
  kr_12 := kf_12 * 1E-7;
  kd_12 := kc_12 * 1E-7;

  // Variable initializations:
  R0 = 1E5;
  A1_T = 1E4;
  A2_T = 1E4;
  E1_T = 1E4;
  E2_T = 1E4;
  E3_T = 1E4;
  E4_T = 1E4;
  E5_T = 1E4;
  P1_T = 5E3;
  P2_T = 5E3;
  P3_T = 5E3;
  P4_T = 5E3;
  P5_T = 5E3;
  kf = 1E7;
  kr = 0.3;
  kc = 6E7;
  ku = 60.0;
  kc_plus = 50.0;
  kc_minus = 5.0;
  kf_1 = 3E8;
  kf_2 = 3E8;
  kf_12 = 3E8;
  kc_12 = 3E8;
  k1_plus = 6E8;
  kP1_plus = 6E8;
  k2_plus = 6E8;
  kP2_plus = 6E8;
  k3_plus = 6E8;
  kP3_plus = 6E8;
  k4_plus = 6E8;
  kP4_plus = 6E8;
  k5_plus = 6E8;
  kP5_plus = 6E8;
  kx_plus = 6E8;
  kz_plus = 6E8;
  k1_minus = 30;
  kP1_minus = 30;
  k2_minus = 30;
  kP2_minus = 30;
  k3_minus = 30;
  kP3_minus = 30;
  k4_minus = 30;
  kP4_minus = 30;
  k5_minus = 30;
  kP5_minus = 30;
  kx_minus = 30;
  kz_minus = 30;
  kcat_1 = 6;
  kcat_2 = 6;
  kcat_3 = 6;
  kcat_4 = 6;
  kcat_5 = 6;
  kcat_P1 = 6;
  kcat_P2 = 6;
  kcat_P3 = 6;
  kcat_P4 = 6;
  kcat_P5 = 6;
  kcat_x = 6;
  kcat_z = 6;
end

model asthagiri_model_2001____main()

  // Sub-modules, and any changes to those submodules:
  environment: asthagiri_model_2001__environment(time_);
  c: asthagiri_model_2001__c(c0, c20, L0, R0, kr, kf, ku, kc, r0, time_);
  c2: asthagiri_model_2001__c2(c20, c0, c_star0, R0, kr, kc_plus, kc_minus, kf, ku, kc, time_);
  c_star: asthagiri_model_2001__c_star(c_star0, c20, a10, e0_star0, c_star_a10, a1a20, R0, kr, kr_1, kf_1, kc_plus, kc_minus, kr_12, kf_12, A1_T, A2_T, time_);
  c_star_a1: asthagiri_model_2001__c_star_a1(c_star_a10, c_star0, a10, e0_star0, a20, e0_star_e4_star0, R0, kr, kr_1, kf_1, kr_2, kf_2, kc_plus, kc_minus, kcat_x, A1_T, A2_T, E4_T, time_);
  e0_star: asthagiri_model_2001__e0_star(e0_star0, c_star_a10, a20, e10, e4_star0, e1_e0_star0, c_star0, a1a20, e0_star_e4_star0, kr, kr_12, kf_12, kr_2, kf_2, k1_plus, k1_minus, kx_plus, kx_minus, kcat_1, A1_T, A2_T, E1_T, E4_T, time_);
  a1a2: asthagiri_model_2001__a1a2(a1a20, c_star0, a10, a20, e0_star0, kr, kr_12, kf_12, kc_12, kd_12, A1_T, A2_T, R0, time_);
  r: asthagiri_model_2001__r(r0, c0, c20, c_star0, c_star_a10, e0_star0, e0_star_e4_star0, e1_e0_star0, A1_T, A2_T, E1_T, E4_T, R0);
  a1: asthagiri_model_2001__a1(a10, c_star_a10, a1a20, e0_star0, e0_star_e4_star0, e1_e0_star0, A1_T, A2_T, E1_T, E4_T);
  a2: asthagiri_model_2001__a2(a20, a2_minus0, a1a20, e0_star0, e0_star_e4_star0, e1_e0_star0, A1_T, A2_T, E1_T, E4_T);
  a2_minus: asthagiri_model_2001__a2_minus(a2_minus0, e0_star_e4_star0, kr, kcat_x, E4_T, A2_T, time_);
  e1_star_p1: asthagiri_model_2001__e1_star_p1(e1_star_p10, e1_star0, p10, kr, kP1_plus, kP1_minus, kcat_P1, E1_T, time_);
  e2_star_p2: asthagiri_model_2001__e2_star_p2(e2_star_p20, e2_star0, p20, kr, kP2_plus, kP2_minus, kcat_P2, E2_T, time_);
  e3_star_p3: asthagiri_model_2001__e3_star_p3(e3_star_p30, e3_star0, p30, kr, kP3_plus, kP3_minus, kcat_P3, E3_T, time_);
  e4_star_p4: asthagiri_model_2001__e4_star_p4(e4_star_p40, e4_star0, p40, kr, kP4_plus, kP4_minus, kcat_P4, E4_T, time_);
  e5_star_p5: asthagiri_model_2001__e5_star_p5(e5_star_p50, e5_star0, p50, kr, kP5_plus, kP5_minus, kcat_P5, E5_T, time_);
  e1_e0_star: asthagiri_model_2001__e1_e0_star(e1_e0_star0, e10, e0_star0, kr, k1_plus, k1_minus, kcat_1, A2_T, time_);
  e2_e1_star: asthagiri_model_2001__e2_e1_star(e2_e1_star0, e20, e1_star0, kr, k2_plus, k2_minus, kcat_2, E1_T, time_);
  e3_e2_star: asthagiri_model_2001__e3_e2_star(e3_e2_star0, e30, e2_star0, kr, k3_plus, k3_minus, kcat_3, E2_T, time_);
  e4_e3_star: asthagiri_model_2001__e4_e3_star(e4_e3_star0, e40, e3_star0, kr, k4_plus, k4_minus, kcat_4, E3_T, time_);
  e5_e4_star: asthagiri_model_2001__e5_e4_star(e5_e4_star0, e50, e4_star0, kr, k5_plus, k5_minus, kcat_5, E4_T, time_);
  e2_star_e4_star: asthagiri_model_2001__e2_star_e4_star(e2_star_e4_star0, e2_star0, e4_star0, kr, kz_plus, kz_minus, k2_plus, k2_minus, kcat_z, E2_T, time_);
  e0_star_e4_star: asthagiri_model_2001__e0_star_e4_star(e0_star_e4_star0, e0_star0, e4_star0, kr, kx_plus, kx_minus, kcat_x, A2_T, time_);
  e2_minus: asthagiri_model_2001__e2_minus(e2_minus0, e2_star_e4_star0, kr, kcat_z, E4_T, E2_T, time_);
  e1_star: asthagiri_model_2001__e1_star(e1_star0, e1_e0_star0, e2_e1_star0, e1_star_p10, p10, e20, kr, kcat_1, kcat_2, k2_plus, k2_minus, kP1_plus, kP1_minus, E2_T, P1_T, E1_T, time_);
  e3_star: asthagiri_model_2001__e3_star(e3_star0, e3_e2_star0, e4_e3_star0, e3_star_p30, p30, e40, kr, kcat_3, kcat_4, k4_plus, k4_minus, kP3_plus, kP3_minus, E4_T, P3_T, E3_T, time_);
  e5_star: asthagiri_model_2001__e5_star(e5_star0, e5_e4_star0, e5_star_p50, p50, kr, kcat_5, kP5_plus, kP5_minus, P5_T, E5_T, time_);
  e2_star: asthagiri_model_2001__e2_star(e2_star0, e2_e1_star0, e3_e2_star0, e2_star_p20, e4_star0, e2_star_e4_star0, p20, e30, kr, kcat_2, kcat_3, k3_plus, k3_minus, kz_plus, kz_minus, kP2_plus, kP2_minus, E2_T, P2_T, E3_T, E4_T, time_);
  e4_star: asthagiri_model_2001__e4_star(e4_star0, e4_e3_star0, e5_e4_star0, e4_star_p40, e2_star0, e2_star_e4_star0, e0_star0, e0_star_e4_star0, p40, e50, kr, kcat_4, kcat_5, kcat_x, kcat_z, k5_plus, k5_minus, kz_plus, kz_minus, kx_plus, kx_minus, kP4_plus, kP4_minus, A2_T, E2_T, P4_T, E5_T, E4_T, time_);
  p1: asthagiri_model_2001__p1(p10, e1_star_p10);
  p2: asthagiri_model_2001__p2(p20, e2_star_p20);
  p3: asthagiri_model_2001__p3(p30, e3_star_p30);
  p4: asthagiri_model_2001__p4(p40, e4_star_p40);
  p5: asthagiri_model_2001__p5(p50, e5_star_p50);
  e1: asthagiri_model_2001__e1(e10, e1_e0_star0, e1_star0, e2_e1_star0, e1_star_p10, E1_T, E2_T, P1_T);
  e3: asthagiri_model_2001__e3(e30, e3_e2_star0, e3_star0, e4_e3_star0, e3_star_p30, E3_T, E4_T, P3_T);
  e5: asthagiri_model_2001__e5(e50, e5_e4_star0, e5_star0, e5_star_p50, E5_T, P5_T);
  e2: asthagiri_model_2001__e2(e20, e2_e1_star0, e3_star0, e3_e2_star0, e2_minus0, e2_star_p20, e2_star_e4_star0, E2_T, E3_T, E4_T, P2_T);
  e4: asthagiri_model_2001__e4(e40, e4_e3_star0, e4_star0, e5_e4_star0, e4_star_p40, e2_star_e4_star0, e0_star_e4_star0, E4_T, E5_T, P4_T);
  model_parameters: asthagiri_model_2001__model_parameters(L0, R0, A1_T, A2_T, E1_T, E2_T, E3_T, E4_T, E5_T, P1_T, P2_T, P3_T, P4_T, P5_T, kf, kr, kc, ku, kc_plus, kc_minus, kf_1, kf_2, kf_12, kc_12, kr_1, kr_2, kr_12, kd_12, k1_plus, kP1_plus, k2_plus, kP2_plus, k3_plus, kP3_plus, k4_plus, kP4_plus, k5_plus, kP5_plus, kx_plus, kz_plus, k1_minus, kP1_minus, k2_minus, kP2_minus, k3_minus, kP3_minus, k4_minus, kP4_minus, k5_minus, kP5_minus, kx_minus, kz_minus, kcat_1, kcat_2, kcat_3, kcat_4, kcat_5, kcat_P1, kcat_P2, kcat_P3, kcat_P4, kcat_P5, kcat_x, kcat_z);
end
