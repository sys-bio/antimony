//Created by libAntimony v1.3
model komarova_2003__environment(time_)
end

model komarova_2003__S_0(S_0, R_0, u_s, phi, time_)

  // Rate Rules:
  S_0' = R_0 * S_0 / 1 * (1 - u_s) - phi * S_0;

  // Variable initializations:
  S_0 = 0.5;
end

model komarova_2003__S_1(S_0, S_1, R_0, R_1, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_1' = alpha * u * R_0 * S_0 / 1 * (1 - epsilon_s) + R_1 * S_1 / 1 * (1 - u_s) - phi * S_1;

  // Variable initializations:
  S_1 = 0;
end

model komarova_2003__S_2(S_1, S_2, R_1, R_2, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_2' = alpha * u * R_1 * S_1 / 1 * (1 - epsilon_s) + R_2 * S_2 / 1 * (1 - u_s) - phi * S_2;

  // Variable initializations:
  S_2 = 0;
end

model komarova_2003__S_3(S_2, S_3, R_2, R_3, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_3' = alpha * u * R_2 * S_2 / 1 * (1 - epsilon_s) + R_3 * S_3 / 1 * (1 - u_s) - phi * S_3;

  // Variable initializations:
  S_3 = 0;
end

model komarova_2003__S_4(S_3, S_4, R_3, R_4, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_4' = alpha * u * R_3 * S_3 / 1 * (1 - epsilon_s) + R_4 * S_4 / 1 * (1 - u_s) - phi * S_4;

  // Variable initializations:
  S_4 = 0;
end

model komarova_2003__S_5(S_4, S_5, R_4, R_5, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_5' = alpha * u * R_4 * S_4 / 1 * (1 - epsilon_s) + R_5 * S_5 / 1 * (1 - u_s) - phi * S_5;

  // Variable initializations:
  S_5 = 0;
end

model komarova_2003__S_6(S_5, S_6, R_5, R_6, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_6' = alpha * u * R_5 * S_5 / 1 * (1 - epsilon_s) + R_6 * S_6 / 1 * (1 - u_s) - phi * S_6;

  // Variable initializations:
  S_6 = 0;
end

model komarova_2003__S_7(S_6, S_7, R_6, R_7, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_7' = alpha * u * R_6 * S_6 / 1 * (1 - epsilon_s) + R_7 * S_7 / 1 * (1 - u_s) - phi * S_7;

  // Variable initializations:
  S_7 = 0;
end

model komarova_2003__S_8(S_7, S_8, R_7, R_8, epsilon_s, alpha, u_s, u, phi, time_)

  // Rate Rules:
  S_8' = alpha * u * R_7 * S_7 / 1 * (1 - epsilon_s) + R_8 * S_8 / 1 * (1 - u_s) - phi * S_8;

  // Variable initializations:
  S_8 = 0;
end

model komarova_2003__M_0(M_0, R_0, epsilon_m, alpha, u_m, phi, time_)

  // Rate Rules:
  M_0' = R_0 * M_0 / 1 * (1 - u_m) - phi * M_0;

  // Variable initializations:
  M_0 = 0.5;
end

model komarova_2003__M_1(M_0, M_1, M_1_2, R_0, R_1, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_1' = M_0 * 1;
  M_1_2' = alpha * u * R_0 * M_0 / 1 * (1 - epsilon_m) + R_1 * M_1 / 1 * (1 - u_m) - phi * M_1;

  // Variable initializations:
  M_1 = 0;
  M_1_2 = 0;
end

model komarova_2003__M_2(M_1, M_2, R_1, R_2, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_2' = alpha * u * R_1 * M_1 / 1 * (1 - epsilon_m) + R_2 * M_2 / 1 * (1 - u_m) - phi * M_2;

  // Variable initializations:
  M_2 = 0;
end

model komarova_2003__M_3(M_2, M_3, R_2, R_3, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_3' = alpha * u * R_2 * M_2 / 1 * (1 - epsilon_m) + R_3 * M_3 / 1 * (1 - u_m) - phi * M_3;

  // Variable initializations:
  M_3 = 0;
end

model komarova_2003__M_4(M_3, M_4, R_3, R_4, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_4' = alpha * u * R_3 * M_4 / 1 * (1 - epsilon_m) + R_4 * M_4 / 1 * (1 - u_m) - phi * M_4;

  // Variable initializations:
  M_4 = 0;
end

model komarova_2003__M_5(M_4, M_5, R_4, R_5, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_5' = alpha * u * R_4 * M_4 / 1 * (1 - epsilon_m) + R_5 * M_5 / 1 * (1 - u_m) - phi * M_5;

  // Variable initializations:
  M_5 = 0;
end

model komarova_2003__M_6(M_5, M_6, R_5, R_6, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_6' = alpha * u * R_5 * M_5 / 1 * (1 - epsilon_m) + R_6 * M_6 / 1 * (1 - u_m) - phi * M_6;

  // Variable initializations:
  M_6 = 0;
end

model komarova_2003__M_7(M_6, M_7, R_6, R_7, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_7' = alpha * u * R_6 * M_6 / 1 * (1 - epsilon_m) + R_7 * M_7 / 1 * (1 - u_m) - phi * M_7;

  // Variable initializations:
  M_7 = 0;
end

model komarova_2003__M_8(M_7, M_8, R_7, R_8, S_8, epsilon_m, alpha, u_m, u, phi, time_)

  // Rate Rules:
  M_8' = alpha * u * R_7 * M_7 / 1 * (1 - epsilon_m) + R_8 * M_8 / 1 * (1 - u_m + alpha * u / 1 * (1 - epsilon_m)) - phi * S_8;

  // Variable initializations:
  M_8 = 0;
end

model komarova_2003__R(R_0, R_1, R_2, R_3, R_4, R_5, R_6, R_7, R_8, alpha, a)

  // Assignment Rules:
  R_0 := r_0;
  R_1 := r_1 * (1 - a);
  R_2 := r_2 * (1 - a);
  R_3 := r_3 * (1 - a);
  R_4 := r_4 * (1 - a);
  R_5 := r_5 * (1 - a);
  R_6 := r_6 * (1 - a);
  R_7 := r_7 * (1 - a);
  R_8 := r_8 * (1 - a);

  // Variable initializations:
  r_0 = 0.5;
  r_1 = 0.6;
  r_2 = 0.7;
  r_3 = 0.8;
  r_4 = 0.9;
  r_5 = 1;
  r_6 = 1.1;
  r_7 = 1.2;
  r_8 = 1.3;
end

model komarova_2003__phi(phi, u_s, u_m, S_0, S_1, S_2, S_3, S_4, S_5, S_6, S_7, S_8, M_1, M_2, M_3, M_4, M_5, M_6, M_7, M_8, R_0, R_1, R_2, R_3, R_4, R_5, R_6, R_7, R_8)

  // Assignment Rules:
  phi := (1 - u_s) / 1 * (R_0 * S_0 + R_1 * S_1 + R_2 * S_2 + R_3 * S_3 + R_4 * S_4) + (1 - u_m) / 1 * (R_1 * M_1 + R_2 * M_2 + R_3 * M_3 + R_4 * M_4);
end

model komarova_2003__w(time_, alpha, u, epsilon_s, R_0, S_0, R_1, S_1, R_2, S_2, R_3, S_3, R_4, S_4, R_5, S_5, R_6, S_6, R_7, S_7, R_8, S_8, epsilon_m, M_0, M_1, M_2, M_3, M_4, M_5, M_6, M_7, M_8, phi)

  // Rate Rules:
  w' = (1 - alpha) * u / 1 * ((1 - epsilon_s) * (R_0 * S_0 + R_1 * S_1 + R_2 * S_2 + R_3 * S_3 + R_4 * S_4 + R_5 * S_5 + R_6 * S_6 + R_7 * S_7 + R_8 * S_8) + (1 - epsilon_m) * (R_0 * M_0 + R_1 * M_1 + R_2 * M_2 + R_3 * M_3 + R_4 * M_4 + R_5 * M_5 + R_6 * M_6 + R_7 * M_7 + R_8 * M_8)) - phi * w;

  // Variable initializations:
  w = 0;
end

model komarova_2003__total_cells(S_0, S_1, S_2, S_3, S_4, S_5, S_6, S_7, S_8, M_0, M_1, M_2, M_3, M_4, M_5, M_6, M_7, M_8)

  // Assignment Rules:
  total_cells := S_0 + S_1 + S_2 + S_3 + S_4 + S_5 + S_6 + S_7 + S_8 + M_0 + M_2 + M_3 + M_4 + M_5 + M_6 + M_7 + M_8;
  stable_total := S_0 + S_1 + S_2 + S_3 + S_4 + S_5 + S_6 + S_7 + S_8;
  mutant_total := M_0 + M_2 + M_3 + M_4 + M_5 + M_6 + M_7 + M_8;
end

model komarova_2003__kinetic_parameters(alpha, beta, a, u, u_s, u_m, epsilon_m, epsilon_s)

  // Assignment Rules:
  u_s := u * (1 - beta * epsilon_s / 1 );
  u_m := u * (1 - beta * epsilon_m / 1 );

  // Variable initializations:
  alpha = 0.6;
  beta = 0.2;
  a = 0.5;
  u = 0.07;
  epsilon_m = 0.1;
  epsilon_s = 0.99;
end

model komarova_2003____main()

  // Sub-modules, and any changes to those submodules:
  environment: komarova_2003__environment(time_);
  S_0: komarova_2003__S_0(S_00, R_0, u_s, phi0, time_);
  S_1: komarova_2003__S_1(S_00, S_10, R_0, R_1, epsilon_s, alpha, u_s, u, phi0, time_);
  S_2: komarova_2003__S_2(S_10, S_20, R_1, R_2, epsilon_s, alpha, u_s, u, phi0, time_);
  S_3: komarova_2003__S_3(S_20, S_30, R_2, R_3, epsilon_s, alpha, u_s, u, phi0, time_);
  S_4: komarova_2003__S_4(S_30, S_40, R_3, R_4, epsilon_s, alpha, u_s, u, phi0, time_);
  S_5: komarova_2003__S_5(S_40, S_50, R_4, R_5, epsilon_s, alpha, u_s, u, phi0, time_);
  S_6: komarova_2003__S_6(S_50, S_60, R_5, R_6, epsilon_s, alpha, u_s, u, phi0, time_);
  S_7: komarova_2003__S_7(S_60, S_70, R_6, R_7, epsilon_s, alpha, u_s, u, phi0, time_);
  S_8: komarova_2003__S_8(S_70, S_80, R_7, R_8, epsilon_s, alpha, u_s, u, phi0, time_);
  M_0: komarova_2003__M_0(M_00, R_0, epsilon_m, alpha, u_m, phi0, time_);
  M_1: komarova_2003__M_1(M_00, M_10, M_1_2, R_0, R_1, epsilon_m, alpha, u_m, u, phi0, time_);
  M_2: komarova_2003__M_2(M_10, M_20, R_1, R_2, epsilon_m, alpha, u_m, u, phi0, time_);
  M_3: komarova_2003__M_3(M_20, M_30, R_2, R_3, epsilon_m, alpha, u_m, u, phi0, time_);
  M_4: komarova_2003__M_4(M_30, M_40, R_3, R_4, epsilon_m, alpha, u_m, u, phi0, time_);
  M_5: komarova_2003__M_5(M_40, M_50, R_4, R_5, epsilon_m, alpha, u_m, u, phi0, time_);
  M_6: komarova_2003__M_6(M_50, M_60, R_5, R_6, epsilon_m, alpha, u_m, u, phi0, time_);
  M_7: komarova_2003__M_7(M_60, M_70, R_6, R_7, epsilon_m, alpha, u_m, u, phi0, time_);
  M_8: komarova_2003__M_8(M_70, M_80, R_7, R_8, S_80, epsilon_m, alpha, u_m, u, phi0, time_);
  R: komarova_2003__R(R_0, R_1, R_2, R_3, R_4, R_5, R_6, R_7, R_8, alpha, a);
  phi: komarova_2003__phi(phi0, u_s, u_m, S_00, S_10, S_20, S_30, S_40, S_50, S_60, S_70, S_80, M_10, M_20, M_30, M_40, M_50, M_60, M_70, M_80, R_0, R_1, R_2, R_3, R_4, R_5, R_6, R_7, R_8);
  w: komarova_2003__w(time_, alpha, u, epsilon_s, R_0, S_00, R_1, S_10, R_2, S_20, R_3, S_30, R_4, S_40, R_5, S_50, R_6, S_60, R_7, S_70, R_8, S_80, epsilon_m, M_00, M_10, M_20, M_30, M_40, M_50, M_60, M_70, M_80, phi0);
  total_cells: komarova_2003__total_cells(S_00, S_10, S_20, S_30, S_40, S_50, S_60, S_70, S_80, M_00, M_10, M_20, M_30, M_40, M_50, M_60, M_70, M_80);
  kinetic_parameters: komarova_2003__kinetic_parameters(alpha, beta, a, u, u_s, u_m, epsilon_m, epsilon_s);
end
