//Created by libAntimony v1.4
model ebihara_johnson_1980__environment(time_)
end

model ebihara_johnson_1980__membrane(V, time_, i_Na, i_s, i_x1, i_K1, IStimC)

  // Assignment Rules:
  IStimC := Istim;

  // Rate Rules:
  V' = (Istim - ( i_Na + i_s + i_x1 + i_K1 )) / C;

  // Variable initializations:
  V = -87.0;
  C = 0.013;
end

model ebihara_johnson_1980__fast_sodium_current_m_gate(m, V, time_)

  // Assignment Rules:
  alpha_m := 0.32 * ( 47.13 + V ) / ( 1.0 - exp(-( V ) - 47.13 ));
  beta_m := 0.08 * exp(-( V ) / 11.0 );

  // Rate Rules:
  m' = alpha_m * ( 1.0 - m ) - beta_m * m;

  // Variable initializations:
  m = 0.0;
end

model ebihara_johnson_1980__fast_sodium_current_h_gate(h, V, time_)

  // Assignment Rules:
  alpha_h := piecewise( 0.135 * exp(( -80.0 - V ) / 6.8 ) , V < -40.0 , 0.0 );
  beta_h := piecewise( 3.56 * exp( 0.079 * V ) + 3.1E5 * exp( 0.35 * V ) , V < -40.0 , 1.0 / ( 0.13 * ( 1.0 + exp(-(( V + 10.66 )) / 11.1 ))) );

  // Rate Rules:
  h' = alpha_h * ( 1.0 - h ) - beta_h * h;

  // Variable initializations:
  h = 0.18;
end

model ebihara_johnson_1980__fast_sodium_current(i_Na, m, h, time_, V)

  // Sub-modules, and any changes to those submodules:
  fast_sodium_current_m_gate: ebihara_johnson_1980__fast_sodium_current_m_gate(m, V, time_);
  fast_sodium_current_h_gate: ebihara_johnson_1980__fast_sodium_current_h_gate(h, V, time_);

  // Assignment Rules:
  i_Na := g_Na * power( m , 3.0 ) * h * ( V - E_Na );

  // Variable initializations:
  g_Na = 23.0e-2;
  E_Na = 29.0;
end

model ebihara_johnson_1980__slow_inward_current_d_gate(d, V, time_)

  // Assignment Rules:
  alpha_d := 0.095 * exp(-((( V - 5.0 ) / 100.0 ))) / ( 1.0 + exp(-((( V - 5.0 ) / 13.89 ))));
  beta_d := 0.07 * exp(-((( V + 44.0 ) / 59.0 ))) / ( 1.0 + exp(( V + 44.0 ) / 20.0 ));

  // Rate Rules:
  d' = alpha_d * ( 1.0 - d ) - beta_d * d;

  // Variable initializations:
  d = 0.003;
end

model ebihara_johnson_1980__slow_inward_current_f_gate(f, V, time_)

  // Assignment Rules:
  alpha_f := 0.012 * exp(-((( V + 28.0 ) / 125.0 ))) / ( 1.0 + exp(( V + 28.0 ) / 6.67 ));
  beta_f := 0.0065 * exp(-((( V + 30.0 ) / 50.0 ))) / ( 1.0 + exp(-((( V + 30.0 ) / 5.0 ))));

  // Rate Rules:
  f' = alpha_f * ( 1.0 - f ) - beta_f * f;

  // Variable initializations:
  f = 0.994;
end

model ebihara_johnson_1980__slow_inward_current(i_s, time_, V, d, f)

  // Sub-modules, and any changes to those submodules:
  slow_inward_current_d_gate: ebihara_johnson_1980__slow_inward_current_d_gate(d, V, time_);
  slow_inward_current_f_gate: ebihara_johnson_1980__slow_inward_current_f_gate(f, V, time_);

  // Assignment Rules:
  i_s := g_s * d * f * ( V - E_s );
  E_s := -82.3 - 13.0287 * ln( Cai * 0.001 );

  // Rate Rules:
  Cai' = -0.01 * i_s + 0.07 * ( 0.0001 - Cai );

  // Variable initializations:
  g_s = 9.0e-4;
  Cai = 0.000000177;
end

model ebihara_johnson_1980__time_dependent_outward_current_x1_gate(x1, V, time_)

  // Assignment Rules:
  alpha_x1 := 0.0005 * (exp(( V + 50.0 ) / 12.1 ) / ( 1.0 + exp(( V + 50.0 ) / 17.5 )));
  beta_x1 := 0.0013 * (exp(-((( V + 20.0 ) / 16.67 ))) / ( 1.0 + exp(-((( V + 20.0 ) / 25.0 )))));

  // Rate Rules:
  x1' = alpha_x1 * ( 1.0 - x1 ) - beta_x1 * x1;
end

model ebihara_johnson_1980__time_dependent_outward_current(i_x1, time_, V, x1)

  // Sub-modules, and any changes to those submodules:
  time_dependent_outward_current_x1_gate: ebihara_johnson_1980__time_dependent_outward_current_x1_gate(x1, V, time_);

  // Assignment Rules:
  i_x1 := x1 * 8.0E-3 * ((exp( 0.04 * ( V + 77.0 )) - 1.0 ) / exp( 0.04 * ( V + 35.0 )));
end

model ebihara_johnson_1980__time_independent_outward_current(i_K1, time_, V)

  // Assignment Rules:
  i_K1 := 0.0035 * ( 4.0 * ((exp( 0.04 * ( V + 85.0 )) - 1.0 ) / (exp( 0.08 * ( V + 53 )) + exp( 0.04 * ( V + 53.0 )))) + 0.2 * (( V + 23.0 ) / ( 1.0 - exp( -0.04 * ( V + 23.0 )))));
end

model ebihara_johnson_1980____main()

  // Sub-modules, and any changes to those submodules:
  environment: ebihara_johnson_1980__environment(time_);
  membrane: ebihara_johnson_1980__membrane(V, time_, i_Na, i_s, i_x1, i_K1, IStimC);
  fast_sodium_current: ebihara_johnson_1980__fast_sodium_current(i_Na, m, h, time_, V);
  slow_inward_current: ebihara_johnson_1980__slow_inward_current(i_s, time_, V, d, f);
  time_dependent_outward_current: ebihara_johnson_1980__time_dependent_outward_current(i_x1, time_, V, x1);
  time_independent_outward_current: ebihara_johnson_1980__time_independent_outward_current(i_K1, time_, V);
end
