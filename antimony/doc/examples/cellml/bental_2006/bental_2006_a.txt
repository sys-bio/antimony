//Created by libAntimony v1.3
model bental_A_2005__Environment(time_)
end

model bental_A_2005__PluralPressureFunction(time_, P_L, dP_Ldt)

  // Assignment Rules:
  P_L := P_m - R * omega * V_T / 2 * sin(omega * time_ / 1 ) - E * (2.5 - V_T * 1 / 2 * cos(omega * time_ / 1 ));
  dP_Ldt := -(R) * power(omega, 2 ) * V_T / (2 * 1 ) * cos(omega * time_ / 1 ) - E * (2.5 - V_T / 2 * sin(omega * time_ / 1 ));
  R := 2 * pi * 1 / 5;

  // Variable initializations:
  P_m = 760;
  omega = 1.256637;
  V_T = 0.41;
  E = 2.5;
end

model bental_A_2005__lungMechanics(time_, P_L, dP_Ldt, V_A, P_A, Q_A, q)

  // Assignment Rules:
  q := (P_m - P_A) / R;

  // Rate Rules:
  V_A' = (P_m - P_L - V_A * E / 1 ) / R;
  P_A' = P_m * E * Q_A / (P_A * 1 ) + dP_Ldt;

  // Variable initializations:
  P_m = 760;
  V_A = 1;
  E = 2.5;
  P_A = 760;
  R = 1;
end

model bental_A_2005__gasExchange(time_, P_A, V_A, D_o, f_o, D_c, P_w, p_o, p_ac, Q_A, p_c, q)

  // Assignment Rules:
  f_oi := piecewise( (f_o * V_D + f_om * (V_T - V_D)) / V_T , V_T >= V_D , f_o );
  f_ci := piecewise( (f_c * V_D + f_cm * (V_T - V_D)) / V_T , V_T >= V_D , f_c );
  p_ao := f_o * (P_A - P_w);
  p_ac := f_c * (P_A - P_w);
  Q_A := q + 1 * D_c * (p_c - p_ac) + 1 * D_o * (p_o - p_ao);

  // Rate Rules:
  f_o' = 1 / V_A * (1 * D_o * (p_o - p_ao) + (f_oi - f_o) * q - f_o * (1 * D_c * (p_c - p_ac) + 1 * D_o * (p_o - p_ao)));
  f_c' = 1 / V_A * (1 * D_c * (p_c - p_ac) + (f_ci - f_c) * q - f_c * (1 * D_o * (p_o - p_ao) + 1 * D_c * (p_c - p_ac)));

  // Variable initializations:
  D_o = 0.0000156;
  f_o = 0.1368;
  D_c = 0.0000316;
  f_c = 0.05263;
  P_w = 47;
  f_om = 0.21;
  f_cm = 0;
  V_D = 0.151;
  V_T = 0.41;
end

model bental_A_2005__gasTransport(time_, f_o, p_o, D_o, P_A, P_w, D_c, p_c, p_ac)

  // Assignment Rules:
  df_satdp := ((L * power(1 + K_T * sigma * p_o, 4 ) + power(1 + K_R * sigma * p_o, 4 )) * (3 * L * power(K_T, 2 ) * power(sigma, 2 ) * p_o * 1 * power(1 + K_T * sigma * p_o, 2 ) + L * K_T * sigma * 1 * power(1 + K_T * sigma * p_o, 3 ) + 3 * power(K_R, 2 ) * power(sigma, 2 ) * p_o * 1 * power(1 + K_R * sigma * p_o, 2 ) + K_R * sigma * 1 * power(1 + K_R * sigma * p_o, 3 )) - (L * K_T * sigma * p_o * power(1 + K_T * sigma * p_o, 3 ) + K_R * sigma * p_o * power(1 + K_R * sigma * p_o, 3 )) * (4 * L * K_T * sigma * 1 * power(1 + K_T * sigma * p_o, 3 ) + 4 * K_R * sigma * 1 * power(1 + K_R * sigma * p_o, 3 ))) / power(L * power(1 + K_T * sigma * p_o, 4 ) + power(1 + K_R * sigma * p_o, 4 ), 2 );
  delta := power(10 , 1.9 );
  h := 1 * power(10 , -(7.4 ));

  // Rate Rules:
  p_o' = D_o / (sigma * V_c) * power(1 + 4 * T_h / sigma * df_satdp, -(1 )) * (f_o * (P_A - P_w) - p_o);
  p_c' = D_c / (sigma_c * V_c) * (p_ac - p_c) + 1 * delta * l_2 / sigma_c * h * z - delta * r_2 * p_c;
  z' = delta * r_2 * sigma_c * p_c / 1 - delta * l_2 * h * z;

  // Variable initializations:
  L = 171200000;
  K_T = 10000;
  K_R = 3600000;
  p_o = 40;
  sigma = 0.0000014;
  V_c = 0.071;
  T_h = 0.002;
  l_2 = 164000;
  p_c = 46;
  r_2 = 0.12;
  sigma_c = 0.000033;
  z = 0.00000044219;
end

model bental_A_2005____main()

  // Sub-modules, and any changes to those submodules:
  Environment: bental_A_2005__Environment(time_);
  PluralPressureFunction: bental_A_2005__PluralPressureFunction(time_, P_L, dP_Ldt);
  lungMechanics: bental_A_2005__lungMechanics(time_, P_L, dP_Ldt, V_A, P_A, Q_A, q);
  gasExchange: bental_A_2005__gasExchange(time_, P_A, V_A, D_o, f_o, D_c, P_w, p_o, p_ac, Q_A, p_c, q);
  gasTransport: bental_A_2005__gasTransport(time_, f_o, p_o, D_o, P_A, P_w, D_c, p_c, p_ac);
end
