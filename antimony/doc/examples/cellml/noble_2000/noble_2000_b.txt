//Created by libAntimony v1.3
model noble_2000b__environment(time_)
end

model noble_2000b__membrane(V, R, T, F, time_, i_K1, i_to, i_Kr, i_Ks, i_Ca_L_K_cyt, i_Ca_L_K_ds, i_NaK, i_Na, i_b_Na, i_p_Na, i_Ca_L_Na_cyt, i_Ca_L_Na_ds, i_NaCa_cyt, i_NaCa_ds, i_Ca_L_Ca_cyt, i_Ca_L_Ca_ds, i_b_Ca)

  // Assignment Rules:
  i_Stim := piecewise( stim_amplitude , (( time_ >= stim_start) && (time_ <= stim_end) && (time_ - stim_start - floor((time_ - stim_start) / stim_period) * stim_period <= stim_duration )), 0 );

  // Rate Rules:
  V' = -(1 ) / Cm * (i_Stim + i_K1 + i_to + i_Kr + i_Ks + i_NaK + i_Na + i_b_Na + i_p_Na + i_Ca_L_Na_cyt + i_Ca_L_Na_ds + i_NaCa_cyt + i_NaCa_ds + i_Ca_L_Ca_cyt + i_Ca_L_Ca_ds + i_Ca_L_K_cyt + i_Ca_L_K_ds + i_b_Ca);

  // Variable initializations:
  V = -92.8915042;
  R = 8314.472;
  T = 310;
  F = 96485.3415;
  Cm = 9.5e-5;
  stim_start = 200;
  stim_end = 600;
  stim_period = 1;
  stim_duration = 0.002;
  stim_amplitude = -6;
end

model noble_2000b__reversal_potentials(E_Na, E_K, E_Ks, E_Ca, E_mh, K_o, Na_o, K_i, Na_i, Ca_o, Ca_i, R, F, T, time_)

  // Assignment Rules:
  E_Na := R * T / F * ln(Na_o / Na_i);
  E_K := R * T / F * ln(K_o / K_i);
  E_Ks := R * T / F * ln((K_o + P_kna * Na_o) / (K_i + P_kna * Na_i));
  E_Ca := 0.5 * R * T / F * ln(Ca_o / Ca_i);
  E_mh := R * T / F * ln((Na_o + 0.12 * K_o) / (Na_i + 0.12 * K_i));

  // Variable initializations:
  P_kna = 0.03;
end

model noble_2000b__time_independent_potassium_current(i_K1, K_mk1, K_o, V, E_K, R, F, T, time_)

  // Assignment Rules:
  i_K1 := g_K1 * K_o / (K_o + K_mk1) * (V - E_K) / (1 + exp((V - E_K - 10 ) * F * 1.25 / (R * T)));

  // Variable initializations:
  K_mk1 = 10;
  g_K1 = 0.5;
end

model noble_2000b__rapid_delayed_rectifier_potassium_current_xr1_gate(xr1, V, time_)

  // Assignment Rules:
  alpha_xr1 := 50 / (1 + exp(-((V - 5 )) / 9 ));
  beta_xr1 := 0.05 * exp(-((V - 20 )) / 15 );

  // Rate Rules:
  xr1' = alpha_xr1 * (1 - xr1) - beta_xr1 * xr1;

  // Variable initializations:
  xr1 = 1.02e-5;
end

model noble_2000b__rapid_delayed_rectifier_potassium_current_xr2_gate(xr2, V, time_)

  // Assignment Rules:
  alpha_xr2 := 50 / (1 + exp(-((V - 5 )) / 9 ));
  beta_xr2 := 0.4 * exp(-(power((V + 30 ) / 30 , 3 )));

  // Rate Rules:
  xr2' = alpha_xr2 * (1 - xr2) - beta_xr2 * xr2;

  // Variable initializations:
  xr2 = 2e-7;
end

model noble_2000b__rapid_delayed_rectifier_potassium_current(i_Kr, E_K, time_, V, xr1, xr2)

  // Sub-modules, and any changes to those submodules:
  rapid_delayed_rectifier_potassium_current_xr1_gate: noble_2000b__rapid_delayed_rectifier_potassium_current_xr1_gate(xr1, V, time_);
  rapid_delayed_rectifier_potassium_current_xr2_gate: noble_2000b__rapid_delayed_rectifier_potassium_current_xr2_gate(xr2, V, time_);

  // Assignment Rules:
  i_Kr := (g_Kr1 * xr1 + g_Kr2 * xr2) * 1 / (1 + exp((V + 9 ) / 22.4 )) * (V - E_K);

  // Variable initializations:
  g_Kr1 = 0.0028;
  g_Kr2 = 0.0017;
end

model noble_2000b__slow_delayed_rectifier_potassium_current_xs_gate(xs, V, time_)

  // Assignment Rules:
  alpha_xs := 14 / (1 + exp(-((V - 40 )) / 9 ));
  beta_xs := 1 * exp(-(V) / 45 );

  // Rate Rules:
  xs' = alpha_xs * (1 - xs) - beta_xs * xs;

  // Variable initializations:
  xs = 0.0006469;
end

model noble_2000b__slow_delayed_rectifier_potassium_current(i_Ks, E_Ks, time_, V, xs)

  // Sub-modules, and any changes to those submodules:
  slow_delayed_rectifier_potassium_current_xs_gate: noble_2000b__slow_delayed_rectifier_potassium_current_xs_gate(xs, V, time_);

  // Assignment Rules:
  i_Ks := g_Ks * power(xs, 2 ) * (V - E_Ks);

  // Variable initializations:
  g_Ks = 0.0016;
end

model noble_2000b__fast_sodium_current_m_gate(m, V, time_)

  // Assignment Rules:
  alpha_m := piecewise( 2000 , abs(E0_m) < delta_m , 200 * E0_m / (1 - exp(-(0.1 ) * E0_m)) );
  beta_m := 8000 * exp(-(0.056 ) * (V + 66 ));
  E0_m := V + 41;

  // Rate Rules:
  m' = alpha_m * (1 - m) - beta_m * m;

  // Variable initializations:
  m = 0.0016111;
  delta_m = 1e-5;
end

model noble_2000b__fast_sodium_current_h_gate(h, V, time_)

  // Assignment Rules:
  alpha_h := 20 * exp(-(0.125 ) * (V + 75 - shift_h));
  beta_h := 2000 / (1 + 320 * exp(-(0.1 ) * (V + 75 - shift_h)));

  // Rate Rules:
  h' = alpha_h * (1 - h) - beta_h * h;

  // Variable initializations:
  h = 0.9944559;
  shift_h = 0;
end

model noble_2000b__fast_sodium_current(i_Na, E_mh, time_, V, m, h)

  // Sub-modules, and any changes to those submodules:
  fast_sodium_current_m_gate: noble_2000b__fast_sodium_current_m_gate(m, V, time_);
  fast_sodium_current_h_gate: noble_2000b__fast_sodium_current_h_gate(h, V, time_);

  // Assignment Rules:
  i_Na := g_Na * power(m, 3 ) * h * (V - E_mh);

  // Variable initializations:
  g_Na = 0.5;
end

model noble_2000b__persistent_sodium_current(i_p_Na, E_Na, time_, V)

  // Assignment Rules:
  i_p_Na := g_pna * 1 / (1 + exp(-((V + 52 )) / 8 )) * (V - E_Na);

  // Variable initializations:
  g_pna = 0.0027;
end

model noble_2000b__sodium_background_current(i_b_Na, Na_i, E_Na, time_, V)

  // Assignment Rules:
  i_b_Na := g_bna * (V - E_Na);

  // Variable initializations:
  g_bna = 0.0006;
end

model noble_2000b__L_type_Ca_channel_d_gate(d, V, time_)

  // Assignment Rules:
  alpha_d := piecewise( 120 , abs(E0_d) < 0.0001 , 30 * E0_d / (1 - exp(-(E0_d) / 4 )) );
  beta_d := piecewise( 120 , abs(E0_d) < 0.0001 , 12 * E0_d / (exp(E0_d / 10 ) - 1 ) );
  E0_d := V + 24 - 5;

  // Rate Rules:
  d' = speed_d * (alpha_d * (1 - d) - beta_d * d);

  // Variable initializations:
  d = 0;
  speed_d = 3;
end

model noble_2000b__L_type_Ca_channel_f_gate(CaChoncyt, CaChonds, V, Ca_i, Ca_ds, KCaChoff, Kmdsinact, time_)

  // Assignment Rules:
  CaChoncyt := (1 - f) * (1 - CaChoffcyt);
  CaChonds := (1 - f) * (1 - CaChoffds);
  CaChoffcyt := Ca_i / (KCaChoff + Ca_i);
  CaChoffds := Ca_ds / (Kmdsinact + Ca_ds);
  alpha_f := piecewise( 25 , abs(E0_f) < delta_f , 6.25 * E0_f / (exp(E0_f / 4 ) - 1 ) );
  beta_f := 12 / (1 + exp(-(1 ) * (V + 34 ) / 4 ));
  E0_f := V + 34;

  // Rate Rules:
  f' = (120 * (1 - f) * CaChoffcyt + (1 - f) * (1 - CaChoffcyt)) * speed_f * beta_f - alpha_f * f;

  // Variable initializations:
  f = 0;
  speed_f = 0.3;
  delta_f = 0.0001;
end

model noble_2000b__L_type_Ca_channel(i_Ca_L_Ca_cyt, i_Ca_L_K_cyt, i_Ca_L_Na_cyt, i_Ca_L_Ca_ds, i_Ca_L_K_ds, i_Ca_L_Na_ds, i_Ca_L, Ca_o, Ca_i, Ca_ds, K_o, K_i, Na_o, Na_i, R, F, T, time_, V, d, CaChoncyt, CaChonds, KCaChoff, Kmdsinact)

  // Sub-modules, and any changes to those submodules:
  L_type_Ca_channel_d_gate: noble_2000b__L_type_Ca_channel_d_gate(d, V, time_);
  L_type_Ca_channel_f_gate: noble_2000b__L_type_Ca_channel_f_gate(CaChoncyt, CaChonds, V, Ca_i, Ca_ds, KCaChoff, Kmdsinact, time_);

  // Assignment Rules:
  i_Ca_L_Ca_cyt := (1 - FrICa) * 4 * P_Ca_L * d * CaChoncyt * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F * 2 / (R * T))) * (Ca_i * exp(100 * F / (R * T)) - Ca_o * exp(-((V - 50 )) * F * 2 / (R * T)));
  i_Ca_L_K_cyt := (1 - FrICa) * P_CaK * P_Ca_L * d * CaChoncyt * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F / (R * T))) * (K_i * exp(50 * F / (R * T)) - K_o * exp(-((V - 50 )) * F / (R * T)));
  i_Ca_L_Na_cyt := (1 - FrICa) * P_CaNa * P_Ca_L * d * CaChoncyt * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F / (R * T))) * (Na_i * exp(50 * F / (R * T)) - Na_o * exp(-((V - 50 )) * F / (R * T)));
  i_Ca_L_Ca_ds := FrICa * 4 * P_Ca_L * d * CaChonds * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F * 2 / (R * T))) * (Ca_i * exp(100 * F / (R * T)) - Ca_o * exp(-((V - 50 )) * F * 2 / (R * T)));
  i_Ca_L_K_ds := FrICa * P_CaK * P_Ca_L * d * CaChonds * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F / (R * T))) * (K_i * exp(50 * F / (R * T)) - K_o * exp(-((V - 50 )) * F / (R * T)));
  i_Ca_L_Na_ds := FrICa * P_CaNa * P_Ca_L * d * CaChonds * (V - 50 ) * F / (R * T) / (1 - exp(-((V - 50 )) * F / (R * T))) * (Na_i * exp(50 * F / (R * T)) - Na_o * exp(-((V - 50 )) * F / (R * T)));
  i_Ca_L := i_Ca_L_Ca_cyt + i_Ca_L_K_cyt + i_Ca_L_Na_cyt + i_Ca_L_Ca_ds + i_Ca_L_K_ds + i_Ca_L_Na_ds;

  // Variable initializations:
  P_Ca_L = 1;
  P_CaK = 0.002;
  P_CaNa = 0.01;
  KCaChoff = 0.01;
  Kmdsinact = 0.001;
  FrICa = 0.7;
end

model noble_2000b__calcium_background_current(i_b_Ca, E_Ca, time_, V)

  // Assignment Rules:
  i_b_Ca := g_bca * (V - E_Ca);

  // Variable initializations:
  g_bca = 0.00025;
end

model noble_2000b__transient_outward_current_s_gate(s, V, time_)

  // Assignment Rules:
  alpha_s := 0.033 * exp(-(V) / 17 );
  beta_s := 33 / (1 + exp(-(0.125 ) * (V + 10 )));

  // Rate Rules:
  s' = alpha_s * (1 - s) - beta_s * s;

  // Variable initializations:
  s = 0.9948645;
end

model noble_2000b__transient_outward_current_r_gate(r, V, time_)

  // Rate Rules:
  r' = 333 * (1 / (1 + exp(-((V + 4 )) / 5 )) - r);

  // Variable initializations:
  r = 0;
end

model noble_2000b__transient_outward_current(i_to, E_K, V, time_, s, r)

  // Sub-modules, and any changes to those submodules:
  transient_outward_current_s_gate: noble_2000b__transient_outward_current_s_gate(s, V, time_);
  transient_outward_current_r_gate: noble_2000b__transient_outward_current_r_gate(r, V, time_);

  // Assignment Rules:
  i_to := g_to * (g_tos + s * (1 - g_tos)) * r * (V - E_K);

  // Variable initializations:
  g_to = 0.005;
  g_tos = 0;
end

model noble_2000b__sodium_potassium_pump(i_NaK, K_o, Na_i, time_)

  // Assignment Rules:
  i_NaK := i_NaK_max * K_o / (K_mK + K_o) * Na_i / (K_mNa + Na_i);

  // Variable initializations:
  i_NaK_max = 0.7;
  K_mK = 1;
  K_mNa = 40;
end

model noble_2000b__sodium_calcium_exchanger(i_NaCa, i_NaCa_cyt, i_NaCa_ds, Na_i, Na_o, Ca_i, Ca_ds, Ca_o, R, F, T, V, time_)

  // Assignment Rules:
  i_NaCa := i_NaCa_cyt + i_NaCa_ds;
  i_NaCa_cyt := (1 - FRiNaCa) * k_NaCa * (exp(gamma * (n_NaCa - 2 ) * V * F / (R * T)) * power(Na_i, n_NaCa) * Ca_o - exp((gamma - 1 ) * (n_NaCa - 2 ) * V * F / (R * T)) * power(Na_o, n_NaCa) * Ca_i) / ((1 + d_NaCa * (Ca_i * power(Na_o, n_NaCa) + Ca_o * power(Na_i, n_NaCa))) * (1 + Ca_i / 0.0069 ));
  i_NaCa_ds := FRiNaCa * k_NaCa * (exp(gamma * (n_NaCa - 2 ) * V * F / (R * T)) * power(Na_i, n_NaCa) * Ca_o - exp((gamma - 1 ) * (n_NaCa - 2 ) * V * F / (R * T)) * power(Na_o, n_NaCa) * Ca_ds) / ((1 + d_NaCa * (Ca_ds * power(Na_o, n_NaCa) + Ca_o * power(Na_i, n_NaCa))) * (1 + Ca_ds / 0.0069 ));

  // Variable initializations:
  k_NaCa = 0.0005;
  n_NaCa = 3;
  d_NaCa = 0;
  gamma = 0.2;
  FRiNaCa = 0.001;
end

model noble_2000b__sarcoplasmic_reticulum_calcium_pump(i_up, Ca_i, Ca_up, time_)

  // Assignment Rules:
  i_up := Ca_i / K_2 * alpha_up - Ca_up * K_1 / K_2 * beta_up;
  K_1 := K_cyca * K_xcs / K_srca;
  K_2 := Ca_i + Ca_up * K_1 + K_cyca * K_xcs + K_cyca;

  // Variable initializations:
  K_cyca = 0.0003;
  K_xcs = 0.4;
  K_srca = 0.5;
  alpha_up = 0.4;
  beta_up = 0.03;
end

model noble_2000b__calcium_translocation(i_trans, Ca_rel, Ca_up, time_)

  // Assignment Rules:
  i_trans := 50 * (Ca_up - Ca_rel);
end

model noble_2000b__calcium_release(i_rel, time_, V, Ca_i, Ca_ds, Ca_rel)

  // Assignment Rules:
  i_rel := (power(ActFrac / (ActFrac + 0.25 ), 2 ) * K_m_rel + K_leak_rate) * Ca_rel;
  VoltDep := exp(0.08 * (V - 40 ));
  RegBindSite := CaiReg + (1 - CaiReg) * CadsReg;
  CaiReg := Ca_i / (Ca_i + K_m_Ca_cyt);
  CadsReg := Ca_ds / (Ca_ds + K_m_Ca_ds);
  ActRate := 0 * VoltDep + 90 * power(RegBindSite, 2 );
  InactRate := 60 + 500 * power(RegBindSite, 2 );
  PrecFrac := 1 - ActFrac - ProdFrac;
  SpeedRel := piecewise( 5 , V < -(50 ) , 1 );

  // Rate Rules:
  ActFrac' = PrecFrac * SpeedRel * ActRate - ActFrac * SpeedRel * InactRate;
  ProdFrac' = ActFrac * SpeedRel * InactRate - SpeedRel * 1 * ProdFrac;

  // Variable initializations:
  K_leak_rate = 0.05;
  K_m_rel = 250;
  K_m_Ca_cyt = 0.0005;
  K_m_Ca_ds = 0.01;
  ActFrac = 0.0049039;
  ProdFrac = 0.6950649;
end

model noble_2000b__extracellular_sodium_concentration(Na_o)

  // Variable initializations:
  Na_o = 140;
end

model noble_2000b__intracellular_sodium_concentration(Na_i, V_i, time_, F, i_Na, i_b_Na, i_p_Na, i_Ca_L_Na_cyt, i_Ca_L_Na_ds, i_NaK, i_NaCa_cyt)

  // Rate Rules:
  Na_i' = -(1 ) / (1 * V_i * F) * (i_Na + i_p_Na + i_b_Na + 3 * i_NaK + 3 * i_NaCa_cyt + i_Ca_L_Na_cyt + i_Ca_L_Na_ds);

  // Variable initializations:
  Na_i = 7.6713487;
end

model noble_2000b__extracellular_calcium_concentration(Ca_o)

  // Variable initializations:
  Ca_o = 2;
end

model noble_2000b__extracellular_potassium_concentration(K_o)

  // Variable initializations:
  K_o = 4;
end

model noble_2000b__intracellular_potassium_concentration(K_i, V_i, i_K1, i_Kr, i_Ks, i_Ca_L_K_cyt, i_Ca_L_K_ds, i_to, i_NaK, time_, F)

  // Rate Rules:
  K_i' = -(1 ) / (1 * V_i * F) * (i_K1 + i_Kr + i_Ks + i_Ca_L_K_cyt + i_Ca_L_K_ds + i_to - 2 * i_NaK);

  // Variable initializations:
  K_i = 136.1745362;
end

model noble_2000b__intracellular_calcium_concentration(Ca_i, Ca_ds, Ca_up, Ca_rel, V_i, i_up, i_trans, i_rel, i_NaCa_cyt, i_NaCa_ds, i_Ca_L_Ca_cyt, i_Ca_L_Ca_ds, i_b_Ca, F, time_)

  // Assignment Rules:
  V_i := V_Cell * V_i_ratio;
  V_Cell := 3.141592654 * power(radius / 1000 , 2 ) * length / 1000;
  V_i_ratio := 1 - V_e_ratio - V_up_ratio - V_rel_ratio;

  // Rate Rules:
  Ca_i' = -(1 ) / (2 * 1 * V_i * F) * (i_Ca_L_Ca_cyt + i_b_Ca - 2 * i_NaCa_cyt - 2 * i_NaCa_ds) + Ca_ds * V_ds_ratio * Kdecay + i_rel * V_rel_ratio / V_i_ratio - d(Ca_Calmod)/d(time_) - d(Ca_Trop)/d(time_) - i_up;
  Ca_ds' = -(1 ) * i_Ca_L_Ca_ds / (2 * 1 * V_ds_ratio * V_i * F) - Ca_ds * Kdecay;
  Ca_up' = V_i_ratio / V_up_ratio * i_up - i_trans;
  Ca_rel' = V_up_ratio / V_rel_ratio * i_trans - i_rel;
  Ca_Calmod' = alpha_Calmod * Ca_i * (Calmod - Ca_Calmod) - beta_Calmod * Ca_Calmod;
  Ca_Trop' = alpha_Trop * Ca_i * (Trop - Ca_Trop) - beta_Trop * Ca_Trop;

  // Variable initializations:
  Ca_i = 1.49e-5;
  Ca_ds = 2.7e-6;
  Ca_up = 0.36963;
  Ca_rel = 0.6460487;
  Ca_Calmod = 0.0005841;
  Ca_Trop = 0.0003732;
  Calmod = 0.02;
  Trop = 0.05;
  alpha_Calmod = 100000;
  beta_Calmod = 50;
  alpha_Trop = 100000;
  beta_Trop = 200;
  radius = 12;
  length = 74;
  V_ds_ratio = 0.1;
  V_rel_ratio = 0.1;
  V_e_ratio = 0.4;
  V_up_ratio = 0.01;
  Kdecay = 10;
end

model noble_2000b____main()

  // Sub-modules, and any changes to those submodules:
  environment: noble_2000b__environment(time_);
  membrane: noble_2000b__membrane(V, R, T, F, time_, i_K1, i_to, i_Kr, i_Ks, i_Ca_L_K_cyt, i_Ca_L_K_ds, i_NaK, i_Na, i_b_Na, i_p_Na, i_Ca_L_Na_cyt, i_Ca_L_Na_ds, i_NaCa_cyt, i_NaCa_ds, i_Ca_L_Ca_cyt, i_Ca_L_Ca_ds, i_b_Ca);
  reversal_potentials: noble_2000b__reversal_potentials(E_Na, E_K, E_Ks, E_Ca, E_mh, K_o, Na_o, K_i, Na_i, Ca_o, Ca_i, R, F, T, time_);
  time_independent_potassium_current: noble_2000b__time_independent_potassium_current(i_K1, K_mk1, K_o, V, E_K, R, F, T, time_);
  rapid_delayed_rectifier_potassium_current: noble_2000b__rapid_delayed_rectifier_potassium_current(i_Kr, E_K, time_, V, xr1, xr2);
  slow_delayed_rectifier_potassium_current: noble_2000b__slow_delayed_rectifier_potassium_current(i_Ks, E_Ks, time_, V, xs);
  fast_sodium_current: noble_2000b__fast_sodium_current(i_Na, E_mh, time_, V, m, h);
  persistent_sodium_current: noble_2000b__persistent_sodium_current(i_p_Na, E_Na, time_, V);
  sodium_background_current: noble_2000b__sodium_background_current(i_b_Na, Na_i, E_Na, time_, V);
  L_type_Ca_channel: noble_2000b__L_type_Ca_channel(i_Ca_L_Ca_cyt, i_Ca_L_K_cyt, i_Ca_L_Na_cyt, i_Ca_L_Ca_ds, i_Ca_L_K_ds, i_Ca_L_Na_ds, i_Ca_L, Ca_o, Ca_i, Ca_ds, K_o, K_i, Na_o, Na_i, R, F, T, time_, V, d, CaChoncyt, CaChonds, KCaChoff, Kmdsinact);
  calcium_background_current: noble_2000b__calcium_background_current(i_b_Ca, E_Ca, time_, V);
  transient_outward_current: noble_2000b__transient_outward_current(i_to, E_K, V, time_, s, r);
  sodium_potassium_pump: noble_2000b__sodium_potassium_pump(i_NaK, K_o, Na_i, time_);
  sodium_calcium_exchanger: noble_2000b__sodium_calcium_exchanger(i_NaCa, i_NaCa_cyt, i_NaCa_ds, Na_i, Na_o, Ca_i, Ca_ds, Ca_o, R, F, T, V, time_);
  sarcoplasmic_reticulum_calcium_pump: noble_2000b__sarcoplasmic_reticulum_calcium_pump(i_up, Ca_i, Ca_up, time_);
  calcium_translocation: noble_2000b__calcium_translocation(i_trans, Ca_rel, Ca_up, time_);
  calcium_release: noble_2000b__calcium_release(i_rel, time_, V, Ca_i, Ca_ds, Ca_rel);
  extracellular_sodium_concentration: noble_2000b__extracellular_sodium_concentration(Na_o);
  intracellular_sodium_concentration: noble_2000b__intracellular_sodium_concentration(Na_i, V_i, time_, F, i_Na, i_b_Na, i_p_Na, i_Ca_L_Na_cyt, i_Ca_L_Na_ds, i_NaK, i_NaCa_cyt);
  extracellular_calcium_concentration: noble_2000b__extracellular_calcium_concentration(Ca_o);
  extracellular_potassium_concentration: noble_2000b__extracellular_potassium_concentration(K_o);
  intracellular_potassium_concentration: noble_2000b__intracellular_potassium_concentration(K_i, V_i, i_K1, i_Kr, i_Ks, i_Ca_L_K_cyt, i_Ca_L_K_ds, i_to, i_NaK, time_, F);
  intracellular_calcium_concentration: noble_2000b__intracellular_calcium_concentration(Ca_i, Ca_ds, Ca_up, Ca_rel, V_i, i_up, i_trans, i_rel, i_NaCa_cyt, i_NaCa_ds, i_Ca_L_Ca_cyt, i_Ca_L_Ca_ds, i_b_Ca, F, time_);
end
