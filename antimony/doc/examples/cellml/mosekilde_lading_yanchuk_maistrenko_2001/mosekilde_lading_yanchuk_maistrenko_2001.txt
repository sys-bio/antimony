//Created by libAntimony v1.3
model mosekilde_lading_yanchuk_maistrenko_2001_version01__environment(time_)
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__membrane(V, tau, time_, i_K, i_Ca, i_S)

  // Rate Rules:
  V' = -(( i_K + i_Ca + i_S )) / tau;

  // Variable initializations:
  tau = 0.02;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__calcium_current_m_gate(m_infinity, V)

  // Assignment Rules:
  m_infinity := power( 1.0 + exp(( V_m - V ) / theta_m ), -1.0 );

  // Variable initializations:
  theta_m = 12.0;
  V_m = -20.0;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__calcium_current(i_Ca, J11, time_, V, V_K, m_infinity)

  // Sub-modules, and any changes to those submodules:
  calcium_current_m_gate: mosekilde_lading_yanchuk_maistrenko_2001_version01__calcium_current_m_gate(m_infinity, V);

  // Assignment Rules:
  i_Ca := g_Ca * m_infinity * ( V - V_Ca );
  J11 := -( g_Ca ) * del( m_infinity )/del( V ) * ( V - V_Ca ) - g_Ca * m_infinity * (( V_Ca - V_K ) / ( V - V_K ));

  // Variable initializations:
  V_Ca = 25.0;
  g_Ca = 3.6;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__potassium_current_n_gate(n, J21, J22, V, tau, time_)

  // Assignment Rules:
  J21 := delta * del( n_infinity )/del( V );
  J22 := -( delta );
  n_infinity := power( 1.0 + exp(( V_n - V ) / theta_n ), -1.0 );

  // Rate Rules:
  n' = delta * ( n_infinity - n ) / tau;

  // Variable initializations:
  theta_n = 5.6;
  delta = 0.85;
  V_n = -16.0;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__potassium_current(i_K, V_K, J12, J21, J22, time_, V, tau, n)

  // Sub-modules, and any changes to those submodules:
  potassium_current_n_gate: mosekilde_lading_yanchuk_maistrenko_2001_version01__potassium_current_n_gate(n, J21, J22, V, tau, time_);

  // Assignment Rules:
  i_K := g_K * n * ( V - V_K );
  J12 := -( g_K ) * ( V - V_K );

  // Variable initializations:
  V_K = -75.0;
  g_K = 10.0;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__slow_current_S_gate(S, J31, V, tau_S, time_)

  // Assignment Rules:
  J31 := del( S_infinity )/del( V );
  S_infinity := power( 1.0 + exp(( V_S - V ) / theta_S ), -1.0 );

  // Rate Rules:
  S' = ( S_infinity - S ) / tau_S;

  // Variable initializations:
  theta_S = 10.0;
  V_S = -38.34;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__slow_current(i_S, tau_S, J13, J33, J31, time_, V, V_K, S, tau)

  // Sub-modules, and any changes to those submodules:
  slow_current_S_gate: mosekilde_lading_yanchuk_maistrenko_2001_version01__slow_current_S_gate(S, J31, V, tau_S, time_);

  // Assignment Rules:
  i_S := g_S * S * ( V - V_K );
  J13 := -( g_S ) * k_S * ( V - V_K );
  J33 := -( k_S );
  k_S := tau / tau_S;

  // Variable initializations:
  tau_S = 35.0;
  g_S = 4.0;
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01__jacobian_matrix(J11, J12, J13, J21, J22, J31, J33)

  // Assignment Rules:
  J := matrix(row( J11 , J12 , J13 ), row( J21 , J22 , 0 ), row( J31 , 0 , J33 ));
end

model mosekilde_lading_yanchuk_maistrenko_2001_version01____main()

  // Sub-modules, and any changes to those submodules:
  environment: mosekilde_lading_yanchuk_maistrenko_2001_version01__environment(time_);
  membrane: mosekilde_lading_yanchuk_maistrenko_2001_version01__membrane(V, tau, time_, i_K, i_Ca, i_S);
  calcium_current: mosekilde_lading_yanchuk_maistrenko_2001_version01__calcium_current(i_Ca, J11, time_, V, V_K, m_infinity);
  potassium_current: mosekilde_lading_yanchuk_maistrenko_2001_version01__potassium_current(i_K, V_K, J12, J21, J22, time_, V, tau, n);
  slow_current: mosekilde_lading_yanchuk_maistrenko_2001_version01__slow_current(i_S, tau_S, J13, J33, J31, time_, V, V_K, S, tau);
  jacobian_matrix: mosekilde_lading_yanchuk_maistrenko_2001_version01__jacobian_matrix(J11, J12, J13, J21, J22, J31, J33);
end
