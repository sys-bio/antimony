//Created by libAntimony v1.4
model leloup_model_2004__environment(time_)
end

model leloup_model_2004__MP(MP, n, BN, time_)

  // Rate Rules:
  MP' = vsP * (power( BN , n ) / (power( KAP , n ) + power( BN , n ))) - ( vmP * ( MP / ( KmP + MP )) + kdmp * MP );

  // Variable initializations:
  vsP = 2.4;
  vmP = 2.2;
  kdmp = 0.02;
  KAP = 0.6;
  KmP = 0.3;
end

model leloup_model_2004__MC(MC, n, BN, time_)

  // Rate Rules:
  MC' = vsC * (power( BN , n ) / (power( KAC , n ) + power( BN , n ))) - ( vmC * ( MC / ( KmC + MC )) + kdmc * MC );

  // Variable initializations:
  vsC = 2.2;
  vmC = 2.0;
  kdmc = 0.02;
  KAC = 0.6;
  KmC = 0.4;
end

model leloup_model_2004__MB(MB, m, RN, time_)

  // Rate Rules:
  MB' = vsB * (power( KIB , m ) / (power( KIB , m ) + power( RN , m ))) - ( vmB * ( MB / ( KmB + MB )) + kdmb * MB );

  // Variable initializations:
  vsB = 1.8;
  vmB = 1.3;
  kdmb = 0.02;
  KIB = 2.2;
  KmB = 0.4;
end

model leloup_model_2004__MR(MR, h, BN, time_)

  // Rate Rules:
  MR' = vsR * (power( BN , h ) / (power( KAR , h ) + power( BN , h ))) - ( vmR * ( MR / ( KmR + MR )) + kdmr * MR );

  // Variable initializations:
  vsR = 1.6;
  vmR = 1.6;
  kdmr = 0.02;
  KAR = 0.6;
  KmR = 0.4;
end

model leloup_model_2004__PC(PC, ksP, Kp, Kdp, k3, k4, kdn, V1P, V2P, PCP, PCC, CC, MP, time_)

  // Rate Rules:
  PC' = ksP * MP + V2P * ( PCP / ( Kdp + PCP )) + k4 * PCC - ( V1P * ( PC / ( Kp + PC )) + k3 * PC * CC + kdn * PC );
end

model leloup_model_2004__CC(CC, ksC, Kp, Kdp, k3, k4, kdnc, V1C, V2C, CCP, PC, PCC, MC, time_)

  // Rate Rules:
  CC' = ksC * MC + V2C * ( CCP / ( Kdp + CCP )) + k4 * PCC - ( V1C * ( CC / ( Kp + CC )) + k3 * PC * CC + kdnc * CC );
end

model leloup_model_2004__RC(RC, ksR, Kd, k9, k10, kdn, vdRC, RN, MR, time_)

  // Rate Rules:
  RC' = ksR * MR + k10 * RN - ( k9 * RC + vdRC * ( RC / ( Kd + RC )) + kdn * RC );
end

model leloup_model_2004__PCP(PCP, vdPC, Kp, Kdp, Kd, kdn, V1P, V2P, PC, time_)

  // Rate Rules:
  PCP' = V1P * ( PC / ( Kp + PC )) - ( V2P * ( PCP / ( Kdp + PCP )) + vdPC * ( PCP / ( Kd + PCP )) + kdn * PCP );
end

model leloup_model_2004__CCP(CCP, vdCC, Kp, Kdp, Kd, kdn, V1C, V2C, CC, time_)

  // Rate Rules:
  CCP' = V1C * ( CC / ( Kp + CC )) - ( V2C * ( CCP / ( Kdp + CCP )) + vdCC * ( CCP / ( Kd + CCP )) + kdn * CCP );
end

model leloup_model_2004__PCC(PCC, Kp, Kdp, k1, k2, k3, k4, kdn, V1PC, V2PC, PCCP, PCN, PC, CC, time_)

  // Rate Rules:
  PCC' = V2PC * ( PCCP / ( Kdp + PCCP )) + k3 * PC * CC + k2 * PCN - ( V1PC * ( PCC / ( Kp + PCC )) + k4 * PCC + k1 * PCC + kdn * PCC );
end

model leloup_model_2004__PCN(PCN, Kp, Kdp, k1, k2, k7, k8, kdn, V3PC, V4PC, PCNP, PCC, BN, IN_, time_)

  // Rate Rules:
  PCN' = V4PC * ( PCNP / ( Kdp + PCNP )) + k1 * PCC + k8 * IN_ - ( V3PC * ( PCN / ( Kp + PCN )) + k2 * PCN + k7 * BN * PCN + kdn * PCN );
end

model leloup_model_2004__RN(RN, Kd, k9, k10, kdn, vdRN, RC, time_)

  // Rate Rules:
  RN' = k9 * RC - ( k10 * RN + vdRN * ( RN / ( Kd + RN )) + kdn * RN );
end

model leloup_model_2004__PCCP(PCCP, Kp, Kdp, Kd, kdn, V1PC, V2PC, vdPCC, PCC, time_)

  // Rate Rules:
  PCCP' = V1PC * ( PCC / ( Kp + PCC )) - ( V2PC * ( PCCP / ( Kdp + PCCP )) + vdPCC * ( PCCP / ( Kd + PCCP )) + kdn * PCCP );
end

model leloup_model_2004__PCNP(PCNP, Kp, Kdp, Kd, kdn, V3PC, V4PC, vdPCN, PCN, time_)

  // Rate Rules:
  PCNP' = V3PC * ( PCN / ( Kp + PCN )) - ( V4PC * ( PCNP / ( Kdp + PCNP )) + vdPCN * ( PCNP / ( Kd + PCNP )) + kdn * PCNP );
end

model leloup_model_2004__BC(BC, Kp, Kdp, ksB, k5, k6, kdn, V1B, V2B, MB, BCP, BN, time_)

  // Rate Rules:
  BC' = V2B * ( BCP / ( Kdp + BCP )) + k6 * BN + ksB * MB - ( V1B * ( BC / ( Kp + BC )) + k5 * BC + kdn * BC );
end

model leloup_model_2004__BCP(BCP, Kp, Kdp, Kd, kdn, V1B, V2B, vdBC, BC, time_)

  // Rate Rules:
  BCP' = V1B * ( BC / ( Kp + BC )) - ( V2B * ( BCP / ( Kdp + BCP )) + vdBC * ( BCP / ( Kd + BCP )) + kdn * BCP );
end

model leloup_model_2004__BN(BN, Kp, Kdp, k5, k6, k7, k8, kdn, V3B, V4B, BNP, BC, PCN, IN_, time_)

  // Rate Rules:
  BN' = V4B * ( BNP / ( Kdp + BNP )) + k5 * BC + k8 * IN_ - ( V3B * ( BN / ( Kp + BN )) + k6 * BN + k7 * BN * PCN + kdn * BN );
end

model leloup_model_2004__BNP(BNP, Kp, Kdp, Kd, kdn, V3B, V4B, vdBN, BN, time_)

  // Rate Rules:
  BNP' = V3B * ( BN / ( Kp + BN )) - ( V4B * ( BNP / ( Kdp + BNP )) + vdBN * ( BNP / ( Kd + BNP )) + kdn * BNP );
end

model leloup_model_2004__IN(IN_, Kd, kdn, k7, k8, vdIN, PCN, BN, time_)

  // Rate Rules:
  IN_' = k7 * BN * PCN - ( k8 * IN_ + vdIN * ( IN_ / ( Kd + IN_ )) + kdn * IN_ );
end

model leloup_model_2004__model_parameters(k1, k2, k3, k4, k5, k6, k7, k8, k9, k10, kdnc, kdn, ksB, ksC, ksP, ksR, m, n, h, Kd, Kdp, Kp, V1B, V1C, V1P, V1PC, V2B, V2C, V2P, V2PC, V3B, V3PC, V4B, V4PC, vdBC, vdBN, vdCC, vdIN, vdPC, vdPCC, vdPCN, vdRC, vdRN)

  // Variable initializations:
  k1 = 0.8;
  k2 = 0.4;
  k3 = 0.8;
  k4 = 0.4;
  k5 = 0.8;
  k6 = 0.4;
  k7 = 1.0;
  k8 = 0.2;
  k9 = 0.8;
  k10 = 0.4;
  kdnc = 0.02;
  kdn = 0.02;
  ksB = 0.32;
  ksC = 3.2;
  ksP = 1.2;
  ksR = 1.7;
  m = 2.0;
  n = 2.0;
  h = 2.0;
  Kd = 0.3;
  Kdp = 0.1;
  Kp = 1.006;
  V1B = 1.4;
  V1C = 1.2;
  V1P = 9.6;
  V1PC = 2.4;
  V2B = 0.2;
  V2C = 0.2;
  V2P = 0.6;
  V2PC = 0.2;
  V3B = 1.4;
  V3PC = 2.4;
  V4B = 0.4;
  V4PC = 0.2;
  vdBC = 3.0;
  vdBN = 3.0;
  vdCC = 1.4;
  vdIN = 1.6;
  vdPC = 3.4;
  vdPCC = 1.4;
  vdPCN = 1.4;
  vdRC = 4.4;
  vdRN = 0.8;
end

model leloup_model_2004____main()

  // Sub-modules, and any changes to those submodules:
  environment: leloup_model_2004__environment(time_);
  MP: leloup_model_2004__MP(MP0, n, BN0, time_);
  MC: leloup_model_2004__MC(MC0, n, BN0, time_);
  MB: leloup_model_2004__MB(MB0, m, RN0, time_);
  MR: leloup_model_2004__MR(MR0, h, BN0, time_);
  PC: leloup_model_2004__PC(PC0, ksP, Kp, Kdp, k3, k4, kdn, V1P, V2P, PCP0, PCC0, CC0, MP0, time_);
  CC: leloup_model_2004__CC(CC0, ksC, Kp, Kdp, k3, k4, kdnc, V1C, V2C, CCP0, PC0, PCC0, MC0, time_);
  RC: leloup_model_2004__RC(RC0, ksR, Kd, k9, k10, kdn, vdRC, RN0, MR0, time_);
  PCP: leloup_model_2004__PCP(PCP0, vdPC, Kp, Kdp, Kd, kdn, V1P, V2P, PC0, time_);
  CCP: leloup_model_2004__CCP(CCP0, vdCC, Kp, Kdp, Kd, kdn, V1C, V2C, CC0, time_);
  PCC: leloup_model_2004__PCC(PCC0, Kp, Kdp, k1, k2, k3, k4, kdn, V1PC, V2PC, PCCP0, PCN0, PC0, CC0, time_);
  PCN: leloup_model_2004__PCN(PCN0, Kp, Kdp, k1, k2, k7, k8, kdn, V3PC, V4PC, PCNP0, PCC0, BN0, IN_0, time_);
  RN: leloup_model_2004__RN(RN0, Kd, k9, k10, kdn, vdRN, RC0, time_);
  PCCP: leloup_model_2004__PCCP(PCCP0, Kp, Kdp, Kd, kdn, V1PC, V2PC, vdPCC, PCC0, time_);
  PCNP: leloup_model_2004__PCNP(PCNP0, Kp, Kdp, Kd, kdn, V3PC, V4PC, vdPCN, PCN0, time_);
  BC: leloup_model_2004__BC(BC0, Kp, Kdp, ksB, k5, k6, kdn, V1B, V2B, MB0, BCP0, BN0, time_);
  BCP: leloup_model_2004__BCP(BCP0, Kp, Kdp, Kd, kdn, V1B, V2B, vdBC, BC0, time_);
  BN: leloup_model_2004__BN(BN0, Kp, Kdp, k5, k6, k7, k8, kdn, V3B, V4B, BNP0, BC0, PCN0, IN_0, time_);
  BNP: leloup_model_2004__BNP(BNP0, Kp, Kdp, Kd, kdn, V3B, V4B, vdBN, BN0, time_);
  IN_: leloup_model_2004__IN(IN_0, Kd, kdn, k7, k8, vdIN, PCN0, BN0, time_);
  model_parameters: leloup_model_2004__model_parameters(k1, k2, k3, k4, k5, k6, k7, k8, k9, k10, kdnc, kdn, ksB, ksC, ksP, ksR, m, n, h, Kd, Kdp, Kp, V1B, V1C, V1P, V1PC, V2B, V2C, V2P, V2PC, V3B, V3PC, V4B, V4PC, vdBC, vdBN, vdCC, vdIN, vdPC, vdPCC, vdPCN, vdRC, vdRN);
end
