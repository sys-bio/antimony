//Created by libAntimony v1.4

//Warnings from automatic translation:
//    In module 'haugh_model_2004b____main', the variables C.R and R0 were unable to be set as equivalent:  Loop detected:  'C.R' may not be set to be equal to 'R0' because R0's definition already includes C.R either directly or by proxy.
//    In module 'haugh_model_2004b____main', the variables R.D and D0 were unable to be set as equivalent:  Loop detected:  'R.D' may not be set to be equal to 'D0' because D0's definition already includes R.D either directly or by proxy.

model haugh_model_2004b__environment(time_)
end

model haugh_model_2004b__C(C, kf1, kr1, k_x1, kt, ke, L, R, K_X)

  // Assignment Rules:
  C := kf1 * L * R / ( kr1 + kt + ( k_x1 + ke ) * K_X * R );
end

model haugh_model_2004b__D(D, K_X, k_x1, kx2, k_x2, ke, C, R)

  // Assignment Rules:
  D := K_X * R * C;
  K_X := kx2 / ( k_x2 + k_x1 + ke );
end

model haugh_model_2004b__R(R, R_initial, kt, krec, kdeg, ke, D, C)

  // Assignment Rules:
  R := R_initial - ( C + 2.0 * ( ke / kt ) * ( 1.0 + krec / kdeg ) * D );

  // Variable initializations:
  R_initial = 2000.0;
end

model haugh_model_2004b__Ri(Ri, krec, kdeg, kt, R, C, time_)

  // Rate Rules:
  Ri' = kt * ( R + C ) - ( krec + kdeg ) * Ri;

  // Variable initializations:
  Ri = 200.0;
end

model haugh_model_2004b__signal(kappaE, D)

  // Assignment Rules:
  signal := 2.0 * D / 200.0 / ( kappaE + 2.0 * D / 200.0 );
end

model haugh_model_2004b__model_parameters(kf1, kr1, kx2, k_x2, k_x1, ke, kt, krec, kdeg, Vs, L, kappaE)

  // Assignment Rules:
  kr1 := KD * kf1;
  k_x1 := 0.01 * kr1;

  // Variable initializations:
  kf1 = 0.1;
  kx2 = 4.83;
  k_x2 = 0.016;
  ke = 0.10;
  kt = 0.005;
  krec = 0.0;
  kdeg = 0.05;
  Vs = 10.0;
  L = 0.01;
  kappaE = 0.20;
  KD = 1.0;
end

model haugh_model_2004b____main()

  // Sub-modules, and any changes to those submodules:
  environment: haugh_model_2004b__environment(time_);
  C: haugh_model_2004b__C(C0, kf1, kr1, k_x1, kt, ke, L, R1, K_X);
  D: haugh_model_2004b__D(D0, K_X, k_x1, kx2, k_x2, ke, C0, R0);
  R: haugh_model_2004b__R(R0, R_initial, kt, krec, kdeg, ke, D1, C0);
  Ri: haugh_model_2004b__Ri(Ri0, krec, kdeg, kt, R0, C0, time_);
  signal: haugh_model_2004b__signal(kappaE, D0);
  model_parameters: haugh_model_2004b__model_parameters(kf1, kr1, kx2, k_x2, k_x1, ke, kt, krec, kdeg, Vs, L, kappaE);
end
