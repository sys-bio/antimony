//Created by libAntimony v1.4
model MainDVad__environment(t)
end

model TempCDv__TempCDv(Pi_, Po, Qi, Qo, CV, E, t, Pini, Vini, V0)

  // Assignment Rules:
  Pi_ := Pini + E * (V - Vini);
  Qo := piecewise( CV * Tao * power(abs(Pi_ - Po), 0.5 ) , Pi_ >= Po , -1 * CV * Tao * power(abs(Po - Pi_), 0.5 ) , Pi_ < Po );
  Tao := piecewise( 1 , Pi_ >= Po , 0 , Pi_ < Po );

  // Rate Rules:
  V' = Qi - Qo;

  // Variable initializations:
  V = V0;
end

model TempCDa__TempCDa(Pi_, Po, Qi, Qo, CV, E, t, Pini, Vini, Tao, V0)

  // Assignment Rules:
  Pi_ := Pini + E * (V - Vini);
  Qo := piecewise( CV * Tao * power(abs(Pi_ - Po), 0.5 ) , Pi_ >= Po , -1 * CV * Tao * power(abs(Po - Pi_), 0.5 ) , Pi_ < Po );
  Tao := piecewise( 1 , Pi_ >= Po , 0 , Pi_ < Po );

  // Rate Rules:
  V' = Qi - Qo;

  // Variable initializations:
  V = V0;
end

model TJoint__TJoint(Pi_, Po, Qi1, Qi2, Qo)

  // Assignment Rules:
  Pi_ := Po;
  Qo := Qi1 + Qi2;
end

model EVentricle__EVentricle(Emax, Emin, T, Ts1, Ts2, E, t)

  // Assignment Rules:
  E := Emin + et * (Emax - Emin) / 2;
  mt := t - T * floor(t / T);
  et := piecewise( 1 - cos(3.14159 * mt / (Ts1 * T)) , ( mt >= 0) && (mt <= Ts1 * T ), 1 + cos(3.14159 * (mt - Ts1 * T) / ((Ts2 - Ts1) * T)) , ( mt > Ts1 * T) && (mt <= Ts2 * T ), 0 , ( mt > Ts2 * T) && (mt < T ) );
end

model EAtrium__EAtrium(Emax, Emin, T, Tpwb, Tpww, E, t)

  // Assignment Rules:
  E := Emin + et * (Emax - Emin) / 2;
  mt := t - T * floor(t / T);
  et := piecewise( 1 - cos(2 * 3.14159 * (mt - (Tpwb - 1 ) * T) / (Tpww * T)) , ( mt >= 0) && (mt <= (Tpwb + Tpww - 1 ) * T ), 0 , ( mt > (Tpwb + Tpww - 1 ) * T) && (mt <= Tpwb * T ), 1 - cos(2 * 3.14159 * (mt - Tpwb * T) / (Tpww * T)) , ( mt > Tpwb * T) && (mt <= T ) );
end

model ParaHeartP__ParaHeartP(ElaMax, ElaMin, PlaIni, VlaIni, ElvMax, ElvMin, PlvIni, VlvIni, T, Tpwb, Tpww, Ts1, Ts2, CVao, CVmi, Vlv0, Vla0)

  // Variable initializations:
  ElaMax = 0.25;
  ElaMin = 0.15;
  PlaIni = 1.0;
  VlaIni = 4.0;
  ElvMax = 0.5;
  ElvMin = 0.1;
  PlvIni = 1.0;
  VlvIni = 5.0;
  T = 1.0;
  Tpwb = 0.92;
  Tpww = 0.09;
  Ts1 = 0.3;
  Ts2 = 0.45;
  CVao = 350.;
  CVmi = 400.;
  Vlv0 = 500;
  Vla0 = 20;
end

model ModelLeftHeartT__LeftHeart(Pi_, Po, Qi, Qm, Qo, t, Pm)

  // Sub-modules, and any changes to those submodules:
  LV: TempCDv__TempCDv(Pi_0, Po, Qi0, Qo, CV0, E0, t, Pini0, Vini0, V00);
  LA: TempCDa__TempCDa(Pi_, Pm, Qi, Qi1, CV, E, t, Pini, Vini, Tao, V0);
  TWay: TJoint__TJoint(Pm, Pi_0, Qi1, Qm, Qi0);
  Elv: EVentricle__EVentricle(Emax0, Emin0, T, Ts1, Ts2, E0, t);
  Ela: EAtrium__EAtrium(Emax, Emin, T, Tpwb, Tpww, E, t);
  ParaLHeart: ParaHeartP__ParaHeartP(Emax, Emin, Pini, Vini, Emax0, Emin0, Pini0, Vini0, T, Tpwb, Tpww, Ts1, Ts2, CV0, CV, V00, V0);
end

model TempRLC__TempRLC(Pi_, Po, Qi, Qo, R, C, L, t, P0, Q0)

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;
  Qo' = (Pi_ - Po - R * Qo) / L;

  // Variable initializations:
  Pi_ = P0;
  Qo = Q0;
end

model TempR__TempR(Pi_, Po, Qi, Qo, R)

  // Assignment Rules:
  Pi_ := Po + R * Qi;
  Qo := Qi;
end

model TempRC__TempRC(Pi_, Po, Qi, Qo, R, C, t, P0)

  // Assignment Rules:
  Qo := (Pi_ - Po) / R;

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;

  // Variable initializations:
  Pi_ = P0;
end

model ParaSys__ParaSys(Rsas, Csas, Lsas, P0sas, Q0sas, Rsat, Csat, Lsat, P0sat, Q0sat, Rsar, Rscp, Rsvn, Csvn, P0svn)

  // Variable initializations:
  Rsas = 0.003;
  Csas = 0.08;
  Lsas = 0.000062;
  P0sas = 100.;
  Q0sas = 0.;
  Rsat = 0.05;
  Csat = 1.6;
  Lsat = 0.0017;
  P0sat = 100.;
  Q0sat = 0.;
  Rsar = 0.5;
  Rscp = 0.52;
  Rsvn = 0.075;
  Csvn = 20.5;
  P0svn = 0.;
end

model ModelSysT__ModelSysT(Pi_, Po, Qi, Qm, Qo, t, Pm)

  // Sub-modules, and any changes to those submodules:
  Sas: TempRLC__TempRLC(Pi_, Pm, Qi, Qi1, R, C, L, t, P0, Q0);
  TWay: TJoint__TJoint(Pm, Pi_0, Qi1, Qm, Qi0);
  Sat: TempRLC__TempRLC(Pi_0, Pi_1, Qi0, Qi2, R0, C0, L0, t, P00, Q00);
  Sar: TempR__TempR(Pi_1, Pi_2, Qi2, Qi3, R1);
  Scp: TempR__TempR(Pi_2, Pi_3, Qi3, Qi4, R2);
  Svn: TempRC__TempRC(Pi_3, Po, Qi4, Qo, R3, C1, t, P01);
  ParaSys: ParaSys__ParaSys(R, C, L, P0, Q0, R0, C0, L0, P00, Q00, R1, R2, R3, C1, P01);
end

model TempDPump__TempDPump(Qvi, Qvo, t, Qai, Qao, Ts2, T)

  // Assignment Rules:
  Qvi := piecewise( 0.5 * Qai * (1 - cos(2 * 3.14159 * mt / (Ts2 * T))) , ( mt >= 0) && (mt <= Ts2 * T ), 0 , ( mt > Ts2 * T) && (mt < T ) );
  Qvo := piecewise( 0 , ( mt >= 0) && (mt <= Ts2 * T ), 0.5 * Qao * (1 - cos(2 * 3.14159 * (mt - Ts2 * T) / (T - Ts2 * T))) , ( mt > Ts2 * T) && (mt < T ) );
  mt := t - T * floor(t / T);
end

model ParaDPump__ParaDPump(Qai, Qao)

  // Variable initializations:
  Qai = -300;
  Qao = 200;
end

model ModelDPump__ModelDPump(Qvi, Qvo, t)

  // Sub-modules, and any changes to those submodules:
  DPump: TempDPump__TempDPump(Qvi, Qvo, t, Qai, Qao, Ts2, T);
  ParaPump: ParaDPump__ParaDPump(Qai, Qao);
  ParaLHeart: ParaHeartP__ParaHeartP(ElaMax, ElaMin, PlaIni, VlaIni, ElvMax, ElvMin, PlvIni, VlvIni, T, Tpwb, Tpww, Ts1, Ts2, CVao, CVmi, Vlv0, Vla0);
end

model MainDVad____main()

  // Sub-modules, and any changes to those submodules:
  environment: MainDVad__environment(t);
  LHeart: ModelLeftHeartT__LeftHeart(Po, Pi_, Qo, Qm, Qi, t, Pm);
  Vessel: ModelSysT__ModelSysT(Pi_, Po, Qi, Qm0, Qo, t, Pm0);
  Vad: ModelDPump__ModelDPump(Qm, Qm0, t);
end
