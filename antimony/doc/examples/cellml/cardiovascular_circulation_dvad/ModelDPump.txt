//Created by libAntimony v1.4
model TempDPump__TempDPump(Qvi, Qvo, t, Qai, Qao, Ts2, T)

  // Assignment Rules:
  Qvi := piecewise( 0.5 * Qai * (1 - cos(2 * 3.14159 * mt / (Ts2 * T))) , ( mt >= 0) && (mt <= Ts2 * T ), 0 , ( mt > Ts2 * T) && (mt < T ) );
  Qvo := piecewise( 0 , ( mt >= 0) && (mt <= Ts2 * T ), 0.5 * Qao * (1 - cos(2 * 3.14159 * (mt - Ts2 * T) / (T - Ts2 * T))) , ( mt > Ts2 * T) && (mt < T ) );
  mt := t - T * floor(t / T);
end

model ParaDPump__ParaDPump(Qai, Qao)

  // Variable initializations:
  Qai = -300;
  Qao = 200;
end

model ParaHeartP__ParaHeartP(ElaMax, ElaMin, PlaIni, VlaIni, ElvMax, ElvMin, PlvIni, VlvIni, T, Tpwb, Tpww, Ts1, Ts2, CVao, CVmi, Vlv0, Vla0)

  // Variable initializations:
  ElaMax = 0.25;
  ElaMin = 0.15;
  PlaIni = 1.0;
  VlaIni = 4.0;
  ElvMax = 0.5;
  ElvMin = 0.1;
  PlvIni = 1.0;
  VlvIni = 5.0;
  T = 1.0;
  Tpwb = 0.92;
  Tpww = 0.09;
  Ts1 = 0.3;
  Ts2 = 0.45;
  CVao = 350.;
  CVmi = 400.;
  Vlv0 = 500;
  Vla0 = 20;
end

model ModelDPump__ModelDPump(Qvi, Qvo, t)

  // Sub-modules, and any changes to those submodules:
  DPump: TempDPump__TempDPump(Qvi, Qvo, t, Qai, Qao, Ts2, T);
  ParaPump: ParaDPump__ParaDPump(Qai, Qao);
  ParaLHeart: ParaHeartP__ParaHeartP(ElaMax, ElaMin, PlaIni, VlaIni, ElvMax, ElvMin, PlvIni, VlvIni, T, Tpwb, Tpww, Ts1, Ts2, CVao, CVmi, Vlv0, Vla0);
end

model ModelDPump____main()

  // Sub-modules, and any changes to those submodules:
  ModelDPump: ModelDPump__ModelDPump(Qvi, Qvo, t);
end
