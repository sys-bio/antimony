//Created by libAntimony v1.4
model rong_2009a__environment(time_)
end

model rong_2009a__uninfected(time_, efficacy, k, V, T)

  // Rate Rules:
  T' = lambda_ - d_T * T - (1 - efficacy) * k * V * T;

  // Variable initializations:
  lambda_ = 1E4;
  d_T = 0.01;
  k = 2.4E-8;
  T = 600000;
end

model rong_2009a__latently_infected(time_, a_L, efficacy, k, eta, V, T, L)

  // Rate Rules:
  L' = eta * (1 - efficacy) * k * V * T - d_0 * L - a_L * L;

  // Variable initializations:
  d_0 = 0.001;
  a_L = 0.1;
  eta = 0.001;
  L = 2;
end

model rong_2009a__productively_infected(time_, delta, eta, efficacy, k, a_L, T, L, V, T_star)

  // Rate Rules:
  T_star' = (1 - eta) * (1 - efficacy) * k * V * T - delta * T_star + a_L * L;

  // Variable initializations:
  delta = 1;
  T_star = 0.3;
end

model rong_2009a__viral_load(time_, delta, T_star, V)

  // Rate Rules:
  V' = N * delta * T_star - c * V;

  // Variable initializations:
  N = 2000;
  c = 23;
  V = 50;
end

model rong_2009a__drug_efficacy(efficacy)

  // Variable initializations:
  efficacy = 0.4;
end

model rong_2009a____main()

  // Sub-modules, and any changes to those submodules:
  environment: rong_2009a__environment(time_);
  uninfected: rong_2009a__uninfected(time_, efficacy, k, V, T);
  latently_infected: rong_2009a__latently_infected(time_, a_L, efficacy, k, eta, V, T, L);
  productively_infected: rong_2009a__productively_infected(time_, delta, eta, efficacy, k, a_L, T, L, V, T_star);
  viral_load: rong_2009a__viral_load(time_, delta, T_star, V);
  drug_efficacy: rong_2009a__drug_efficacy(efficacy);
end
