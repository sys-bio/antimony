//Created by libAntimony v1.3
model goldbeter_model_2008__environment(time_)
end

model goldbeter_model_2008__N(N, kc, KIF, F, epsilon, j, time_)

  // Rate Rules:
  N' = epsilon * ( vsN - ( vdN * ( N / ( KdN + N )) + kc * N * (power( KIF , j ) / (power( KIF , j ) + power( F , j )))));

  // Variable initializations:
  N = 0.5;
  KdN = 1.4;
  vsN = 0.23;
  vdN = 2.82;
end

model goldbeter_model_2008__Na(Na, Vtr, kc, N, Nan_, KIF, F, epsilon, j, time_)

  // Assignment Rules:
  Vtr := kt1 * Na - kt2 * Nan_;

  // Rate Rules:
  Na' = epsilon * ( kc * N * (power( KIF , j ) / (power( KIF , j ) + power( F , j ))) - ( VdNa * ( Na / ( KdNa + Na )) + Vtr ));

  // Variable initializations:
  Na = 0.2;
  KdNa = 0.001;
  VdNa = 0.01;
  kt1 = 0.1;
  kt2 = 0.1;
end

model goldbeter_model_2008__Nan(Nan_, epsilon, Vtr, time_)

  // Rate Rules:
  Nan_' = epsilon * ( Vtr - VdNan * ( Nan_ / ( KdNan + Nan_ )));

  // Variable initializations:
  Nan_ = 0.0;
  KdNan = 0.001;
  VdNan = 0.1;
end

model goldbeter_model_2008__MF(MF, kc, Nan_, K, epsilon, p, time_)

  // Assignment Rules:
  vsFK := vsF * ( KIG1 / ( KIG1 + K ));

  // Rate Rules:
  MF' = epsilon * ( vsFK * (power( Nan_ , p ) / (power( KA , p ) + power( Nan_ , p ))) - vmF * ( MF / ( KdMF + MF )));

  // Variable initializations:
  MF = 0.1;
  KdMF = 0.768;
  KIG1 = 2.5;
  vsF = 3.0;
  vmF = 1.92;
  KA = 0.05;
end

model goldbeter_model_2008__F(F, MF, epsilon, time_)

  // Rate Rules:
  F' = epsilon * ( ksF * MF - vdF * ( F / ( KdF + F )));

  // Variable initializations:
  F = 0.001;
  KdF = 0.37;
  vdF = 0.39;
  ksF = 0.3;
end

model goldbeter_model_2008__K(K, V1, theta, time_)

  // Rate Rules:
  K' = theta * V1;

  // Variable initializations:
  K = 3.0;
end

model goldbeter_model_2008__B(B, VK, VP, V2, Kt, AK, theta, time_)

  // Rate Rules:
  B' = theta * ( vsB + VP + V2 - ( VK * ( AK / Kt ) + kd1 * B ));

  // Variable initializations:
  B = 0.1;
  kd1 = 0.0;
  vsB = 0.087;
end

model goldbeter_model_2008__Bp(Bp, VK, VP, Kt, AK, theta, time_)

  // Rate Rules:
  Bp' = theta * ( VK * ( AK / Kt ) - ( VP + kd2 * Bp ));

  // Variable initializations:
  Bp = 0.1;
  kd2 = 7.062;
end

model goldbeter_model_2008__BN(BN, V2, theta, time_)

  // Rate Rules:
  BN' = -(( theta * V2 ));

  // Variable initializations:
  BN = 0.001;
end

model goldbeter_model_2008__MAx(MAx, BN, Xa, theta, time_)

  // Rate Rules:
  MAx' = theta * ( v0 + vMB * (power( BN , n ) / (power( KaB , n ) + power( BN , n ))) + vMXa * (power( Xa , m ) / (power( KaXa , m ) + power( Xa , m ))) - vmd * ( MAx / ( Kmd + MAx )));

  // Variable initializations:
  MAx = 0.1;
  v0 = 0.06;
  vMB = 1.64;
  vmd = 0.8;
  KaB = 0.7;
  KaXa = 0.05;
  Kmd = 0.48;
  n = 2.0;
  m = 2.0;
  vMXa = 0.5;
end

model goldbeter_model_2008__A(A, V1, MAx, theta, time_)

  // Rate Rules:
  A' = theta * ( ksAx * MAx + V1 - vdAx * ( A / ( KdAx + A )));

  // Variable initializations:
  A = 0.1;
  ksAx = 0.02;
  vdAx = 0.6;
  KdAx = 0.63;
end

model goldbeter_model_2008__Wnt_parameters(AK, V1, V2, VK, VP, Kt, K, A, B, Bp, BN)

  // Assignment Rules:
  AK := Kt - K;
  V1 := d1 * AK - a1 * A * K;
  V2 := kt4 * BN - kt3 * B;
  VK := VMK * ( KID / ( KID + D )) * ( B / ( K1 + B ));
  VP := VMP * ( Bp / ( K2 + Bp ));

  // Variable initializations:
  Kt = 3.0;
  d1 = 0.1;
  a1 = 1.8;
  K1 = 0.28;
  K2 = 0.03;
  D = 2.0;
  KID = 0.5;
  kt3 = 0.7;
  kt4 = 1.5;
  VMK = 5.08;
  VMP = 1.0;
end

model goldbeter_model_2008__Rasa(Rasa, VaRas, VdRas, eta, time_)

  // Rate Rules:
  Rasa' = eta * ( VaRas - VdRas );

  // Variable initializations:
  Rasa = 0.5;
end

model goldbeter_model_2008__ERKa(ERKa, VaErk, VdErk, eta, time_)

  // Rate Rules:
  ERKa' = eta * ( VaErk - VdErk );

  // Variable initializations:
  ERKa = 0.2;
end

model goldbeter_model_2008__Xa(Xa, VaX, VdX, eta, time_)

  // Rate Rules:
  Xa' = eta * ( VaX - VdX );

  // Variable initializations:
  Xa = 0.1;
end

model goldbeter_model_2008__MDusp(MDusp, VsMDusp, VdMDusp, eta, time_)

  // Rate Rules:
  MDusp' = eta * ( VsMDusp - VdMDusp );

  // Variable initializations:
  MDusp = 0.1;
end

model goldbeter_model_2008__Dusp(Dusp, MDusp, eta, time_)

  // Rate Rules:
  Dusp' = eta * ( ksDusp * MDusp - vdDusp * ( Dusp / ( KdDusp + Dusp )));

  // Variable initializations:
  Dusp = 0.1;
  ksDusp = 0.5;
  vdDusp = 2.0;
  KdDusp = 0.5;
end

model goldbeter_model_2008__FGF_parameters(VaRas, VdRas, VaErk, VdErk, VaX, VdX, VsMDusp, VdMDusp, Rasa, ERKa, Xa, Dusp, MDusp)

  // Assignment Rules:
  VaRas := VMaRas * (power( Fgf , r ) / (power( KaFgf , r ) + power( Fgf , r ))) * ( Rasi / ( KaRas + Rasi ));
  VdRas := VMdRas * ( Rasa / ( KdRas + Rasa ));
  VaErk := VMaErk * ( Rasa / Rast ) * ( ERKi / ( KaErk + ERKi ));
  VdErk := kcDusp * Dusp * ( ERKa / ( KdErk + ERKa ));
  VaX := VMaX * ( ERKa / ERKt ) * ( Xi / ( KaX + Xi ));
  VdX := VMdX * ( Xa / ( KdX + Xa ));
  VsMDusp := VMsMDusp * (power( Xa , q ) / (power( KaMDusp , q ) + power( Xa , q )));
  VdMDusp := VMdMDusp * ( MDusp / ( KdMDusp + MDusp ));
  Rasi := Rast - Rasa;
  ERKi := ERKt - ERKa;
  Xi := Xt - Xa;

  // Variable initializations:
  Rast = 2.0;
  ERKt = 2.0;
  Xt = 2.0;
  kcDusp = 1.35;
  VMaRas = 4.968;
  VMdRas = 0.41;
  VMaErk = 3.30;
  VMaX = 1.6;
  VMdX = 0.5;
  VMsMDusp = 0.9;
  VMdMDusp = 0.5;
  Fgf = 1.0;
  KaFgf = 0.5;
  KaRas = 0.103;
  KdRas = 0.1;
  KdErk = 0.05;
  KaErk = 0.05;
  KaX = 0.05;
  KdX = 0.05;
  KaMDusp = 0.5;
  KdMDusp = 0.5;
  q = 2.0;
  r = 2.0;
end

model goldbeter_model_2008__model_parameters(kc, KIF, j, p, epsilon, theta, eta)

  // Variable initializations:
  kc = 3.45;
  KIF = 0.5;
  j = 2.0;
  p = 2.0;
  epsilon = 0.3;
  theta = 1.5;
  eta = 0.3;
end

model goldbeter_model_2008____main()

  // Sub-modules, and any changes to those submodules:
  environment: goldbeter_model_2008__environment(time_);
  N: goldbeter_model_2008__N(N0, kc, KIF, F0, epsilon, j, time_);
  Na: goldbeter_model_2008__Na(Na0, Vtr, kc, N0, Nan_0, KIF, F0, epsilon, j, time_);
  Nan_: goldbeter_model_2008__Nan(Nan_0, epsilon, Vtr, time_);
  MF: goldbeter_model_2008__MF(MF0, kc, Nan_0, K0, epsilon, p, time_);
  F: goldbeter_model_2008__F(F0, MF0, epsilon, time_);
  K: goldbeter_model_2008__K(K0, V1, theta, time_);
  B: goldbeter_model_2008__B(B0, VK, VP, V2, Kt, AK, theta, time_);
  Bp: goldbeter_model_2008__Bp(Bp0, VK, VP, Kt, AK, theta, time_);
  BN: goldbeter_model_2008__BN(BN0, V2, theta, time_);
  MAx: goldbeter_model_2008__MAx(MAx0, BN0, Xa0, theta, time_);
  A: goldbeter_model_2008__A(A0, V1, MAx0, theta, time_);
  Wnt_parameters: goldbeter_model_2008__Wnt_parameters(AK, V1, V2, VK, VP, Kt, K0, A0, B0, Bp0, BN0);
  Rasa: goldbeter_model_2008__Rasa(Rasa0, VaRas, VdRas, eta, time_);
  ERKa: goldbeter_model_2008__ERKa(ERKa0, VaErk, VdErk, eta, time_);
  Xa: goldbeter_model_2008__Xa(Xa0, VaX, VdX, eta, time_);
  MDusp: goldbeter_model_2008__MDusp(MDusp0, VsMDusp, VdMDusp, eta, time_);
  Dusp: goldbeter_model_2008__Dusp(Dusp0, MDusp0, eta, time_);
  FGF_parameters: goldbeter_model_2008__FGF_parameters(VaRas, VdRas, VaErk, VdErk, VaX, VdX, VsMDusp, VdMDusp, Rasa0, ERKa0, Xa0, Dusp0, MDusp0);
  model_parameters: goldbeter_model_2008__model_parameters(kc, KIF, j, p, epsilon, theta, eta);
end
