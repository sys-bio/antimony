//Created by libAntimony v1.4
model fink_noble_giles_model_2008__Environment(time_, R, T, F, K_o, Ca_o, Na_o)

  // Variable initializations:
  R = 8314.472;
  T = 310;
  F = 96485.3415;
  K_o = 5.4;
  Ca_o = 2;
  Na_o = 140;
end

model fink_noble_giles_model_2008__cell(V, Cm, Vol_c, time_, i_K1, i_to, i_Kr, i_Ks, i_CaL, i_NaK, i_Na, i_b_Na, i_NaCa, i_b_Ca, i_p_K, i_p_Ca, i_Stim)

  // Assignment Rules:
  i_Stim := piecewise( -(12 ) , ( time_ - floor(time_ / stim_Period) * stim_Period >= 100) && (time_ - floor(time_ / stim_Period) * stim_Period <= 103 ), 0 );
  i_tot := i_K1 + i_to + i_Kr + i_Ks + i_CaL + i_NaK + i_Na + i_b_Na + i_NaCa + i_b_Ca + i_p_K + i_p_Ca + i_Stim;

  // Rate Rules:
  V' = -(i_tot);

  // Variable initializations:
  V = -86.45;
  Cm = 0.115;
  Vol_c = 0.016404;
  stim_Period = 1000;
end

model fink_noble_giles_model_2008__reversal_potentials(E_Na, E_K, E_Ks, E_Ca, K_o, Na_o, K_i, Na_i, Ca_o, Ca_i, R, F, T, time_)

  // Assignment Rules:
  E_Na := R * T / F * ln(Na_o / Na_i);
  E_K := R * T / F * ln(K_o / K_i);
  E_Ks := R * T / F * ln((K_o + P_kna * Na_o) / (K_i + P_kna * Na_i));
  E_Ca := 0.5 * R * T / F * ln(Ca_o / Ca_i);

  // Variable initializations:
  P_kna = 0.03;
end

model fink_noble_giles_model_2008__iK1_rectification(xK1_inf, E_K, V)

  // Assignment Rules:
  xK1_inf := phi * rec1 + (1 - phi) * rec2;
  temp := 1 + Mg_Buf / KbMg;
  rec1 := temp * temp / (SPM / Kd1SPM + Mg_Buf / KiMg + temp * temp * temp);
  rec2 := 1 / (1 + SPM / Kd2SPM);
  KiMg := 2.8 * exp(-((V - fac * E_K)) / 180 );
  KbMg := 0.45 * exp(-((V - fac * E_K)) / 20 );
  Kd1SPM := 0.7E-3 * exp(-((V - fac * E_K + 8 * Mg_Buf)) / 4.8 );
  Kd2SPM := 40E-3 * exp(-((V - fac * E_K)) / 9.1 );

  // Variable initializations:
  Mg_Buf = 0.0356;
  SPM = 1.4613e-3;
  fac = 1.0648;
  phi = 0.8838;
end

model fink_noble_giles_model_2008__IK1(i_K1, time_, E_K, V, T, K_o, xK1_inf)

  // Sub-modules, and any changes to those submodules:
  iK1_rectification: fink_noble_giles_model_2008__iK1_rectification(xK1_inf, E_K, V);

  // Assignment Rules:
  i_K1 := g_K1_0 * (T / 35 - 55 / 7 ) * root(K_o / 5.4 ) * xK1_inf * (V - E_K);

  // Variable initializations:
  g_K1_0 = 0.6821;
end

model fink_noble_giles_model_2008__iKr_Markov_Sotalol_block(OtoB, BtoO, time_, alpha_xr1, beta_xr1, alpha_xr2, beta_xr2, alpha_xr3, beta_xr3, alpha_xr4, beta_xr4, O)

  // Assignment Rules:
  OtoB := O * Sotalol_mM * kBinding;
  BtoO := BOr4 * kDiss;

  // Rate Rules:
  BCr1' = beta_xr1 * BCr2 - alpha_xr1 * BCr1;
  BCr2' = alpha_xr1 * BCr1 + beta_xr2 * BCr3 - (alpha_xr2 + beta_xr1) * BCr2;
  BCr3' = alpha_xr2 * BCr2 + beta_xr3 * BOr4 - (alpha_xr3 + beta_xr2) * BCr3;
  BOr4' = alpha_xr3 * BCr3 + beta_xr4 * BIr5 - (alpha_xr4 + beta_xr3) * BOr4 + OtoB - BtoO;
  BIr5' = alpha_xr4 * BOr4 - beta_xr4 * BIr5;

  // Variable initializations:
  Sotalol_mM = 0;
  BCr1 = 0;
  BCr2 = 0;
  BCr3 = 0;
  BOr4 = 0;
  BIr5 = 0;
  kBinding = 5e-3;
  kDiss = 0.00125;
end

model fink_noble_giles_model_2008__iKr_Markov(Or4, time_, V, K_o, T, alpha_xr1, beta_xr1, alpha_xr2, beta_xr2, alpha_xr3, beta_xr3, alpha_xr4, beta_xr4, OtoB, BtoO)

  // Sub-modules, and any changes to those submodules:
  iKr_Markov_Sotalol_block: fink_noble_giles_model_2008__iKr_Markov_Sotalol_block(OtoB, BtoO, time_, alpha_xr1, beta_xr1, alpha_xr2, beta_xr2, alpha_xr3, beta_xr3, alpha_xr4, beta_xr4, Or4);

  // Assignment Rules:
  alpha_xr1 := 1 * T / T_Base * exp(24.335 + T_Base / T * (0.0112 * V - 25.914 ));
  beta_xr1 := 1 * T / T_Base * exp(13.688 + T_Base / T * (-(0.0603 ) * V - 15.707 ));
  alpha_xr2 := 1 * T / T_Base * exp(22.746 + T_Base / T * (0 * V - 25.914 ));
  beta_xr2 := 1 * T / T_Base * exp(13.193 + T_Base / T * (0 * V - 15.707 ));
  alpha_xr3 := 1 * T / T_Base * exp(22.098 + T_Base / T * (0.0365 * V - 25.914 ));
  beta_xr3 := 1 * T / T_Base * exp(7.313 + T_Base / T * (-(0.0399 ) * V - 15.707 ));
  alpha_xr4 := 1 * T / T_Base * exp(30.016 + T_Base / T * (0.0223 * V - 30.888 )) * power(5.4 / K_o, 0.4 );
  beta_xr4 := 1 * T / T_Base * exp(30.061 + T_Base / T * (-(0.0312 ) * V - 33.243 ));

  // Rate Rules:
  Cr1' = beta_xr1 * Cr2 - alpha_xr1 * Cr1;
  Cr2' = alpha_xr1 * Cr1 + beta_xr2 * Cr3 - (alpha_xr2 + beta_xr1) * Cr2;
  Cr3' = alpha_xr2 * Cr2 + beta_xr3 * Or4 - (alpha_xr3 + beta_xr2) * Cr3;
  Or4' = alpha_xr3 * Cr3 + beta_xr4 * Ir5 - (alpha_xr4 + beta_xr3) * Or4 - OtoB + BtoO;
  Ir5' = alpha_xr4 * Or4 - beta_xr4 * Ir5;

  // Variable initializations:
  Cr1 = 0.9786;
  Cr2 = 0.0031;
  Cr3 = 0.0029;
  Or4 = 0.014;
  Ir5 = 0.0014;
  T_Base = 310;
end

model fink_noble_giles_model_2008__IKr(i_Kr, time_, T, K_o, E_K, V, Or4)

  // Sub-modules, and any changes to those submodules:
  iKr_Markov: fink_noble_giles_model_2008__iKr_Markov(Or4, time_, V, K_o, T, alpha_xr1, beta_xr1, alpha_xr2, beta_xr2, alpha_xr3, beta_xr3, alpha_xr4, beta_xr4, OtoB, BtoO);

  // Assignment Rules:
  i_Kr := g_Kr_0 * (T / 35 - 55 / 7 ) * root(K_o / 5.4 ) * Or4 * (V - E_K);

  // Variable initializations:
  g_Kr_0 = 0.024;
end

model fink_noble_giles_model_2008__iKs_Xs_gate(Xs, V, time_)

  // Assignment Rules:
  xs_inf := 1 / (1 + exp((-(5 ) - V) / 14 ));
  alpha_xs := 1400 / root(1 + exp((5 - V) / 6 ));
  beta_xs := 1 / (1 + exp((V - 35 ) / 15 ));
  tau_xs := 1 * alpha_xs * beta_xs + 80;

  // Rate Rules:
  Xs' = (xs_inf - Xs) / tau_xs;

  // Variable initializations:
  Xs = 0.00303;
end

model fink_noble_giles_model_2008__IKs(i_Ks, E_Ks, time_, V, Xs)

  // Sub-modules, and any changes to those submodules:
  iKs_Xs_gate: fink_noble_giles_model_2008__iKs_Xs_gate(Xs, V, time_);

  // Assignment Rules:
  i_Ks := g_Ks * power(Xs, 2 ) * (V - E_Ks);

  // Variable initializations:
  g_Ks = 0.0392;
end

model fink_noble_giles_model_2008__ito_s_gate(s, V, time_)

  // Assignment Rules:
  s_inf := 1 / (1 + exp((V + 20 ) / 5 ));
  tau_s := 85 * exp(-(power(V + 45 , 2 )) / 320 ) + 5 / (1 + exp((V - 20 ) / 5 )) + 3;

  // Rate Rules:
  s' = (s_inf - s) / tau_s;

  // Variable initializations:
  s = 1;
end

model fink_noble_giles_model_2008__ito_r_gate(r, V, time_)

  // Assignment Rules:
  r_inf := 1 / (1 + exp((20 - V) / 6 ));
  tau_r := 9.5 * exp(-(power(V + 40 , 2 )) / 1800 ) + 0.8;

  // Rate Rules:
  r' = (r_inf - r) / tau_r;

  // Variable initializations:
  r = 2.11e-8;
end

model fink_noble_giles_model_2008__Ito(i_to, E_K, V, time_, s, r)

  // Sub-modules, and any changes to those submodules:
  ito_s_gate: fink_noble_giles_model_2008__ito_s_gate(s, V, time_);
  ito_r_gate: fink_noble_giles_model_2008__ito_r_gate(r, V, time_);

  // Assignment Rules:
  i_to := g_to * r * s * (V - E_K);

  // Variable initializations:
  g_to = 0.2;
end

model fink_noble_giles_model_2008__iNa_m_gate(m, V, time_)

  // Assignment Rules:
  m_inf := 1 / power(1 + exp((-(56.86 ) - V) / 9.03 ), 2 );
  alpha_m := 1 / (1 + exp((-(60 ) - V) / 5 ));
  beta_m := 0.1 / (1 + exp((V + 35 ) / 5 )) + 0.1 / (1 + exp((V - 50 ) / 200 ));
  tau_m := 1 * alpha_m * beta_m;

  // Rate Rules:
  m' = (m_inf - m) / tau_m;

  // Variable initializations:
  m = 0.00132;
end

model fink_noble_giles_model_2008__iNa_h_gate(h, shift_INa_inact, V, time_)

  // Assignment Rules:
  h_inf := 1 / power(1 + exp((V + 71.55 - shift_INa_inact) / 7.43 ), 2 );
  alpha_h := piecewise( 0.057 * exp(-((V + 80 - shift_INa_inact)) / 6.8 ) , V < -(40 ) + shift_INa_inact , 0 );
  beta_h := piecewise( 2.7 * exp(0.079 * (V - shift_INa_inact)) + 310000 * exp(0.3485 * (V - shift_INa_inact)) , V < -(40 ) + shift_INa_inact , 0.77 / (0.13 * (1 + exp((V + 10.66 - shift_INa_inact) / -(11.1 )))) );
  tau_h := 1 / (alpha_h + beta_h);

  // Rate Rules:
  h' = (h_inf - h) / tau_h;

  // Variable initializations:
  h = 0.7768;
end

model fink_noble_giles_model_2008__iNa_j_gate(j, shift_INa_inact, V, time_)

  // Assignment Rules:
  j_inf := 1 / power(1 + exp((V + 71.55 - shift_INa_inact) / 7.43 ), 2 );
  alpha_j := piecewise( (-(25428 ) * exp(0.2444 * (V - shift_INa_inact)) - 6.948E-6 * exp(-(0.04391 ) * (V - shift_INa_inact))) * (V + 37.78 ) / 1 / (1 + exp(0.311 * (V + 79.23 - shift_INa_inact))) , V < -(40 ) + shift_INa_inact , 0 );
  beta_j := piecewise( 0.02424 * exp(-(0.01052 ) * (V - shift_INa_inact)) / (1 + exp(-(0.1378 ) * (V + 40.14 - shift_INa_inact))) , V < -(40 ) + shift_INa_inact , 0.6 * exp(0.057 * (V - shift_INa_inact)) / (1 + exp(-(0.1 ) * (V + 32 - shift_INa_inact))) );
  tau_j := 1 / (alpha_j + beta_j);

  // Rate Rules:
  j' = (j_inf - j) / tau_j;

  // Variable initializations:
  j = 0.7766;
end

model fink_noble_giles_model_2008__INa(i_Na, shift_INa_inact, E_Na, time_, V, m, h, j)

  // Sub-modules, and any changes to those submodules:
  iNa_m_gate: fink_noble_giles_model_2008__iNa_m_gate(m, V, time_);
  iNa_h_gate: fink_noble_giles_model_2008__iNa_h_gate(h, shift_INa_inact, V, time_);
  iNa_j_gate: fink_noble_giles_model_2008__iNa_j_gate(j, shift_INa_inact, V, time_);

  // Assignment Rules:
  i_Na := g_Na * power(m, 3 ) * h * j * (V - E_Na);

  // Variable initializations:
  g_Na = 11;
  shift_INa_inact = 0;
end

model fink_noble_giles_model_2008__INab(i_b_Na, E_Na, time_, V)

  // Assignment Rules:
  i_b_Na := g_bna * (V - E_Na);

  // Variable initializations:
  g_bna = 0.00029;
end

model fink_noble_giles_model_2008__iCaL_d_gate(d, V, time_)

  // Assignment Rules:
  d_inf := 1 / (1 + exp((d_inf_shift - V) / 7.5 ));
  alpha_d := 1.4 / (1 + exp((-(35 ) - V) / 13 )) + 0.25;
  beta_d := 1.4 / (1 + exp((V + 5 ) / 5 ));
  gamma_d := 1 / (1 + exp((50 - V) / 20 ));
  tau_d := 1 * alpha_d * beta_d + gamma_d;

  // Rate Rules:
  d' = (d_inf - d) / tau_d;

  // Variable initializations:
  d = 5.06e-6;
  d_inf_shift = 5;
end

model fink_noble_giles_model_2008__iCaL_f_gate(f, V, time_)

  // Assignment Rules:
  f_inf := 1 / (1 + exp((V + 20 ) / 7 ));
  tau_f := (1102.5 * exp(-(power(V + 27 , 2 )) / 225 ) + 200 / (1 + exp((13 - V) / 10 )) + 180 / (1 + exp((V + 30 ) / 10 )) + 20 ) / 4;

  // Rate Rules:
  f' = (f_inf - f) / tau_f;

  // Variable initializations:
  f = 0.9999;
end

model fink_noble_giles_model_2008__iCaL_f2_gate(f2, V, time_)

  // Assignment Rules:
  f2_inf := 0.75 / (1 + exp((V + 35 ) / 7 )) + 0.25;
  tau_f2 := (562 * exp(-(power(V + 27 , 2 )) / 240 ) + 31 / (1 + exp((25 - V) / 10 )) + 80 / (1 + exp((V + 30 ) / 10 ))) / 2;

  // Rate Rules:
  f2' = (f2_inf - f2) / tau_f2;

  // Variable initializations:
  f2 = 0.9995;
end

model fink_noble_giles_model_2008__iCaL_fCass_gate(fCass, Ca_ss, V, time_)

  // Assignment Rules:
  fCass_inf := 0.4 / (1 + power(Ca_ss / 0.05 , 2 )) + 0.6;
  tau_fCass := 80 / (1 + power(Ca_ss / 0.05 , 2 )) + 2;

  // Rate Rules:
  fCass' = (fCass_inf - fCass) / tau_fCass;

  // Variable initializations:
  fCass = 1;
end

model fink_noble_giles_model_2008__ICaL(i_CaL, Ca_o, Ca_ss, R, F, T, time_, V, d, f, f2, fCass)

  // Sub-modules, and any changes to those submodules:
  iCaL_d_gate: fink_noble_giles_model_2008__iCaL_d_gate(d, V, time_);
  iCaL_f_gate: fink_noble_giles_model_2008__iCaL_f_gate(f, V, time_);
  iCaL_f2_gate: fink_noble_giles_model_2008__iCaL_f2_gate(f2, V, time_);
  iCaL_fCass_gate: fink_noble_giles_model_2008__iCaL_fCass_gate(fCass, Ca_ss, V, time_);

  // Assignment Rules:
  i_CaL := g_CaL * d * f * f2 * fCass * power(z, 2 ) * (V - 15 ) * power(F, 2 ) / (R * T) * (0.25 * Ca_ss * exp(2 * (V - 15 ) * F / (R * T)) - Ca_o) / (exp(2 * (V - 15 ) * F / (R * T)) - 1 );

  // Variable initializations:
  g_CaL = 2e-5;
  z = 2;
end

model fink_noble_giles_model_2008__ICab(i_b_Ca, E_Ca, time_, V)

  // Assignment Rules:
  i_b_Ca := g_bca * (V - E_Ca);

  // Variable initializations:
  g_bca = 0.0004736;
end

model fink_noble_giles_model_2008__IpCa(i_p_Ca, Ca_i)

  // Assignment Rules:
  i_p_Ca := g_pCa * Ca_i / (Ca_i + K_pCa);

  // Variable initializations:
  g_pCa = 0.0619;
  K_pCa = 0.0005;
end

model fink_noble_giles_model_2008__IpK(i_p_K, E_K, V)

  // Assignment Rules:
  i_p_K := g_pK * (V - E_K) / (1 + exp((25 - V) / 5.98 ));

  // Variable initializations:
  g_pK = 0.00973;
end

model fink_noble_giles_model_2008__INaK(i_NaK, K_o, Na_i, time_, R, F, T, V)

  // Assignment Rules:
  i_NaK := P_NaK * K_o / (K_o + K_mk) * Na_i / (Na_i + K_mNa) / (1 + 0.1245 * exp(-(0.1 ) * V * F / (R * T)) + 0.0353 * exp(-(V) * F / (R * T)));

  // Variable initializations:
  P_NaK = 1.297;
  K_mk = 1;
  K_mNa = 40;
end

model fink_noble_giles_model_2008__INaCa(i_NaCa, Na_i, Na_o, Ca_i, Ca_o, R, F, T, V, time_)

  // Assignment Rules:
  i_NaCa := K_NaCa * (exp(gamma * V * F / (R * T)) * power(Na_i, 3 ) * Ca_o - exp((gamma - 1 ) * V * F / (R * T)) * power(Na_o, 3 ) * Ca_i * alpha) / ((power(Km_Nai, 3 ) + power(Na_o, 3 )) * (Km_Ca + Ca_o) * (1 + K_sat * exp((gamma - 1 ) * V * F / (R * T))));

  // Variable initializations:
  K_NaCa = 200;
  K_sat = 0.1;
  alpha = 2.5;
  gamma = 0.35;
  Km_Ca = 1.38;
  Km_Nai = 87.5;
end

model fink_noble_giles_model_2008__Irel(i_rel, Ca_ss, Ca_SR, time_)

  // Assignment Rules:
  i_rel := Vol_rel * O * (Ca_SR - Ca_ss);
  O := k1 * power(Ca_ss, 2 ) * R_prime / (k3 + k1 * power(Ca_ss, 2 ));
  kcasr := max_sr - (max_sr - min_sr) / (1 + power(EC / Ca_SR, 2 ));
  k1 := k1_prime / kcasr;
  k2 := k2_prime * kcasr;

  // Rate Rules:
  R_prime' = -(k2) * Ca_ss * R_prime + k4 * (1 - R_prime);

  // Variable initializations:
  R_prime = 0.9864;
  k1_prime = 0.15;
  k2_prime = 0.045;
  EC = 1.5;
  max_sr = 2.5;
  min_sr = 1;
  k3 = 0.06;
  k4 = 0.005;
  Vol_rel = 0.306;
end

model fink_noble_giles_model_2008__Ca_buffer(Ca_i_bufc, Ca_sr_bufsr, Ca_ss_bufss, Ca_i, Ca_ss, Ca_SR)

  // Assignment Rules:
  Ca_i_bufc := 1 / (1 + Buf_c * K_buf_c / power(Ca_i + K_buf_c, 2 ));
  Ca_sr_bufsr := 1 / (1 + Buf_sr * K_buf_sr / power(Ca_SR + K_buf_sr, 2 ));
  Ca_ss_bufss := 1 / (1 + Buf_ss * K_buf_ss / power(Ca_ss + K_buf_ss, 2 ));

  // Variable initializations:
  Buf_c = 0.2;
  K_buf_c = 0.001;
  Buf_sr = 10;
  K_buf_sr = 0.3;
  Buf_ss = 0.4;
  K_buf_ss = 0.00025;
end

model fink_noble_giles_model_2008__Ileak_Iup_Ixfer(i_up, i_leak, i_xfer, Ca_i, Ca_ss, Ca_SR)

  // Assignment Rules:
  i_up := Vmax_up / (1 + power(K_up, 2 ) / power(Ca_i, 2 ));
  i_leak := Vol_leak * (Ca_SR - Ca_i);
  i_xfer := Vol_xfer * (Ca_ss - Ca_i);

  // Variable initializations:
  Vol_xfer = 0.0038;
  K_up = 0.00025;
  Vol_leak = 0.00036;
  Vmax_up = 0.006375;
end

model fink_noble_giles_model_2008__Ca(Ca_i, Ca_SR, Ca_ss, Ca_i_bufc, Ca_sr_bufsr, Ca_ss_bufss, V, Vol_c, time_, d, F, Cm, i_CaL, i_NaCa, i_p_Ca, i_b_Ca, i_rel, i_up, i_leak, i_xfer)

  // Sub-modules, and any changes to those submodules:
  Irel: fink_noble_giles_model_2008__Irel(i_rel, Ca_ss, Ca_SR, time_);
  Ca_buffer: fink_noble_giles_model_2008__Ca_buffer(Ca_i_bufc, Ca_sr_bufsr, Ca_ss_bufss, Ca_i, Ca_ss, Ca_SR);
  Ileak_Iup_Ixfer: fink_noble_giles_model_2008__Ileak_Iup_Ixfer(i_up, i_leak, i_xfer, Ca_i, Ca_ss, Ca_SR);

  // Rate Rules:
  Ca_i' = Ca_i_bufc * ((i_leak - i_up) * V_sr / Vol_c + i_xfer - (i_b_Ca + i_p_Ca - 2 * i_NaCa) * Cm / (2 * Vol_c * F));
  Ca_SR' = Ca_sr_bufsr * (i_up - (i_rel + i_leak));
  Ca_ss' = Ca_ss_bufss * (-(i_CaL) * Cm / (2 * V_ss * F) + i_rel * V_sr / V_ss - i_xfer * Vol_c / V_ss);

  // Variable initializations:
  Ca_i = 1.092e-4;
  Ca_SR = 2.7656;
  Ca_ss = 1.893e-4;
  V_sr = 0.001094;
  V_ss = 0.00005468;
end

model fink_noble_giles_model_2008__Na(Na_i, time_, F, Cm, Vol_c, i_Na, i_NaCa, i_NaK, i_b_Na)

  // Rate Rules:
  Na_i' = -((i_Na + i_b_Na + 3 * i_NaK + 3 * i_NaCa)) * Cm / (Vol_c * F);

  // Variable initializations:
  Na_i = 7.940167;
end

model fink_noble_giles_model_2008__K(K_i, time_, F, Cm, Vol_c, i_K1, i_to, i_NaK, i_Kr, i_Ks, i_p_K, i_Stim)

  // Rate Rules:
  K_i' = -((i_K1 + i_to + i_Kr + i_Ks + i_p_K + i_Stim - 2 * i_NaK)) / (Vol_c * F) * Cm;

  // Variable initializations:
  K_i = 141.0167;
end

model fink_noble_giles_model_2008__transmembrane_currents()
end

model fink_noble_giles_model_2008__intracellular_currents()
end

model fink_noble_giles_model_2008__Ions_n_reversal_potentials()
end

model fink_noble_giles_model_2008____main()

  // Sub-modules, and any changes to those submodules:
  Environment: fink_noble_giles_model_2008__Environment(time_, R, T, F, K_o, Ca_o, Na_o);
  cell: fink_noble_giles_model_2008__cell(V, Cm, Vol_c, time_, i_K1, i_to, i_Kr, i_Ks, i_CaL, i_NaK, i_Na, i_b_Na, i_NaCa, i_b_Ca, i_p_K, i_p_Ca, i_Stim);
  reversal_potentials: fink_noble_giles_model_2008__reversal_potentials(E_Na, E_K, E_Ks, E_Ca, K_o, Na_o, K_i, Na_i, Ca_o, Ca_i, R, F, T, time_);
  IK1: fink_noble_giles_model_2008__IK1(i_K1, time_, E_K, V, T, K_o, xK1_inf);
  IKr: fink_noble_giles_model_2008__IKr(i_Kr, time_, T, K_o, E_K, V, Or4);
  IKs: fink_noble_giles_model_2008__IKs(i_Ks, E_Ks, time_, V, Xs);
  Ito: fink_noble_giles_model_2008__Ito(i_to, E_K, V, time_, s, r);
  INa: fink_noble_giles_model_2008__INa(i_Na, shift_INa_inact, E_Na, time_, V, m, h, j);
  INab: fink_noble_giles_model_2008__INab(i_b_Na, E_Na, time_, V);
  ICaL: fink_noble_giles_model_2008__ICaL(i_CaL, Ca_o, Ca_ss, R, F, T, time_, V, d, f, f2, fCass);
  ICab: fink_noble_giles_model_2008__ICab(i_b_Ca, E_Ca, time_, V);
  IpCa: fink_noble_giles_model_2008__IpCa(i_p_Ca, Ca_i);
  IpK: fink_noble_giles_model_2008__IpK(i_p_K, E_K, V);
  INaK: fink_noble_giles_model_2008__INaK(i_NaK, K_o, Na_i, time_, R, F, T, V);
  INaCa: fink_noble_giles_model_2008__INaCa(i_NaCa, Na_i, Na_o, Ca_i, Ca_o, R, F, T, V, time_);
  Ca: fink_noble_giles_model_2008__Ca(Ca_i, Ca_SR, Ca_ss, Ca_i_bufc, Ca_sr_bufsr, Ca_ss_bufss, V, Vol_c, time_, d, F, Cm, i_CaL, i_NaCa, i_p_Ca, i_b_Ca, i_rel, i_up, i_leak, i_xfer);
  Na: fink_noble_giles_model_2008__Na(Na_i, time_, F, Cm, Vol_c, i_Na, i_NaCa, i_NaK, i_b_Na);
  K: fink_noble_giles_model_2008__K(K_i, time_, F, Cm, Vol_c, i_K1, i_to, i_NaK, i_Kr, i_Ks, i_p_K, i_Stim);
  transmembrane_currents: fink_noble_giles_model_2008__transmembrane_currents();
  intracellular_currents: fink_noble_giles_model_2008__intracellular_currents();
  Ions_n_reversal_potentials: fink_noble_giles_model_2008__Ions_n_reversal_potentials();
end
