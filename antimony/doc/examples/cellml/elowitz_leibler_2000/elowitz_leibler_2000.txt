//Created by libAntimony v1.4
model elowitz_leibler_2000__environment(time_)
end

model elowitz_leibler_2000__parameters(n, alpha_0, alpha, beta, K_m, efficiency, mRNA_halflife, t_ave, kd_prot, kd_mRNA, prot_halflife, tps_repr, tps_active, k_tl, a_tr, a0_tr)

  // Assignment Rules:
  alpha_0 := a0_tr * efficiency / (kd_prot * K_m);
  alpha := a_tr * efficiency / (kd_prot * K_m);
  beta := kd_prot / kd_mRNA;
  t_ave := mRNA_halflife / ln(2 );
  kd_prot := ln(2 ) / prot_halflife;
  kd_mRNA := ln(2 ) / mRNA_halflife;
  k_tl := efficiency * kd_mRNA;
  a_tr := (tps_active - tps_repr) * 60;
  a0_tr := tps_repr * 60;

  // Variable initializations:
  n = 2;
  K_m = 40;
  efficiency = 20;
  mRNA_halflife = 2;
  prot_halflife = 10;
  tps_repr = 5e-4;
  tps_active = 0.5;
end

model elowitz_leibler_2000__M_lacl(M_lacl, a_tr, P_cl, n, a0_tr, K_m, kd_mRNA, time_)

  // Rate Rules:
  M_lacl' = a0_tr + a_tr * power(K_m, n) / (power(K_m, n) + power(P_cl, n)) - kd_mRNA * M_lacl;

  // Variable initializations:
  M_lacl = 0;
end

model elowitz_leibler_2000__M_tetR(M_tetR, a_tr, P_lacl, n, a0_tr, K_m, kd_mRNA, time_)

  // Rate Rules:
  M_tetR' = a_tr * power(K_m, n) / (power(K_m, n) + power(P_lacl, n)) + a0_tr - kd_mRNA * M_tetR;

  // Variable initializations:
  M_tetR = 20;
end

model elowitz_leibler_2000__M_cl(M_cl, a_tr, P_tetR, n, a0_tr, K_m, kd_mRNA, time_)

  // Rate Rules:
  M_cl' = a_tr * power(K_m, n) / (power(K_m, n) + power(P_tetR, n)) + a0_tr - kd_mRNA * M_cl;

  // Variable initializations:
  M_cl = 0;
end

model elowitz_leibler_2000__P_lacl(P_lacl, k_tl, M_lacl, kd_prot, time_)

  // Rate Rules:
  P_lacl' = k_tl * M_lacl - kd_prot * P_lacl;

  // Variable initializations:
  P_lacl = 0;
end

model elowitz_leibler_2000__P_tetR(P_tetR, k_tl, M_tetR, kd_prot, time_)

  // Rate Rules:
  P_tetR' = k_tl * M_tetR - kd_prot * P_tetR;

  // Variable initializations:
  P_tetR = 0;
end

model elowitz_leibler_2000__P_cl(P_cl, k_tl, M_cl, kd_prot, time_)

  // Rate Rules:
  P_cl' = k_tl * M_cl - kd_prot * P_cl;

  // Variable initializations:
  P_cl = 0;
end

model elowitz_leibler_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: elowitz_leibler_2000__environment(time_);
  parameters: elowitz_leibler_2000__parameters(n, alpha_0, alpha, beta, K_m, efficiency, mRNA_halflife, t_ave, kd_prot, kd_mRNA, prot_halflife, tps_repr, tps_active, k_tl, a_tr, a0_tr);
  M_lacl: elowitz_leibler_2000__M_lacl(M_lacl0, a_tr, P_cl0, n, a0_tr, K_m, kd_mRNA, time_);
  M_tetR: elowitz_leibler_2000__M_tetR(M_tetR0, a_tr, P_lacl0, n, a0_tr, K_m, kd_mRNA, time_);
  M_cl: elowitz_leibler_2000__M_cl(M_cl0, a_tr, P_tetR0, n, a0_tr, K_m, kd_mRNA, time_);
  P_lacl: elowitz_leibler_2000__P_lacl(P_lacl0, k_tl, M_lacl0, kd_prot, time_);
  P_tetR: elowitz_leibler_2000__P_tetR(P_tetR0, k_tl, M_tetR0, kd_prot, time_);
  P_cl: elowitz_leibler_2000__P_cl(P_cl0, k_tl, M_cl0, kd_prot, time_);
end
