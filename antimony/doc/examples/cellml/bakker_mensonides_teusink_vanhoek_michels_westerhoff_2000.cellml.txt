//Created by libAntimony v1.3
model cellmlmod_global_variables()

  //Other declarations:
  var time;
end

model cellmlmod_Glc_o()

  // Variable initializations:
  Glc_o = 0.05;

  //Other declarations:
  var Glc_o;
end

model cellmlmod_Glc_i()

  // Rate Rules:
  Glc_i' = V_glucose_transport - V_HK

  //Other declarations:
  var Glc_i, V_HK, V_glucose_transport, time;
end

model cellmlmod_Glc_6_P()

  // Assignment Rules:
  Glc_6_P := hexose_P / Keq_PGI

  // Variable initializations:
  Keq_PGI = 0.29;

  //Other declarations:
  var Glc_6_P, Keq_PGI, Fru_6_P, hexose_P, time;
end

model cellmlmod_Fru_6_P()

  // Assignment Rules:
  Fru_6_P := hexose_P / Glc_6_P

  //Other declarations:
  var Fru_6_P, Glc_6_P, hexose_P, time;
end

model cellmlmod_hexose_P()

  // Rate Rules:
  hexose_P' = V_HK - V_PFK

  //Other declarations:
  var hexose_P, V_HK, V_PFK, time;
end

model cellmlmod_Fru_1_6_BP()

  // Rate Rules:
  Fru_1_6_BP' = V_PFK - V_ALD

  //Other declarations:
  var Fru_1_6_BP, V_PFK, V_ALD, time;
end

model cellmlmod_GA_3_P()

  // Assignment Rules:
  GA_3_P := Keq_TIM * DHAP

  //Other declarations:
  var GA_3_P, Keq_TIM, DHAP;
end

model cellmlmod_triose_P()

  // Rate Rules:
  triose_P' = 2.0   * V_ALD + V_GPO - (V_GAPDH + V_GDH)

  //Other declarations:
  var triose_P, V_ALD, V_GAPDH, V_GDH, V_GPO, time;
end

model cellmlmod_one_three_BPGA()

  // Rate Rules:
  one_three_BPGA' = V_GAPDH - V_PGK

  //Other declarations:
  var one_three_BPGA, V_GAPDH, V_PGK, time;
end

model cellmlmod_three_PGA()

  // Assignment Rules:
  three_PGA := N / ( 1.0   + Keq_PGM + Keq_PGM * Keq_ENO)

  // Variable initializations:
  Keq_PGM = 0.187;
  Keq_ENO = 6.7;

  //Other declarations:
  var three_PGA, N, Keq_PGM, Keq_ENO;
end

model cellmlmod_two_PGA()

  // Assignment Rules:
  two_PGA := Keq_PGM * three_PGA

  //Other declarations:
  var two_PGA, three_PGA, Keq_PGM;
end

model cellmlmod_N()

  // Rate Rules:
  N' = V_PGK - V_PYK

  //Other declarations:
  var N, V_PGK, V_PYK, time;
end

model cellmlmod_PEP()

  // Assignment Rules:
  PEP := Keq_ENO * two_PGA

  //Other declarations:
  var PEP, two_PGA, Keq_ENO;
end

model cellmlmod_pyruvate_i()

  // Rate Rules:
  pyruvate_i' = V_PYK - V_pyruvate_transport

  //Other declarations:
  var pyruvate_i, V_PYK, V_pyruvate_transport, time;
end

model cellmlmod_pyruvate_o()

  //Other declarations:
  var pyruvate_o;
end

model cellmlmod_glycerol()

  //Other declarations:
  var glycerol;
end

model cellmlmod_DHAP()

  // Assignment Rules:
  DHAP := triose_P / ( 1.0   + Keq_TIM)

  // Variable initializations:
  Keq_TIM = 0.045;

  //Other declarations:
  var DHAP, triose_P, Keq_TIM, time;
end

model cellmlmod_Gly_3_P()

  // Rate Rules:
  Gly_3_P' = V_GDH - (V_GK + V_GPO)

  //Other declarations:
  var Gly_3_P, V_GDH, V_GK, V_GPO, time;
end

model cellmlmod_H2O()

  //Other declarations:
  var H2O;
end

model cellmlmod_O2()

  //Other declarations:
  var O2;
end

model cellmlmod_NAD()

  // Assignment Rules:
  NAD := C7 - NADH

  //Other declarations:
  var NAD, NADH, C7;
end

model cellmlmod_NADH()

  // Rate Rules:
  NADH' = V_GAPDH - V_GDH

  //Other declarations:
  var NADH, V_GAPDH, V_GDH, time;
end

model cellmlmod_P()

  // Rate Rules:
  P' = V_PGK + V_GK + V_PYK - (V_HK + V_PFK + V_ATP_utilisation)

  //Other declarations:
  var P, V_HK, V_PGK, V_PFK, V_GK, V_PYK, V_ATP_utilisation, time;
end

model cellmlmod_ATP()

  // Assignment Rules:
  ATP := (C6 - -((P * ( 1.0   -  4.0   * Keq_AK))) + power(power(C6 - -((P * ( 1.0   -  4.0   * Keq_AK))),  2.0  ) -  4.0   * ( 1.0   -  4.0   * Keq_AK) * (-(Keq_AK) * power(P,  2.0  )),  0.5  )) / ( 2.0   * ( 1.0   -  4.0   * Keq_AK))

  // Variable initializations:
  Keq_AK = 0.442;

  //Other declarations:
  var ATP, P, Keq_AK, C6;
end

model cellmlmod_ADP()

  // Assignment Rules:
  ADP := P -  2.0   * ATP

  //Other declarations:
  var ADP, ATP, P;
end

model cellmlmod_AMP()

  // Assignment Rules:
  AMP := C6 - (ATP + ADP)

  //Other declarations:
  var AMP, ATP, ADP, C6;
end

model cellmlmod_C6()

  // Assignment Rules:
  C6 := ATP + ADP + AMP

  //Other declarations:
  var C6, AMP, ADP, ATP;
end

model cellmlmod_C7()

  // Assignment Rules:
  C7 := NADH + NAD

  //Other declarations:
  var C7, NAD, NADH;
end

model cellmlmod_V_glucose_transport()

  // Assignment Rules:
  V_glucose_transport := V_glucose_transport_max  * (( Glc_o  -  Glc_i ) / ( K_Glc  +  Glc_o  +  Glc_i  +  alpha  *  Glc_o  * ( Glc_i  /  K_Glc )))

  // Variable initializations:
  K_Glc = 2.0;
  alpha = 0.75;
  V_glucose_transport_max = 106.2;

  //Other declarations:
  var V_glucose_transport, Glc_o, Glc_i, K_Glc, alpha, V_glucose_transport_max;
end

model cellmlmod_V_pyruvate_transport()

  // Assignment Rules:
  V_pyruvate_transport := V_pyruvate_transport_max  * ( pyruvate_i  /  K_pyruvate ) * ( 1.0   +  pyruvate_i  /  K_pyruvate )

  // Variable initializations:
  K_pyruvate = 1.96;
  V_pyruvate_transport_max = 200.0;

  //Other declarations:
  var V_pyruvate_transport, pyruvate_i, K_pyruvate, V_pyruvate_transport_max;
end

model cellmlmod_V_GPO()

  // Assignment Rules:
  V_GPO := V_GPO_max  * ( Gly_3_P  /  K_Gly_3_P ) * ( 1.0   +  Gly_3_P  /  K_Gly_3_P )

  // Variable initializations:
  K_Gly_3_P = 1.7;
  V_GPO_max = 200.0;

  //Other declarations:
  var V_GPO, Gly_3_P, K_Gly_3_P, V_GPO_max;
end

model cellmlmod_V_HK()

  // Assignment Rules:
  V_HK := V_HK_max  * ( Glc_i  /  K_Glc_i  / ( 1.0   +  Glc_i  /  K_Glc_i  +  Glc_6_P  /  K_Glc_6_P )) * ( ATP  /  K_ATP  / ( 1.0   +  ATP  /  K_ATP  +  ADP  /  K_ADP ))

  // Variable initializations:
  K_Glc_i = 0.1;
  K_Glc_6_P = 12.0;
  K_ATP = 0.116;
  K_ADP = 0.126;
  V_HK_max = 625.0;

  //Other declarations:
  var V_HK, Glc_i, Glc_6_P, ATP, ADP, K_Glc_i, K_Glc_6_P, K_ATP, K_ADP, V_HK_max;
end

model cellmlmod_V_GAPDH()

  // Assignment Rules:
  V_GAPDH := V_GAPDH_max_plus  * ( GA_3_P  /  K_GA_3_P  * ( NAD  /  K_NAD  -  V_GAPDH_max_ratio ) * ( one_three_BPGA  /  K_one_three_BPGA ) * ( NADH  /  K_NADH ) / (( 1.0   +  GA_3_P  /  K_GA_3_P  +  one_three_BPGA  /  K_one_three_BPGA ) * ( 1.0   +  NAD  /  K_NAD  +  NADH  /  K_NADH )))

  // Variable initializations:
  K_NAD = 0.45;
  K_GA_3_P = 0.15;
  K_one_three_BPGA = 0.1;
  K_NADH = 0.02;
  V_GAPDH_max_plus = 1470.0;
  V_GAPDH_max_ratio = 0.67;

  //Other declarations:
  var V_GAPDH, NAD, GA_3_P, one_three_BPGA, NADH, K_NAD, K_GA_3_P, K_one_three_BPGA;
  var K_NADH, V_GAPDH_max_plus, V_GAPDH_max_ratio;
end

model cellmlmod_V_PGK()

  // Assignment Rules:
  V_PGK := V_PGK_max_plus  * ( one_three_BPGA  /  K_one_three_BPGA  * ( ADP  /  K_ADP  -  V_PGK_max_ratio ) * ( three_PGA  /  K_3_PGA ) * ( ATP  /  K_ATP ) / (( 1.0   +  one_three_BPGA  /  K_one_three_BPGA  +  three_PGA  /  K_3_PGA ) * ( 1.0   +  ADP  /  K_ADP  +  ATP  /  K_ATP )))

  // Variable initializations:
  K_ADP = 0.1;
  K_one_three_BPGA = 0.05;
  K_3_PGA = 1.62;
  K_ATP = 0.29;
  V_PGK_max_plus = 640.0;
  V_PGK_max_ratio = 0.029;

  //Other declarations:
  var V_PGK, ADP, one_three_BPGA, three_PGA, ATP, K_ADP, K_one_three_BPGA;
  var K_3_PGA, K_ATP, V_PGK_max_plus, V_PGK_max_ratio;
end

model cellmlmod_V_GK()

  // Assignment Rules:
  V_GK := V_GK_max_plus  * ( Gly_3_P  /  K_Gly_3_P  * ( ADP  /  K_ADP  -  V_GK_max_ratio ) * ( glycerol  /  K_glycerol ) * ( ATP  /  K_ATP ) / (( 1.0   +  Gly_3_P  /  K_Gly_3_P  +  glycerol  /  K_glycerol ) * ( 1.0   +  ADP  /  K_ADP  +  ATP  /  K_ATP )))

  // Variable initializations:
  K_ADP = 0.12;
  K_Gly_3_P = 5.1;
  K_glycerol = 0.12;
  K_ATP = 0.19;
  V_GK_max_plus = 0.0;
  V_GK_max_ratio = 167.0;

  //Other declarations:
  var V_GK, ADP, Gly_3_P, glycerol, ATP, K_ADP, K_Gly_3_P, K_glycerol, K_ATP;
  var V_GK_max_plus, V_GK_max_ratio;
end

model cellmlmod_V_GDH()

  // Assignment Rules:
  V_GDH := V_GDH_max_plus  * ( DHAP  /  K_DHAP  * ( NADH  /  K_NADH  -  V_GDH_max_ratio ) * ( Gly_3_P  /  K_Gly_3_P ) * ( NAD  /  K_NAD ) / (( 1.0   +  DHAP  /  K_DHAP  +  Gly_3_P  /  K_Gly_3_P ) * ( 1.0   +  NADH  /  K_NADH  +  NAD  /  K_NAD )))

  // Variable initializations:
  K_NADH = 0.01;
  K_Gly_3_P = 2.0;
  K_DHAP = 0.1;
  K_NAD = 0.4;
  V_GDH_max_plus = 533.0;
  V_GDH_max_ratio = 0.28;

  //Other declarations:
  var V_GDH, NADH, Gly_3_P, DHAP, NAD, K_NADH, K_Gly_3_P, K_DHAP, K_NAD, V_GDH_max_plus;
  var V_GDH_max_ratio;
end

model cellmlmod_V_PFK()

  // Assignment Rules:
  V_PFK := V_PFK_max  * ( Ki_1  / ( Fru_1_6_BP  +  Ki_1 )) * ( Fru_6_P  /  KM_Fru_6_P  / ( 1.0   +  Fru_6_P  /  KM_Fru_6_P  +  Fru_1_6_BP  /  Ki_2 )) * ( ATP  /  KM_ATP  / ( 1.0   +  ATP  /  KM_ATP ))

  // Variable initializations:
  Ki_1 = 15.8;
  Ki_2 = 10.7;
  KM_Fru_6_P = 0.82;
  KM_ATP = 2.6E-2;
  V_PFK_max = 780.0;

  //Other declarations:
  var V_PFK, Fru_6_P, Fru_1_6_BP, ATP, Ki_1, Ki_2, KM_Fru_6_P, KM_ATP, V_PFK_max;
end

model cellmlmod_V_PYK()

  // Assignment Rules:
  V_PYK := V_PYK_max  * (power( PEP  /  KM_PEP ,  n ) / ( 1.0   + power( PEP  /  KM_PEP ,  n ))) * ( ADP  /  KM_ADP  / ( 1.0   +  ADP  /  KM_ADP ))
  KM_PEP := 0.34   * ( 1.0   +  ATP  /  0.57   +  ADP  /  0.64  )

  // Variable initializations:
  KM_ADP = 0.114;
  n = 2.5;
  V_PYK_max = 2.6E3;

  //Other declarations:
  var V_PYK, PEP, ADP, ATP, KM_PEP, KM_ADP, n, V_PYK_max;
end

model cellmlmod_V_ALD()

  // Assignment Rules:
  V_ALD := V_ALD_max_plus  * (( Fru_1_6_BP  /  KM_Fru_1_6_BP  -  V_ALD_max_ratio  * ( GA_3_P  /  DHAP ) * ( KM_GA_3_P  *  KM_DHAP )) / ( 1.0   +  Fru_1_6_BP  /  KM_Fru_1_6_BP  +  GA_3_P  /  KM_GA_3_P  +  DHAP  /  KM_DHAP  +  Fru_1_6_BP  *  GA_3_P  / ( KM_Fru_1_6_BP  *  Ki_GA_3_P ) +  DHAP  *  GA_3_P  / ( KM_DHAP  *  KM_GA_3_P )))
  KM_Fru_1_6_BP := 9.0E-3  * ( 1.0   +  ATP  /  0.68   +  ADP  /  1.51   +  AMP  /  3.65  )

  // Variable initializations:
  KM_GA_3_P = 6.7E-2;
  Ki_GA_3_P = 9.8E-2;
  KM_DHAP = 1.5E-2;
  V_ALD_max_plus = 780.0;
  V_ALD_max_ratio = 1.19;

  //Other declarations:
  var V_ALD, Fru_1_6_BP, GA_3_P, DHAP, ATP, ADP, AMP, KM_Fru_1_6_BP, KM_GA_3_P;
  var Ki_GA_3_P, KM_DHAP, V_ALD_max_plus, V_ALD_max_ratio;
end

model cellmlmod_V_ATP_utilisation()

  // Assignment Rules:
  V_ATP_utilisation := k  * ( ATP  /  ADP )

  // Variable initializations:
  k = 50;

  //Other declarations:
  var V_ATP_utilisation, ATP, ADP, k;
end

model bakker_mensonides_teusink_vanhoek_michels_westerhoff_2000_version01()

  // Sub-modules, and any changes to those submodules:
  global_variables: cellmlmod_global_variables()
  Glc_o: cellmlmod_Glc_o()
  Glc_i: cellmlmod_Glc_i()
  Glc_6_P: cellmlmod_Glc_6_P()
  Fru_6_P: cellmlmod_Fru_6_P()
  hexose_P: cellmlmod_hexose_P()
  Fru_1_6_BP: cellmlmod_Fru_1_6_BP()
  GA_3_P: cellmlmod_GA_3_P()
  triose_P: cellmlmod_triose_P()
  one_three_BPGA: cellmlmod_one_three_BPGA()
  three_PGA: cellmlmod_three_PGA()
  two_PGA: cellmlmod_two_PGA()
  N: cellmlmod_N()
  PEP: cellmlmod_PEP()
  pyruvate_i: cellmlmod_pyruvate_i()
  pyruvate_o: cellmlmod_pyruvate_o()
  glycerol: cellmlmod_glycerol()
  DHAP: cellmlmod_DHAP()
  Gly_3_P: cellmlmod_Gly_3_P()
  H2O: cellmlmod_H2O()
  O2: cellmlmod_O2()
  NAD: cellmlmod_NAD()
  NADH: cellmlmod_NADH()
  P: cellmlmod_P()
  ATP: cellmlmod_ATP()
  ADP: cellmlmod_ADP()
  AMP: cellmlmod_AMP()
  C6: cellmlmod_C6()
  C7: cellmlmod_C7()
  V_glucose_transport: cellmlmod_V_glucose_transport()
  V_pyruvate_transport: cellmlmod_V_pyruvate_transport()
  V_GPO: cellmlmod_V_GPO()
  V_HK: cellmlmod_V_HK()
  V_GAPDH: cellmlmod_V_GAPDH()
  V_PGK: cellmlmod_V_PGK()
  V_GK: cellmlmod_V_GK()
  V_GDH: cellmlmod_V_GDH()
  V_PFK: cellmlmod_V_PFK()
  V_PYK: cellmlmod_V_PYK()
  V_ALD: cellmlmod_V_ALD()
  V_ATP_utilisation: cellmlmod_V_ATP_utilisation()
  Glc_o.Glc_o is V_glucose_transport.Glc_o;
  Glc_i.Glc_i is V_glucose_transport.Glc_i;
  Glc_i.V_glucose_transport is V_glucose_transport.V_glucose_transport;
  V_glucose_transport.Glc_i is V_HK.Glc_i;
  Glc_i.V_HK is V_HK.V_HK;
  Glc_6_P.Glc_6_P is V_HK.Glc_6_P;
  hexose_P.V_HK is V_HK.V_HK;
  Fru_6_P.Fru_6_P is V_PFK.Fru_6_P;
  hexose_P.V_PFK is V_PFK.V_PFK;
  Fru_1_6_BP.Fru_1_6_BP is V_PFK.Fru_1_6_BP;
  Fru_1_6_BP.V_PFK is V_PFK.V_PFK;
  V_PFK.Fru_1_6_BP is V_ALD.Fru_1_6_BP;
  Fru_1_6_BP.V_ALD is V_ALD.V_ALD;
  DHAP.DHAP is V_ALD.DHAP;
  V_ALD.DHAP is V_GDH.DHAP;
  triose_P.V_ALD is V_ALD.V_ALD;
  triose_P.V_GAPDH is V_GAPDH.V_GAPDH;
  triose_P.V_GDH is V_GDH.V_GDH;
  triose_P.V_GPO is V_GPO.V_GPO;
  GA_3_P.GA_3_P is V_ALD.GA_3_P;
  V_ALD.GA_3_P is V_GAPDH.GA_3_P;
  Gly_3_P.Gly_3_P is V_GDH.Gly_3_P;
  Gly_3_P.V_GDH is V_GDH.V_GDH;
  V_GDH.Gly_3_P is V_GK.Gly_3_P;
  Gly_3_P.V_GK is V_GK.V_GK;
  one_three_BPGA.one_three_BPGA is V_GAPDH.one_three_BPGA;
  one_three_BPGA.V_GAPDH is V_GAPDH.V_GAPDH;
  V_GAPDH.one_three_BPGA is V_PGK.one_three_BPGA;
  one_three_BPGA.V_PGK is V_PGK.V_PGK;
  PEP.PEP is V_PYK.PEP;
  N.V_PGK is V_PGK.V_PGK;
  N.V_PYK is V_PYK.V_PYK;
  pyruvate_i.V_PYK is V_PYK.V_PYK;
  pyruvate_i.pyruvate_i is V_pyruvate_transport.pyruvate_i;
  pyruvate_i.V_pyruvate_transport is V_pyruvate_transport.V_pyruvate_transport;
  P.V_HK is V_HK.V_HK;
  P.V_PFK is V_PFK.V_PFK;
  P.V_PGK is V_PGK.V_PGK;
  P.V_GK is V_GK.V_GK;
  P.V_PYK is V_PYK.V_PYK;
  P.V_ATP_utilisation is V_ATP_utilisation.V_ATP_utilisation;
  Glc_i.time is global_variables.time;
  Glc_6_P.time is global_variables.time;
  Fru_6_P.time is global_variables.time;
  Fru_1_6_BP.time is global_variables.time;
  DHAP.time is global_variables.time;
  Gly_3_P.time is global_variables.time;
  one_three_BPGA.time is global_variables.time;
  pyruvate_i.time is global_variables.time;
  NADH.time is global_variables.time;
  hexose_P.time is global_variables.time;
  triose_P.time is global_variables.time;
  N.time is global_variables.time;
  P.time is global_variables.time;
  V_PFK.Fru_6_P is Glc_6_P.Fru_6_P;
  Fru_6_P.Glc_6_P is V_HK.Glc_6_P;
  hexose_P.hexose_P is Glc_6_P.hexose_P;
  Glc_6_P.hexose_P is Fru_6_P.hexose_P;
  GA_3_P.Keq_TIM is DHAP.Keq_TIM;
  GA_3_P.DHAP is V_GDH.DHAP;
  N.N is three_PGA.N;
  three_PGA.three_PGA is two_PGA.three_PGA;
  three_PGA.Keq_PGM is two_PGA.Keq_PGM;
  two_PGA.two_PGA is PEP.two_PGA;
  three_PGA.Keq_ENO is PEP.Keq_ENO;
  triose_P.triose_P is DHAP.triose_P;
  Gly_3_P.V_GPO is V_GPO.V_GPO;
  V_GK.Gly_3_P is V_GPO.Gly_3_P;
  NAD.NADH is NADH.NADH;
  NAD.C7 is C7.C7;
  NADH.NADH is C7.NADH;
  NADH.V_GAPDH is V_GAPDH.V_GAPDH;
  C7.NADH is V_GAPDH.NADH;
  NADH.V_GDH is V_GDH.V_GDH;
  V_GAPDH.NADH is V_GDH.NADH;
  ATP.C6 is C6.C6;
  ATP.ATP is ADP.ATP;
  P.P is ADP.P;
  ADP.ATP is AMP.ATP;
  ADP.ADP is AMP.ADP;
  AMP.C6 is C6.C6;
  AMP.ATP is V_HK.ATP;
  V_HK.ATP is V_GK.ATP;
  V_GK.ATP is V_PYK.ATP;
  V_PYK.ATP is V_ALD.ATP;
  V_ALD.ATP is V_ATP_utilisation.ATP;
  AMP.ADP is V_ATP_utilisation.ADP;
  V_ATP_utilisation.ADP is V_HK.ADP;
  V_HK.ADP is V_ALD.ADP;
  AMP.AMP is V_ALD.AMP;
  V_ALD.ADP is V_PGK.ADP;
  V_PGK.ADP is V_GK.ADP;
  V_GK.ADP is V_PYK.ADP;
  glycerol.glycerol is V_GK.glycerol;
  V_ATP_utilisation.ATP is V_PGK.ATP;
  V_PGK.ATP is V_PFK.ATP;
  NAD.NAD is V_GAPDH.NAD;
  two_PGA.three_PGA is V_PGK.three_PGA;
  V_GAPDH.NAD is V_GDH.NAD;
end
