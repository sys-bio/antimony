//Created by libAntimony v1.4
model fenton_karma_2006_version03__environment(time_)
end

model fenton_karma_2006_version03__membrane(u, Cm, time_, J_fi, J_so, J_si)

  // Assignment Rules:
  Vm := V_0 + u * (V_fi - V_0);
  J_stim := piecewise( -(0.2 ) , ( time_ >= 100) && (time_ <= 101 ), 0 );

  // Rate Rules:
  u' = -((J_fi + J_so + J_si + J_stim));

  // Variable initializations:
  u = 0;
  Cm = 1;
  V_0 = -85;
  V_fi = 15;
end

model fenton_karma_2006_version03__p(p, u_c, u, time_)

  // Assignment Rules:
  p := piecewise( 0 , u < u_c , 1 );

  // Variable initializations:
  u_c = 0.13;
end

model fenton_karma_2006_version03__q(q, u, time_)

  // Assignment Rules:
  q := piecewise( 0 , u < u_v , 1 );

  // Variable initializations:
  u_v = 0.04;
end

model fenton_karma_2006_version03__fast_inward_current_v_gate(v, q, p, u, time_)

  // Assignment Rules:
  tau_v_minus := q * tau_v1_minus + (1 - q) * tau_v2_minus;

  // Rate Rules:
  v' = (1 - p) * (1 - v) / tau_v_minus - p * v / tau_v_plus;

  // Variable initializations:
  v = 1;
  tau_v1_minus = 1250;
  tau_v2_minus = 19.6;
  tau_v_plus = 3.33;
end

model fenton_karma_2006_version03__fast_inward_current(J_fi, Cm, p, q, u_c, time_, u, v)

  // Sub-modules, and any changes to those submodules:
  fast_inward_current_v_gate: fenton_karma_2006_version03__fast_inward_current_v_gate(v, q, p, u, time_);

  // Assignment Rules:
  J_fi := -(v) * p * (1 - u) * (u - u_c) / tau_d;
  tau_d := Cm / g_fi_max;

  // Variable initializations:
  g_fi_max = 4;
end

model fenton_karma_2006_version03__slow_outward_current(J_so, p, time_, u)

  // Assignment Rules:
  J_so := u * (1 - p) / tau_0 + p / tau_r;

  // Variable initializations:
  tau_0 = 12.5;
  tau_r = 33.33;
end

model fenton_karma_2006_version03__slow_inward_current_w_gate(w, p, u, time_)

  // Rate Rules:
  w' = (1 - p) * (1 - w) / tau_w_minus - p * w / tau_w_plus;

  // Variable initializations:
  w = 1;
  tau_w_minus = 41;
  tau_w_plus = 870;
end

model fenton_karma_2006_version03__slow_inward_current(J_si, p, time_, u, w)

  // Sub-modules, and any changes to those submodules:
  slow_inward_current_w_gate: fenton_karma_2006_version03__slow_inward_current_w_gate(w, p, u, time_);

  // Assignment Rules:
  J_si := -(w) * (1 + tanh(k * (u - u_csi))) / (2 * tau_si);

  // Variable initializations:
  tau_si = 29;
  u_csi = 0.85;
  k = 10;
end

model fenton_karma_2006_version03____main()

  // Sub-modules, and any changes to those submodules:
  environment: fenton_karma_2006_version03__environment(time_);
  membrane: fenton_karma_2006_version03__membrane(u, Cm, time_, J_fi, J_so, J_si);
  p: fenton_karma_2006_version03__p(p0, u_c, u, time_);
  q: fenton_karma_2006_version03__q(q0, u, time_);
  fast_inward_current: fenton_karma_2006_version03__fast_inward_current(J_fi, Cm, p0, q0, u_c, time_, u, v);
  slow_outward_current: fenton_karma_2006_version03__slow_outward_current(J_so, p0, time_, u);
  slow_inward_current: fenton_karma_2006_version03__slow_inward_current(J_si, p0, time_, u, w);
end
