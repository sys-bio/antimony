//Created by libAntimony v1.4
model devries_2000__environment(time_)
end

model devries_2000__membrane(V, tau, time_, i_K, i_K_ATP, i_Ca, i_s)

  // Rate Rules:
  V' = -(( i_Ca + i_K + i_K_ATP + i_s )) / tau;

  // Variable initializations:
  V = -64.0;
  tau = 20.0;
end

model devries_2000__calcium_current_m_gate(m_infinity, V)

  // Assignment Rules:
  m_infinity := 1.0 / ( 1.0 + exp(( V_m - V ) / theta_m ));

  // Variable initializations:
  V_m = -20.0;
  theta_m = 12.0;
end

model devries_2000__calcium_current(i_Ca, time_, V, m_infinity)

  // Sub-modules, and any changes to those submodules:
  calcium_current_m_gate: devries_2000__calcium_current_m_gate(m_infinity, V);

  // Assignment Rules:
  i_Ca := g_Ca * m_infinity * ( V - V_Ca );

  // Variable initializations:
  g_Ca = 3.6;
  V_Ca = 25.0;
end

model devries_2000__potassium_current_n_gate(n, V, tau, time_)

  // Assignment Rules:
  n_infinity := 1.0 / ( 1.0 + exp(( V_n - V ) / theta_n ));

  // Rate Rules:
  n' = lambda_ * ( n_infinity - n ) / tau;

  // Variable initializations:
  n = 0.01;
  V_n = -17.0;
  theta_n = 5.6;
  lambda_ = 0.9;
end

model devries_2000__potassium_current(i_K, V_K, time_, V, tau, n)

  // Sub-modules, and any changes to those submodules:
  potassium_current_n_gate: devries_2000__potassium_current_n_gate(n, V, tau, time_);

  // Assignment Rules:
  i_K := g_K * n * ( V - V_K );

  // Variable initializations:
  V_K = -75.0;
  g_K = 10.0;
end

model devries_2000__slow_current_s_gate(s, V, time_)

  // Assignment Rules:
  s_infinity := 1.0 / ( 1.0 + exp(( V_s - V ) / theta_s ));

  // Rate Rules:
  s' = ( s_infinity - s ) / tau_s;

  // Variable initializations:
  s = 0.01;
  V_s = -22.0;
  theta_s = 8.0;
  tau_s = 20000.0;
end

model devries_2000__slow_current(i_s, time_, V, V_K, s)

  // Sub-modules, and any changes to those submodules:
  slow_current_s_gate: devries_2000__slow_current_s_gate(s, V, time_);

  // Assignment Rules:
  i_s := g_s * s * ( V - V_K );

  // Variable initializations:
  g_s = 4.0;
end

model devries_2000__ATP_sensitive_potassium_current(i_K_ATP, time_, V, V_K)

  // Assignment Rules:
  i_K_ATP := g_K_ATP * p * ( V - V_K );

  // Variable initializations:
  g_K_ATP = 1.2;
  p = 0.5;
end

model devries_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: devries_2000__environment(time_);
  membrane: devries_2000__membrane(V, tau, time_, i_K, i_K_ATP, i_Ca, i_s);
  calcium_current: devries_2000__calcium_current(i_Ca, time_, V, m_infinity);
  potassium_current: devries_2000__potassium_current(i_K, V_K, time_, V, tau, n);
  slow_current: devries_2000__slow_current(i_s, time_, V, V_K, s);
  ATP_sensitive_potassium_current: devries_2000__ATP_sensitive_potassium_current(i_K_ATP, time_, V, V_K);
end
