//Created by libAntimony v1.4
model TempRLC__TempRLC(Pi_, Po, Qi, Qo, R, C, L, t, P0, Q0)

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;
  Qo' = (Pi_ - Po - R * Qo) / L;

  // Variable initializations:
  Pi_ = P0;
  Qo = Q0;
end

model TempR__TempR(Pi_, Po, Qi, Qo, R)

  // Assignment Rules:
  Pi_ := Po + R * Qi;
  Qo := Qi;
end

model TempRC__TempRC(Pi_, Po, Qi, Qo, R, C, t, P0)

  // Assignment Rules:
  Qo := (Pi_ - Po) / R;

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;

  // Variable initializations:
  Pi_ = P0;
end

model ParaSys__ParaSys(Rsas, Csas, Lsas, P0sas, Q0sas, Rsat, Csat, Lsat, P0sat, Q0sat, Rsar, Rscp, Rsvn, Csvn, P0svn)

  // Variable initializations:
  Rsas = 0.003;
  Csas = 0.08;
  Lsas = 0.000062;
  P0sas = 100.;
  Q0sas = 0.;
  Rsat = 0.05;
  Csat = 1.6;
  Lsat = 0.0017;
  P0sat = 100.;
  Q0sat = 0.;
  Rsar = 0.5;
  Rscp = 0.52;
  Rsvn = 0.075;
  Csvn = 20.5;
  P0svn = 0.;
end

model ModelSys__ModelSys(Pi_, Po, Qi, Qo, t)

  // Sub-modules, and any changes to those submodules:
  Sas: TempRLC__TempRLC(Pi_, Pi_0, Qi, Qi0, R, C, L, t, P0, Q0);
  Sat: TempRLC__TempRLC(Pi_0, Pi_1, Qi0, Qi1, R0, C0, L0, t, P00, Q00);
  Sar: TempR__TempR(Pi_1, Pi_2, Qi1, Qi2, R1);
  Scp: TempR__TempR(Pi_2, Pi_3, Qi2, Qi3, R2);
  Svn: TempRC__TempRC(Pi_3, Po, Qi3, Qo, R3, C1, t, P01);
  ParaSys: ParaSys__ParaSys(R, C, L, P0, Q0, R0, C0, L0, P00, Q00, R1, R2, R3, C1, P01);
end

model ModelSys____main()

  // Sub-modules, and any changes to those submodules:
  ModelSys: ModelSys__ModelSys(Pi_, Po, Qi, Qo, t);
end
