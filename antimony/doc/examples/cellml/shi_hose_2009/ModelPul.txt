//Created by libAntimony v1.4
model TempRLC__TempRLC(Pi_, Po, Qi, Qo, R, C, L, t, P0, Q0)

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;
  Qo' = (Pi_ - Po - R * Qo) / L;

  // Variable initializations:
  Pi_ = P0;
  Qo = Q0;
end

model TempR__TempR(Pi_, Po, Qi, Qo, R)

  // Assignment Rules:
  Pi_ := Po + R * Qi;
  Qo := Qi;
end

model TempRC__TempRC(Pi_, Po, Qi, Qo, R, C, t, P0)

  // Assignment Rules:
  Qo := (Pi_ - Po) / R;

  // Rate Rules:
  Pi_' = (Qi - Qo) / C;

  // Variable initializations:
  Pi_ = P0;
end

model ParaPul__ParaPul(Rpas, Cpas, Lpas, P0pas, Q0pas, Rpat, Cpat, Lpat, P0pat, Q0pat, Rpar, Rpcp, Rpvn, Cpvn, P0pvn)

  // Variable initializations:
  Rpas = 0.002;
  Cpas = 0.18;
  Lpas = 0.000052;
  P0pas = 30.;
  Q0pas = 0.;
  Rpat = 0.01;
  Cpat = 3.8;
  Lpat = 0.0017;
  P0pat = 30.;
  Q0pat = 0.;
  Rpar = 0.05;
  Rpcp = 0.25;
  Rpvn = 0.0006;
  Cpvn = 20.5;
  P0pvn = 0.;
end

model ModelPul__ModelPul(Pi_, Po, Qi, Qo, t)

  // Sub-modules, and any changes to those submodules:
  Pas: TempRLC__TempRLC(Pi_, Pi_0, Qi, Qi0, R, C, L, t, P0, Q0);
  Pat: TempRLC__TempRLC(Pi_0, Pi_1, Qi0, Qi1, R0, C0, L0, t, P00, Q00);
  Par: TempR__TempR(Pi_1, Pi_2, Qi1, Qi2, R1);
  Pcp: TempR__TempR(Pi_2, Pi_3, Qi2, Qi3, R2);
  Pvn: TempRC__TempRC(Pi_3, Po, Qi3, Qo, R3, C1, t, P01);
  ParaPul: ParaPul__ParaPul(R, C, L, P0, Q0, R0, C0, L0, P00, Q00, R1, R2, R3, C1, P01);
end

model ModelPul____main()

  // Sub-modules, and any changes to those submodules:
  ModelPul: ModelPul__ModelPul(Pi_, Po, Qi, Qo, t);
end
