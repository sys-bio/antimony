//Created by libAntimony v1.3
model magnus_keizer_1997_version01__environment(time_)
end

model magnus_keizer_1997_version01__membrane(V, V_B, R, T, F, delta_pH, proton_motive_force, g_H, JH_res, JH_leak, JH_F1, J_ant, J_uni, time_)

  // Assignment Rules:
  delta_pH := pH_i - pH_m;
  proton_motive_force := V - 2.303 * R * T / F * delta_pH;

  // Rate Rules:
  V' = -1.0 / Cmito * ( JH_F1 + J_ant + JH_leak + J_uni * 2.0 - JH_res );

  // Variable initializations:
  V_B = 50.0;
  R = 8314.0;
  T = 310.0;
  F = 96845.0;
  g_H = 0.2;
  Cmito = 0.00145;
end

model magnus_keizer_1997_version01__proton_pump(JH_res, delta_pH, R, F, T, V, V_B, time_)

  // Assignment Rules:
  JH_res := 360.0 * rho_res * (( ra * power( 10.0 , 6.0 * delta_pH ) * exp( F * A_res / ( R * T )) + rb * power( 10.0 , 6.0 * delta_pH ) - ( ra + rb ) * exp( g * 6.0 * F * V / ( R * T ))) / (( 1.0 + r1 * exp( F * A_res / ( R * T ))) * exp( 6.0 * F * V_B / ( R * T )) + ( r2 + r3 * exp( F * A_res / ( R * T ))) * exp( g * 6.0 * F * V / ( R * T ))));
  Jo := 30.0 * rho_res * ((( ra * power( 10.0 , 6.0 * delta_pH ) + rc1 * exp( 6.0 * F * V_B / ( R * T ))) * exp( F * A_res / ( R * T )) - ra * exp( g * 6.0 * F * V / ( R * T )) + rc2 * exp( F * A_res / ( R * T )) * exp( g * 6.0 * F * V / ( R * T ))) / (( 1.0 + r1 * exp( F * A_res / ( R * T ))) * exp( 6.0 * F * V_B / ( R * T )) + ( r2 + r3 * exp( F * A_res / ( R * T ))) * exp( g * 6.0 * F * V / ( R * T ))));
  A_res := R * T / F * ln( K_res * root( NADH_m ) / root( NAD_m ));
  total_NAD_m := NADH_m + NAD_m;

  // Variable initializations:
  K_res = 135000000000000000.0;
  rho_res = 0.4;
  r1 = 0.000000000000000002077;
  r2 = 0.000000001728;
  r3 = 0.00000000000000000000000001059;
  ra = 0.0000000006394;
  rb = 0.0000000000001762;
  rc1 = 0.0000000000000000002656;
  rc2 = 0.000000000000000000000000008632;
  g = 0.85;
end

model magnus_keizer_1997_version01__proton_leak(JH_leak, g_H, proton_motive_force, time_)

  // Assignment Rules:
  JH_leak := g_H * proton_motive_force;
end

model magnus_keizer_1997_version01__F0_F1_ATPase(JH_F1, Jp_F1, ADP_m, delta_pH, R, F, T, V, V_B, time_)

  // Assignment Rules:
  JH_F1 := -180.0 * rho_F1 * (( pa * power( 10.0 , 3.0 * delta_pH ) * exp( F * A_F1 / ( R * T )) + pb * power( 10.0 , 3.0 * delta_pH ) - ( pa + pb ) * exp( 3.0 * F * V / ( R * T ))) / (( 1.0 + p1 * exp( F * A_F1 / ( R * T ))) * exp( 3.0 * F * V_B / ( R * T )) + ( p2 + p3 * exp( F * A_F1 / ( R * T ))) * exp( 3.0 * F * V / ( R * T ))));
  Jp_F1 := -60.0 * rho_F1 * ((( pa * power( 10.0 , 3.0 * delta_pH ) + pc1 * exp( 3.0 * F * V_B / ( R * T ))) * exp( F * A_F1 / ( R * T )) - pa * exp( 3.0 * F * V / ( R * T )) + pc2 * exp( F * A_F1 / ( R * T )) * exp( 3.0 * F * V / ( R * T ))) / (( 1.0 + p1 * exp( F * A_F1 / ( R * T ))) * exp( 3.0 * F * V_B / ( R * T )) + ( p2 + p3 * exp( F * A_F1 / ( R * T ))) * exp( 3.0 * F * V / ( R * T ))));
  A_F1 := R * T / F * ln( K_F1 * ATP_m / ( ADP_m_free * Pi_m ));
  total_mitochondrial_adenosine_phosphate := ATP_m + ADP_m;
  ADP_m_free := 0.8 * ADP_m;

  // Variable initializations:
  rho_F1 = 0.7;
  K_F1 = 1710000.0;
  Pi_m = 20.0;
  p1 = 0.00000001346;
  p2 = 0.0000007739;
  p3 = 0.00000000000000665;
  pa = 0.00001656;
  pb = 0.0000003373;
  pc1 = 0.00000000000009651;
  pc2 = 0.0000000000000000004845;
end

model magnus_keizer_1997_version01__ATP_ADP_exchange(J_ant, ADP_m, Jp_F1, R, F, T, V, time_)

  // Assignment Rules:
  J_ant := Jmax_ant * (( 1.0 - ATP4_i * ADP3_m / ( ADP3_i * ATP4_m ) * exp(-( F ) * V / ( R * T ))) / (( 1.0 + ATP4_i / ADP3_i * exp(-( f ) * F * V / ( R * T ))) * ( 1.0 + ADP3_m / ATP4_m )));
  ATP4_i := 0.05 * ATP_i;
  ATP4_m := 0.05 * ATP_m;
  ADP3_i := 0.45 * 1.0 * ADP_i;
  ADP3_m := 0.45 * 0.8 * ADP_m;

  // Rate Rules:
  ADP_m' = J_ant - Jp_F1;

  // Variable initializations:
  Jmax_ant = 1000.0;
  f = 0.5;
end

model magnus_keizer_1997_version01__Ca_uniporter(J_uni, V_offset, R, F, T, V, time_)

  // Assignment Rules:
  J_uni := Jmax_uni * ( Ca_i / K_trans * power( 1.0 + Ca_i / K_trans , 3.0 ) / (power( 1.0 + Ca_i / K_trans , 4.0 ) + L / power( 1.0 + Ca_i / K_act , na ))) * ( 2.0 * F * ( V - V_offset ) / ( R * T ) / ( 1.0 - exp( -2.0 * F * ( V - V_offset ) / ( R * T ))));

  // Variable initializations:
  V_offset = 91.0;
  Jmax_uni = 300.0;
  K_trans = 19.0;
  K_act = 0.38;
  L = 110.0;
  na = 2.8;
end

model magnus_keizer_1997_version01__Na_Ca_exchanger(J_uni, V_offset, R, F, T, V, time_)

  // Assignment Rules:
  J_Na_Ca := Jmax_Na_Ca * (exp( b * F * ( V - V_offset ) / ( R * T )) / (power( 1.0 + K_Na / Na_i , n ) * ( 1.0 + K_Ca / Ca_m )));

  // Rate Rules:
  Ca_m' = fm * ( J_uni - J_Na_Ca );

  // Variable initializations:
  Jmax_Na_Ca = 25.0;
  Na_i = 30.0;
  K_Na = 9.4;
  K_Ca = 0.003;
  b = 0.0;
  n = 2.0;
  fm = 0.0003;
end

model magnus_keizer_1997_version01____main()

  // Sub-modules, and any changes to those submodules:
  environment: magnus_keizer_1997_version01__environment(time_);
  membrane: magnus_keizer_1997_version01__membrane(V, V_B, R, T, F, delta_pH, proton_motive_force, g_H, JH_res, JH_leak, JH_F1, J_ant, J_uni, time_);
  proton_pump: magnus_keizer_1997_version01__proton_pump(JH_res, delta_pH, R, F, T, V, V_B, time_);
  proton_leak: magnus_keizer_1997_version01__proton_leak(JH_leak, g_H, proton_motive_force, time_);
  F0_F1_ATPase: magnus_keizer_1997_version01__F0_F1_ATPase(JH_F1, Jp_F1, ADP_m, delta_pH, R, F, T, V, V_B, time_);
  ATP_ADP_exchange: magnus_keizer_1997_version01__ATP_ADP_exchange(J_ant, ADP_m, Jp_F1, R, F, T, V, time_);
  Ca_uniporter: magnus_keizer_1997_version01__Ca_uniporter(J_uni, V_offset, R, F, T, V, time_);
  Na_Ca_exchanger: magnus_keizer_1997_version01__Na_Ca_exchanger(J_uni, V_offset, R, F, T, V, time_);
end
