//Created by libAntimony v1.3
model shorten_wall_2000_version01__environment(time_, V_cell, Ca_e, K_e, K_i, V_tau, k_tau)

  // Variable initializations:
  V_cell = 1.77;
  Ca_e = 20.0;
  K_e = 5.6;
  K_i = 140.0;
  V_tau = -60.0;
  k_tau = 22.0;
end

model shorten_wall_2000_version01__membrane(V, R, T, F, time_, i_Ca_L, i_Ca_T, i_K_DR, i_K_Ca, i_leak)

  // Rate Rules:
  V' = -(( i_Ca_L + i_Ca_T + i_K_DR + i_K_Ca + i_leak )) / Cm;

  // Variable initializations:
  R = 8.314;
  T = 310.0;
  F = 96845.0;
  Cm = 7.0;
end

model shorten_wall_2000_version01__L_type_calcium_current_m_gate(m_L, V, V_tau, k_tau, time_)

  // Assignment Rules:
  m_L_infinity := 1.0 / ( 1.0 + exp(( V_m_L - V ) / k_m_L ));
  tau_m_L := tau_m_L_max / (exp(( V - V_tau ) / k_tau ) + 2.0 * exp( 2.0 * ( V_tau - V ) / k_tau ));

  // Rate Rules:
  m_L' = ( m_L_infinity - m_L ) / tau_m_L;

  // Variable initializations:
  tau_m_L_max = 27.0;
  V_m_L = -18.0;
  k_m_L = 12.0;
end

model shorten_wall_2000_version01__L_type_calcium_current(i_Ca_L, V_Ca, time_, V, V_tau, k_tau, R, T, F, Ca_e, Ca_i, m_L)

  // Sub-modules, and any changes to those submodules:
  L_type_calcium_current_m_gate: shorten_wall_2000_version01__L_type_calcium_current_m_gate(m_L, V, V_tau, k_tau, time_);

  // Assignment Rules:
  i_Ca_L := g_Ca_L * power( m_L , 2.0 ) * V_Ca;
  V_Ca := V * (( Ca_i - Ca_e ) * exp(-( 2.0 ) * ( F * V / ( R * T ))) / ( 1.0 - exp(-( 2.0 ) * ( F * V / ( R * T )))));

  // Variable initializations:
  g_Ca_L = 9.0;
end

model shorten_wall_2000_version01__T_type_calcium_current_m_gate(m_T, V, V_tau, k_tau, time_)

  // Assignment Rules:
  m_T_infinity := 1.0 / ( 1.0 + exp(( V_m_T - V ) / k_m_T ));
  tau_m_T := tau_m_T_max / (exp(( V - V_tau ) / k_tau ) + 2.0 * exp( 2.0 * ( V_tau - V ) / k_tau ));

  // Rate Rules:
  m_T' = ( m_T_infinity - m_T ) / tau_m_T;

  // Variable initializations:
  tau_m_T_max = 10.0;
  V_m_T = -30.0;
  k_m_T = 10.5;
end

model shorten_wall_2000_version01__T_type_calcium_current_h_gate(h_T, V, time_)

  // Assignment Rules:
  h_T_infinity := 1.0 / ( 1.0 + exp(( V - V_h_T ) / k_h_T ));

  // Rate Rules:
  h_T' = ( h_T_infinity - h_T ) / tau_h_T;

  // Variable initializations:
  tau_h_T = 15.0;
  V_h_T = -57.0;
  k_h_T = 5.0;
end

model shorten_wall_2000_version01__T_type_calcium_current(i_Ca_T, time_, V, V_tau, k_tau, V_Ca, m_T, h_T)

  // Sub-modules, and any changes to those submodules:
  T_type_calcium_current_m_gate: shorten_wall_2000_version01__T_type_calcium_current_m_gate(m_T, V, V_tau, k_tau, time_);
  T_type_calcium_current_h_gate: shorten_wall_2000_version01__T_type_calcium_current_h_gate(h_T, V, time_);

  // Assignment Rules:
  i_Ca_T := g_Ca_T * power( m_T , 2.0 ) * h_T * V_Ca;

  // Variable initializations:
  g_Ca_T = 10.0;
end

model shorten_wall_2000_version01__voltage_sensitive_K_current_n_gate(n, V, time_)

  // Assignment Rules:
  n_infinity := 1.0 / ( 1.0 + exp(( V_n - V ) / k_n ));

  // Rate Rules:
  n' = ( n_infinity - n ) / tau_n;

  // Variable initializations:
  tau_n = 20.0;
  V_n = -20.0;
  k_n = 4.5;
end

model shorten_wall_2000_version01__voltage_sensitive_K_current(i_K_DR, V_K, time_, V, R, T, F, K_e, K_i, n)

  // Sub-modules, and any changes to those submodules:
  voltage_sensitive_K_current_n_gate: shorten_wall_2000_version01__voltage_sensitive_K_current_n_gate(n, V, time_);

  // Assignment Rules:
  i_K_DR := g_K_DR * n * ( V - V_K );
  V_K := V * (( K_i - K_e ) * exp(-( 1.0 ) * ( F * V / ( R * T ))) / ( 1.0 - exp(-( 1.0 ) * ( F * V / ( R * T )))));

  // Variable initializations:
  g_K_DR = 0.1;
end

model shorten_wall_2000_version01__Ca_activated_K_current(i_K_Ca, time_, V, V_K, Ca_i)

  // Assignment Rules:
  i_K_Ca := g_K_Ca * (power( Ca_i , 4.0 ) / (power( Ca_i , 4.0 ) + power( Kc , 4.0 ))) * V_K;

  // Variable initializations:
  g_K_Ca = 0.09;
  Kc = 0.4;
end

model shorten_wall_2000_version01__leak_current(i_leak, time_, V)

  // Assignment Rules:
  i_leak := g_L * ( V - V_L );

  // Variable initializations:
  g_L = 0.09;
  V_L = -67.0;
end

model shorten_wall_2000_version01__ER_calcium(Ca_er, J_rel, J_up, Ca_i, V_cell, time_)

  // Assignment Rules:
  J_rel := P * ( Ca_er - Ca_i );
  J_up := v_er * power( Ca_i , 2.0 ) / (power( Ca_i , 2.0 ) + power( K_er , 2.0 ));
  V_er := V_cell * 0.15;

  // Rate Rules:
  Ca_er' = -(( f_er / V_er )) * ( J_rel - J_up );

  // Variable initializations:
  K_er = 0.2;
  f_er = 0.0025;
  P = 0.0012;
  v_er = 0.05;
end

model shorten_wall_2000_version01__cytosolic_calcium(Ca_i, i_Ca_L, i_Ca_T, J_rel, J_up, V_cell, time_)

  // Assignment Rules:
  V_c := V_cell * 0.85;
  J_in := -( alpha ) * ( i_Ca_L + i_Ca_T );
  J_eff := v_p * power( Ca_i , 2.0 ) / (power( Ca_i , 2.0 ) + power( K_p , 2.0 ));

  // Rate Rules:
  Ca_i' = f_cyt / V_c * ( J_rel - J_up ) + f_cyt * beta + ( J_in - J_eff );

  // Variable initializations:
  K_p = 0.08;
  f_cyt = 0.01;
  v_p = 0.045;
  alpha = 0.0074;
  beta = 0.47;
end

model shorten_wall_2000_version01____main()

  // Sub-modules, and any changes to those submodules:
  environment: shorten_wall_2000_version01__environment(time_, V_cell, Ca_e, K_e, K_i, V_tau, k_tau);
  membrane: shorten_wall_2000_version01__membrane(V, R, T, F, time_, i_Ca_L, i_Ca_T, i_K_DR, i_K_Ca, i_leak);
  L_type_calcium_current: shorten_wall_2000_version01__L_type_calcium_current(i_Ca_L, V_Ca, time_, V, V_tau, k_tau, R, T, F, Ca_e, Ca_i, m_L);
  T_type_calcium_current: shorten_wall_2000_version01__T_type_calcium_current(i_Ca_T, time_, V, V_tau, k_tau, V_Ca, m_T, h_T);
  voltage_sensitive_K_current: shorten_wall_2000_version01__voltage_sensitive_K_current(i_K_DR, V_K, time_, V, R, T, F, K_e, K_i, n);
  Ca_activated_K_current: shorten_wall_2000_version01__Ca_activated_K_current(i_K_Ca, time_, V, V_K, Ca_i);
  leak_current: shorten_wall_2000_version01__leak_current(i_leak, time_, V);
  ER_calcium: shorten_wall_2000_version01__ER_calcium(Ca_er, J_rel, J_up, Ca_i, V_cell, time_);
  cytosolic_calcium: shorten_wall_2000_version01__cytosolic_calcium(Ca_i, i_Ca_L, i_Ca_T, J_rel, J_up, V_cell, time_);
end
