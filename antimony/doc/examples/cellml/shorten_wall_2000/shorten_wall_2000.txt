//Created by libAntimony v1.4
model shorten_2000__environment(time_, V_cell, Ca_e, K_e, K_i, V_tau, k_tau)

  // Variable initializations:
  V_cell = 1.77;
  Ca_e = 20;
  K_e = 5.6;
  K_i = 140;
  V_tau = -60;
  k_tau = 22;
end

model shorten_2000__membrane(V, R, T, F, time_, i_Ca_L, i_Ca_T, i_K_DR, i_K_Ca, i_leak)

  // Rate Rules:
  V' = -((i_Ca_L + i_Ca_T + i_K_DR + i_K_Ca + i_leak)) / Cm;

  // Variable initializations:
  V = -70;
  R = 8314;
  T = 310;
  F = 96845;
  Cm = 7;
end

model shorten_2000__L_type_calcium_current_m_gate(m_L, V, V_tau, k_tau, time_)

  // Assignment Rules:
  m_L_infinity := 1 / (1 + exp((V_m_L - V) / k_m_L));
  tau_m_L := tau_m_L_max / (exp((V - V_tau) / k_tau) + 2 * exp(2 * (V_tau - V) / k_tau));

  // Rate Rules:
  m_L' = (m_L_infinity - m_L) / tau_m_L;

  // Variable initializations:
  m_L = 0;
  tau_m_L_max = 27;
  V_m_L = -18;
  k_m_L = 12;
end

model shorten_2000__L_type_calcium_current(i_Ca_L, phi_Ca, time_, V, V_tau, k_tau, R, T, F, Ca_e, Ca_i, m_L)

  // Sub-modules, and any changes to those submodules:
  L_type_calcium_current_m_gate: shorten_2000__L_type_calcium_current_m_gate(m_L, V, V_tau, k_tau, time_);

  // Assignment Rules:
  i_Ca_L := g_Ca_L * power(m_L, 2 ) * phi_Ca;
  phi_Ca := V * (Ca_i - Ca_e) * exp(-(2 ) * F * V / (R * T)) / (1 - exp(-(2 ) * F * V / (R * T)));

  // Variable initializations:
  g_Ca_L = 9;
end

model shorten_2000__T_type_calcium_current_m_gate(m_T, V, V_tau, k_tau, time_)

  // Assignment Rules:
  m_T_infinity := 1 / (1 + exp((V_m_T - V) / k_m_T));
  tau_m_T := tau_m_T_max / (exp((V - V_tau) / k_tau) + 2 * exp(2 * (V_tau - V) / k_tau));

  // Rate Rules:
  m_T' = (m_T_infinity - m_T) / tau_m_T;

  // Variable initializations:
  m_T = 0;
  tau_m_T_max = 10;
  V_m_T = -30;
  k_m_T = 10.5;
end

model shorten_2000__T_type_calcium_current_h_gate(h_T, V, time_)

  // Assignment Rules:
  h_T_infinity := 1 / (1 + exp((V - V_h_T) / k_h_T));

  // Rate Rules:
  h_T' = (h_T_infinity - h_T) / tau_h_T;

  // Variable initializations:
  h_T = 0;
  tau_h_T = 15;
  V_h_T = -57;
  k_h_T = 5;
end

model shorten_2000__T_type_calcium_current(i_Ca_T, time_, V, V_tau, k_tau, phi_Ca, m_T, h_T)

  // Sub-modules, and any changes to those submodules:
  T_type_calcium_current_m_gate: shorten_2000__T_type_calcium_current_m_gate(m_T, V, V_tau, k_tau, time_);
  T_type_calcium_current_h_gate: shorten_2000__T_type_calcium_current_h_gate(h_T, V, time_);

  // Assignment Rules:
  i_Ca_T := g_Ca_T * power(m_T, 2 ) * h_T * phi_Ca;

  // Variable initializations:
  g_Ca_T = 10;
end

model shorten_2000__voltage_sensitive_K_current_n_gate(n, V, time_)

  // Assignment Rules:
  n_infinity := 1 / (1 + exp((V_n - V) / k_n));

  // Rate Rules:
  n' = (n_infinity - n) / tau_n;

  // Variable initializations:
  n = 0;
  tau_n = 20;
  V_n = -20;
  k_n = 4.5;
end

model shorten_2000__voltage_sensitive_K_current(i_K_DR, phi_K, time_, V, R, T, F, K_e, K_i, n)

  // Sub-modules, and any changes to those submodules:
  voltage_sensitive_K_current_n_gate: shorten_2000__voltage_sensitive_K_current_n_gate(n, V, time_);

  // Assignment Rules:
  i_K_DR := g_K_DR * n * phi_K;
  phi_K := V * (K_i - K_e) * exp(-(1 ) * F * V / (R * T)) / (1 - exp(-(1 ) * F * V / (R * T)));

  // Variable initializations:
  g_K_DR = 0.1;
end

model shorten_2000__Ca_activated_K_current(i_K_Ca, time_, V, phi_K, Ca_i)

  // Assignment Rules:
  i_K_Ca := g_K_Ca * power(Ca_i, 4 ) / (power(Ca_i, 4 ) + power(Kc, 4 )) * phi_K;

  // Variable initializations:
  g_K_Ca = 0.09;
  Kc = 0.0004;
end

model shorten_2000__leak_current(i_leak, time_, V)

  // Assignment Rules:
  i_leak := g_L * (V - V_L);

  // Variable initializations:
  g_L = 0.3;
  V_L = -67;
end

model shorten_2000__ER_calcium(Ca_er, J_rel, J_up, Ca_i, V_cell, time_)

  // Assignment Rules:
  J_rel := P * (Ca_er - Ca_i);
  J_up := v_er * power(Ca_i, 2 ) / (power(Ca_i, 2 ) + power(K_er, 2 ));
  V_er := V_cell * 0.15;

  // Rate Rules:
  Ca_er' = -(f_er) / V_er * (J_rel - J_up);

  // Variable initializations:
  Ca_er = 0.0172;
  K_er = 0.0002;
  f_er = 0.0025;
  P = 0.0012;
  v_er = 0.00005;
end

model shorten_2000__cytosolic_calcium(Ca_i, i_Ca_L, i_Ca_T, J_rel, J_up, V_cell, time_)

  // Assignment Rules:
  V_c := V_cell * 0.85;
  J_in := -(alpha) * (i_Ca_L + i_Ca_T);
  J_eff := v_p * power(Ca_i, 2 ) / (power(Ca_i, 2 ) + power(K_p, 2 ));

  // Rate Rules:
  Ca_i' = f_cyt / V_c * (J_rel - J_up) + f_cyt * beta * (J_in - J_eff);

  // Variable initializations:
  Ca_i = 0.00026;
  K_p = 0.00008;
  f_cyt = 0.01;
  v_p = 0.000045;
  alpha = 0.0000074;
  beta = 0.47;
end

model shorten_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: shorten_2000__environment(time_, V_cell, Ca_e, K_e, K_i, V_tau, k_tau);
  membrane: shorten_2000__membrane(V, R, T, F, time_, i_Ca_L, i_Ca_T, i_K_DR, i_K_Ca, i_leak);
  L_type_calcium_current: shorten_2000__L_type_calcium_current(i_Ca_L, phi_Ca, time_, V, V_tau, k_tau, R, T, F, Ca_e, Ca_i, m_L);
  T_type_calcium_current: shorten_2000__T_type_calcium_current(i_Ca_T, time_, V, V_tau, k_tau, phi_Ca, m_T, h_T);
  voltage_sensitive_K_current: shorten_2000__voltage_sensitive_K_current(i_K_DR, phi_K, time_, V, R, T, F, K_e, K_i, n);
  Ca_activated_K_current: shorten_2000__Ca_activated_K_current(i_K_Ca, time_, V, phi_K, Ca_i);
  leak_current: shorten_2000__leak_current(i_leak, time_, V);
  ER_calcium: shorten_2000__ER_calcium(Ca_er, J_rel, J_up, Ca_i, V_cell, time_);
  cytosolic_calcium: shorten_2000__cytosolic_calcium(Ca_i, i_Ca_L, i_Ca_T, J_rel, J_up, V_cell, time_);
end
