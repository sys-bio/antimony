//Created by libAntimony v1.3
model schlosser_model_2000__environment(time_)
end

model schlosser_model_2000__RP_LH(rel_LH_E2_P4_RP_LH, E2, E2_dE, P4, P4_dP, time_)

  // Assignment Rules:
  rel_LH_E2_P4_RP_LH := kLH_rel * ( 1.0 + CLH_P * P4 ) * RP_LH / ( 1.0 + CLH_E * E2 );
  syn_LH_E2_P4 := ( V0_LH + V1_LH * power( E2_dE , h ) / (power( Km_LH , h ) + power( E2_dE , h ))) / ( 1.0 + P4_dP / Ki_LHP );

  // Rate Rules:
  RP_LH' = syn_LH_E2_P4 - rel_LH_E2_P4_RP_LH;

  // Variable initializations:
  RP_LH = 467.0;
  V0_LH = 1400.0;
  V1_LH = 95900.0;
  h = 8.0;
  Km_LH = 360.0;
  Ki_LHP = 26.0;
  kLH_rel = 3.0;
  CLH_P = 0.024;
  CLH_E = 0.008;
end

model schlosser_model_2000__LH(rel_LH_E2_P4_RP_LH, time_)

  // Assignment Rules:
  clear_LH := kLH_cl * LH;

  // Rate Rules:
  LH' = rel_LH_E2_P4_RP_LH / v_dis - clear_LH;

  // Variable initializations:
  LH = 40.0;
  v_dis = 2.5;
  kLH_cl = 14.0;
end

model schlosser_model_2000__RP_FSH(rel_FSH_E2_P4_RP_FSH, Ih_dIh, E2, P4, time_)

  // Assignment Rules:
  rel_FSH_E2_P4_RP_FSH := kFSH_rel * ( 1.0 + CFSH_P * P4 ) * RP_FSH / ( 1.0 + CFSH_E * power( E2 , 2.0 ));
  syn_FSH_Ih := V_FSH / ( 1.0 + Ih_dIh / Ki_FSH_Ih );

  // Rate Rules:
  RP_FSH' = syn_FSH_Ih - rel_FSH_E2_P4_RP_FSH;

  // Variable initializations:
  RP_FSH = 0.0;
  V_FSH = 4400.0;
  Ki_FSH_Ih = 1176.5;
  kFSH_rel = 45.0;
  CFSH_P = 3.0;
  CFSH_E = 0.005;
end

model schlosser_model_2000__FSH(rel_FSH_E2_P4_RP_FSH, time_)

  // Assignment Rules:
  clear_FSH := kFSH_cl * FSH;

  // Rate Rules:
  FSH' = rel_FSH_E2_P4_RP_FSH / v_dis - clear_FSH;

  // Variable initializations:
  FSH = 150.0;
  v_dis = 2.5;
  kFSH_cl = 8.21;
end

model schlosser_model_2000__E2(E2, time_)

  // Assignment Rules:
  E2 := 300.0 - 240.0 * power( time_ + 1.0 , 2.0 ) / ( 3.0 + power( time_ + 1.0 , 2.0 )) + 90.0 * exp(-((power( time_ - 8.0 , 2.0 ) / 10.0 )));
end

model schlosser_model_2000__E2_dE(E2_dE, time_)

  // Assignment Rules:
  E2_dE := 300.0 - 240.0 * power( time_ + 1.0 - dE , 2.0 ) / ( 3.0 + power( time_ + 1.0 - dE , 2.0 )) + 90.0 * exp(-((power( time_ - ( dE + 8.0 ), 2.0 ) / 10.0 )));

  // Variable initializations:
  dE = 0.42;
end

model schlosser_model_2000__P4(P4, time_)

  // Assignment Rules:
  P4 := 52.0 * exp(-((power( time_ - 7.0 , 2.0 ) / 18.0 )));
end

model schlosser_model_2000__P4_dP(P4_dP, time_)

  // Assignment Rules:
  P4_dP := 52.0 * exp(-((power( time_ - ( dP + 7.0 ), 2.0 ) / 18.0 )));

  // Variable initializations:
  dP = 2.9;
end

model schlosser_model_2000__Ih(Ih, time_)

  // Assignment Rules:
  Ih := 300.0 + 1330.0 * exp(-((power( time_ - 7.0 , 2.0 ) / 19.0 )));
end

model schlosser_model_2000__Ih_dIh(Ih_dIh, time_)

  // Assignment Rules:
  Ih_dIh := 300.0 + 1330.0 * exp(-((power( time_ - ( 7.0 + dIh ), 2.0 ) / 19.0 )));

  // Variable initializations:
  dIh = 2.0;
end

model schlosser_model_2000____main()

  // Sub-modules, and any changes to those submodules:
  environment: schlosser_model_2000__environment(time_);
  RP_LH: schlosser_model_2000__RP_LH(rel_LH_E2_P4_RP_LH, E20, E2_dE0, P40, P4_dP0, time_);
  LH: schlosser_model_2000__LH(rel_LH_E2_P4_RP_LH, time_);
  RP_FSH: schlosser_model_2000__RP_FSH(rel_FSH_E2_P4_RP_FSH, Ih_dIh0, E20, P40, time_);
  FSH: schlosser_model_2000__FSH(rel_FSH_E2_P4_RP_FSH, time_);
  E2: schlosser_model_2000__E2(E20, time_);
  E2_dE: schlosser_model_2000__E2_dE(E2_dE0, time_);
  P4: schlosser_model_2000__P4(P40, time_);
  P4_dP: schlosser_model_2000__P4_dP(P4_dP0, time_);
  Ih: schlosser_model_2000__Ih(Ih0, time_);
  Ih_dIh: schlosser_model_2000__Ih_dIh(Ih_dIh0, time_);
end
