//Created by libAntimony v1.4

//Warnings from automatic translation:
//    Unable to translate an assignment to "del(L)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(R)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(C)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(CGrb)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(CGrbSos)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(Grb)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(Sos)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(GrbSos)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(pSos)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(pRaf)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(pMEK)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(ppMEK)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(pERK)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).
//    Unable to translate an assignment to "del(ppERK)/del(time)" in the Antimony format because Antimony does not handle partial differential equations (though neither do existing CellML tools).

model maly_wiley_lauffenburger_2004_version01__environment(time_)
end

model maly_wiley_lauffenburger_2004_version01__L(L, time_)

  // Variable initializations:
  L = 1.0E-9;
  DL = 1.0E-12;
end

model maly_wiley_lauffenburger_2004_version01__R(R, kon, koff, C, L, time_)

  // Variable initializations:
  R = 2.0E16;
end

model maly_wiley_lauffenburger_2004_version01__C(C, kon, koff, kagc, kdgc, kagsc, kdgsc, R, L, Grb, CGrb, GrbSos, CGrbSos, time_)

  // Variable initializations:
  C = 2.0E16;
end

model maly_wiley_lauffenburger_2004_version01__CGrb(CGrb, kagc, kdgc, kasc, kdsc, C, Grb, Sos, CGrbSos, time_)

  // Variable initializations:
  CGrb = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__CGrbSos(CGrbSos, kasc, kdsc, kagsc, kdgsc, C, GrbSos, Sos, CGrb, time_)

  // Variable initializations:
  CGrbSos = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__Grb(Grb, kasg, kdsg, D, GrbSos, Sos, time_)

  // Variable initializations:
  Grb = 5.0E-8;
end

model maly_wiley_lauffenburger_2004_version01__Sos(Sos, kasg, kdsg, kps, kdps, D, Grb, GrbSos, pSos, ppERK, time_)

  // Variable initializations:
  Sos = 5.0E-8;
end

model maly_wiley_lauffenburger_2004_version01__GrbSos(GrbSos, kasg, kdsg, D, Grb, Sos, time_)

  // Variable initializations:
  GrbSos = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__pSos(pSos, kps, kdps, D, ppERK, Sos, time_)

  // Variable initializations:
  pSos = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__pRaf(pRaf, D, time_)

  // Variable initializations:
  pRaf = 0.0;
  K2 = 8.0E-9;
  V2 = 7.5E-9;
end

model maly_wiley_lauffenburger_2004_version01__pMEK(pMEK, K4, k4, K5, V5, ppMEK, pRaf, D, time_)

  // Variable initializations:
  pMEK = 0.0;
  MEKtot = 3.0E-7;
  k3 = 0.75;
  K3 = 1.5E-8;
  K6 = 1.5E-8;
  V6 = 2.25E-8;
end

model maly_wiley_lauffenburger_2004_version01__ppMEK(ppMEK, K4, k4, K5, V5, pMEK, pRaf, D, time_)

  // Variable initializations:
  ppMEK = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__pERK(pERK, K8, k8, K9, V9, ppERK, ppMEK, D, time_)

  // Variable initializations:
  pERK = 0.0;
  ERKtot = 3.0E-7;
  k7 = 0.75;
  K7 = 1.5E-8;
  K10 = 1.5E-8;
  V10 = 1.0E-8;
end

model maly_wiley_lauffenburger_2004_version01__ppERK(ppERK, K8, k8, K9, V9, pERK, ppMEK, D, time_)

  // Variable initializations:
  ppERK = 0.0;
end

model maly_wiley_lauffenburger_2004_version01__parameters(kon, koff, kasg, kdsg, kagc, kdgc, kagsc, kdgsc, kasc, kdsc, kps, kdps, D, K4, k4, K5, V5, K8, k8, K9, V9)

  // Variable initializations:
  kon = 1.67E6;
  koff = 1.67E-3;
  kasg = 1.0E5;
  kdsg = 1.5E-3;
  kagc = 3.0E6;
  kdgc = 5.0E-2;
  kagsc = 4.5E6;
  kdgsc = 3.0E-2;
  kasc = 1.0E7;
  kdsc = 6.0E-2;
  kps = 1.0E9;
  kdps = 1.0E-3;
  D = 1.0E-12;
  K4 = 1.5E-8;
  k4 = 0.75;
  K5 = 1.5E-8;
  V5 = 2.25E-8;
  K8 = 1.5E-8;
  k8 = 0.75;
  K9 = 1.5E-8;
  V9 = 1.0E-8;
end

model maly_wiley_lauffenburger_2004_version01____main()

  // Sub-modules, and any changes to those submodules:
  environment: maly_wiley_lauffenburger_2004_version01__environment(time_);
  L: maly_wiley_lauffenburger_2004_version01__L(L0, time_);
  R: maly_wiley_lauffenburger_2004_version01__R(R0, kon, koff, C0, L0, time_);
  C: maly_wiley_lauffenburger_2004_version01__C(C0, kon, koff, kagc, kdgc, kagsc, kdgsc, R0, L0, Grb0, CGrb0, GrbSos0, CGrbSos0, time_);
  CGrb: maly_wiley_lauffenburger_2004_version01__CGrb(CGrb0, kagc, kdgc, kasc, kdsc, C0, Grb0, Sos0, CGrbSos0, time_);
  CGrbSos: maly_wiley_lauffenburger_2004_version01__CGrbSos(CGrbSos0, kasc, kdsc, kagsc, kdgsc, C0, GrbSos0, Sos0, CGrb0, time_);
  Grb: maly_wiley_lauffenburger_2004_version01__Grb(Grb0, kasg, kdsg, D, GrbSos0, Sos0, time_);
  Sos: maly_wiley_lauffenburger_2004_version01__Sos(Sos0, kasg, kdsg, kps, kdps, D, Grb0, GrbSos0, pSos0, ppERK0, time_);
  GrbSos: maly_wiley_lauffenburger_2004_version01__GrbSos(GrbSos0, kasg, kdsg, D, Grb0, Sos0, time_);
  pSos: maly_wiley_lauffenburger_2004_version01__pSos(pSos0, kps, kdps, D, ppERK0, Sos0, time_);
  pRaf: maly_wiley_lauffenburger_2004_version01__pRaf(pRaf0, D, time_);
  pMEK: maly_wiley_lauffenburger_2004_version01__pMEK(pMEK0, K4, k4, K5, V5, ppMEK0, pRaf0, D, time_);
  ppMEK: maly_wiley_lauffenburger_2004_version01__ppMEK(ppMEK0, K4, k4, K5, V5, pMEK0, pRaf0, D, time_);
  pERK: maly_wiley_lauffenburger_2004_version01__pERK(pERK0, K8, k8, K9, V9, ppERK0, ppMEK0, D, time_);
  ppERK: maly_wiley_lauffenburger_2004_version01__ppERK(ppERK0, K8, k8, K9, V9, pERK0, ppMEK0, D, time_);
  parameters: maly_wiley_lauffenburger_2004_version01__parameters(kon, koff, kasg, kdsg, kagc, kdgc, kagsc, kdgsc, kasc, kdsc, kps, kdps, D, K4, k4, K5, V5, K8, k8, K9, V9);
end
