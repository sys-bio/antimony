//Created by libAntimony v2.5
model *Schoeberl2002_EGF_MAPK()

  // Compartments and Species:
  compartment c1, c2, c3;
  species $x1 in c1, x2 in c1, x3 in c2, x4 in c2, x5 in c2, x6 in c2, x7 in c2;
  species x8 in c2, x9 in c2, x10 in c2, x11 in c2, x12 in c2, x13 in c3;
  species x14 in c2, x15 in c3, x16 in c2, x17 in c2, x18 in c2, x19 in c2;
  species x20 in c2, x21 in c2, x22 in c2, x23 in c2, x24 in c2, x25 in c2;
  species x26 in c2, x27 in c2, x28 in c2, x29 in c2, x30 in c2, x31 in c2;
  species x32 in c2, x33 in c2, x34 in c2, x35 in c2, x36 in c2, x37 in c2;
  species x38 in c2, x39 in c2, x40 in c2, x41 in c2, x42 in c2, x43 in c2;
  species x44 in c2, x45 in c2, x46 in c2, x47 in c2, x48 in c2, x49 in c2;
  species x50 in c2, x51 in c2, x52 in c2, x53 in c2, x54 in c2, x55 in c2;
  species x56 in c2, x57 in c2, x58 in c2, x59 in c2, x60 in c2, x61 in c2;
  species x62 in c2, x63 in c2, x64 in c2, x65 in c2, x66 in c2, x67 in c2;
  species x68 in c2, x69 in c2, x70 in c2, x71 in c2, x72 in c2, x73 in c2;
  species x74 in c2, x75 in c2, x76 in c2, x77 in c2, x78 in c2, x79 in c2;
  species x80 in c2, x81 in c2, x82 in c2, x83 in c2, x84 in c2, x85 in c2;
  species x86 in c2, x87 in c2, x88 in c2, x89 in c2, x90 in c2, x91 in c2;
  species x92 in c2, x93 in c2, x94 in c2, $Raf_act in c2, $Ras_GTP in c2;
  species $MEK_PP in c2, $ERK_PP in c2, $SHC_P_t in c2, $EGF_EGFR_act in c2;

  // Assignment Rules:
  Raf_act := x45 + x46 + x48 + x50 + x72 + x73 + x74 + x76;
  Ras_GTP := x42 + x28 + x70 + x69;
  MEK_PP := x51 + x77;
  ERK_PP := x59 + x83;
  SHC_P_t := x33 + x34 + x35 + x36 + x37 + x38 + x39 + x40 + x91 + x92 + x93 + x94 + x64 + x65 + x66 + x67 + x68;
  EGF_EGFR_act := x5 + x7 + x15 + x23 + x25 + x27 + x29 + x32 + x33 + x34 + x35 + x36 + x37 + x88 + x89 + x90 + x91 + x92 + x93 + x94 + x8 + x11 + x17 + x18 + x19 + x20 + x21 + x63 + x64 + x65 + x66 + x67 + x68;
  k5 := piecewise(1.55, C < 3100, 0.2, C > 100000, C * -1.350000e-005 + 1.55);
  C := RT / (kr1 / (k1 * x1) + 1);

  // Reactions:
  v1: $x1 + x2 -> x3; k1 * x1 * x2 - kr1 * x3;
  v2: 2x3 -> x4; k2 * x3 * x3 - kr2 * x4;
  v3: x4 -> x5; k3 * x4 - kr3 * x5;
  v4: x23 + x12 -> x7; k4 * x23 * x12 - kr4 * x7;
  v5: x7 -> x18 + x9; k5 * x7;
  v6: x2 -> x6; k6 * x2 - kr6 * x6;
  v7: x5 => x8; k7 * x5;
  v8: x5 + x14 -> x15; k8 * x5 * x14 - kr8 * x15;
  v9: x23 => x18; k7 * x23;
  v10: x6 + x16 -> x10; k10 * x6 * x16 - kr10 * x10;
  v11: 2x10 -> x11; k2 * x10 * x10 - kr2 * x11;
  v12: x11 -> x8; k3 * x11 - kr3 * x8;
  v13:  => x2; k13;
  v14: x8 + x14 -> x17; k14 * x8 * x14 - kr14 * x17;
  v15: x9 => x12; k15 * x9;
  v16: x22 + x15 -> x23; k16 * x22 * x15 - kr16 * x23;
  v17: x24 + x23 -> x25; k17 * x24 * x23 - kr17 * x25;
  v18: x26 + x25 -> x27; k18 * x26 * x25 - kr18 * x27;
  v19: x27 -> x28 + x25; k19 * x27 - kr19 * x28 * x25;
  v20: x25 + x43 -> x29; k20 * x25 * x43 - kr20 * x29;
  v21: x29 -> x25 + x26; k21 * x29 - kr21 * x25 * x26;
  v22: x31 + x15 -> x32; k22 * x31 * x15 - kr22 * x32;
  v23: x32 -> x33; k23 * x32 - kr23 * x33;
  v24: x22 + x33 -> x34; k24 * x22 * x33 - kr24 * x34;
  v25: x24 + x34 -> x35; k25 * x24 * x34 - kr25 * x35;
  v26: x26 + x35 -> x36; k18 * x26 * x35 - kr18 * x36;
  v27: x36 -> x35 + x28; k19 * x36 - kr19 * x35 * x28;
  v28: x28 + x41 -> x42; k28 * x28 * x41 - kr28 * x42;
  v29: x42 -> x43 + x45; k29 * x42 - kr29 * x43 * x45;
  v30: x35 + x43 -> x37; k20 * x35 * x43 - kr20 * x37;
  v31: x37 -> x35 + x26; k21 * x37 - kr21 * x35 * x26;
  v32: x35 -> x15 + x38; k32 * x35 - kr32 * x15 * x38;
  v33: x38 -> x40 + x30; k33 * x38 - kr33 * x40 * x30;
  v34: x25 -> x15 + x30; k34 * x25 - kr34 * x15 * x30;
  v35: x30 -> x24 + x22; k35 * x30 - kr35 * x24 * x22;
  v36: x40 => x31; (Vm36 * x40) / (Km36 + x40);
  v37: x33 -> x15 + x40; k37 * x33 - kr37 * x15 * x40;
  v38: x22 + x40 -> x39; k24 * x22 * x40 - kr24 * x39;
  v39: x34 -> x15 + x39; k37 * x34 - kr37 * x15 * x39;
  v40: x24 + x39 -> x38; k40 * x24 * x39 - kr40 * x38;
  v41: x30 + x33 -> x35; k41 * x30 * x33 - kr41 * x35;
  v42: x44 + x45 -> x46; k42 * x44 * x45 - kr42 * x46;
  v43: x46 -> x41 + x44; k43 * x46;
  v44: x47 + x45 -> x48; k44 * x47 * x45 - kr44 * x48;
  v45: x48 -> x49 + x45; k45 * x48;
  v46: x49 + x45 -> x50; k44 * x49 * x45 - kr44 * x50;
  v47: x50 -> x51 + x45; k47 * x50;
  v48: x51 + x53 -> x52; k48 * x51 * x53 - kr48 * x52;
  v49: x52 -> x49 + x53; k49 * x52;
  v50: x53 + x49 -> x54; k50 * x53 * x49 - kr50 * x54;
  v51: x54 -> x47 + x53; k49 * x54;
  v52: x55 + x51 -> x56; k52 * x55 * x51 - kr52 * x56;
  v53: x56 -> x51 + x57; k53 * x56;
  v54: x51 + x57 -> x58; k52 * x51 * x57 - kr52 * x58;
  v55: x58 -> x59 + x51; k55 * x58;
  v56: x59 + x60 -> x61; k56 * x59 * x60 - kr56 * x61;
  v57: x61 -> x57 + x60; k57 * x61;
  v58: x60 + x57 -> x62; k58 * x60 * x57 - kr58 * x62;
  v59: x62 -> x55 + x60; k59 * x62;
  v60: x6 => x86; k60 * x6;
  v61: x16 => x13; k61 * x16;
  v62: x8 => x87; k60 * x8;
  v63: x17 + x22 -> x18; k16 * x17 * x22 - kr16 * x18;
  v64: x24 + x18 -> x19; k17 * x24 * x18 - kr17 * x19;
  v65: x26 + x19 -> x20; k18 * x26 * x19 - kr18 * x20;
  v66: x20 -> x69 + x19; k19 * x20 - kr19 * x69 * x19;
  v67: x71 + x19 -> x21; k20 * x71 * x19 - kr20 * x21;
  v68: x21 -> x19 + x26; k21 * x21 - kr21 * x19 * x26;
  v69: x31 + x17 -> x63; k22 * x31 * x17 - kr22 * x63;
  v70: x63 -> x64; k23 * x63 - kr23 * x64;
  v71: x22 + x64 -> x65; k24 * x22 * x64 - kr24 * x65;
  v72: x24 + x65 -> x66; k25 * x24 * x65 - kr25 * x66;
  v73: x26 + x66 -> x67; k18 * x26 * x66 - kr18 * x67;
  v74: x67 -> x66 + x69; k19 * x67 - kr19 * x66 * x69;
  v75: x69 + x41 -> x70; k28 * x69 * x41 - kr28 * x70;
  v76: x70 -> x71 + x72; k29 * x70 - kr29 * x71 * x72;
  v77: x71 + x66 -> x68; k20 * x71 * x66 - kr20 * x68;
  v78: x68 -> x66 + x26; k21 * x68 - kr21 * x66 * x26;
  v79: x66 -> x17 + x38; k32 * x66 - kr32 * x17 * x38;
  v80: x19 -> x17 + x30; k34 * x19 - kr34 * x17 * x30;
  v81: x64 -> x17 + x40; k37 * x64 - kr37 * x17 * x40;
  v82: x65 -> x17 + x39; k37 * x65 - kr37 * x17 * x39;
  v83: x30 + x64 -> x66; k41 * x30 * x64 - kr41 * x66;
  v84: x44 + x72 -> x73; k42 * x44 * x72 - kr42 * x73;
  v85: x73 -> x41 + x44; k43 * x73;
  v86: x47 + x72 -> x74; k44 * x47 * x72 - kr44 * x74;
  v87: x74 -> x75 + x72; k45 * x74;
  v88: x72 + x75 -> x76; k44 * x72 * x75 - kr44 * x76;
  v89: x76 -> x72 + x77; k47 * x76;
  v90: x77 + x53 -> x78; k48 * x77 * x53 - kr48 * x78;
  v91: x78 -> x75 + x53; k49 * x78;
  v92: x53 + x75 -> x79; k50 * x53 * x75 - kr50 * x79;
  v93: x79 -> x47 + x53; k49 * x79;
  v94: x55 + x77 -> x80; k52 * x55 * x77 - kr52 * x80;
  v95: x80 -> x81 + x77; k53 * x80;
  v96: x77 + x81 -> x82; k52 * x77 * x81 - kr52 * x82;
  v97: x82 -> x83 + x77; k55 * x82;
  v98: x83 + x60 -> x84; k56 * x83 * x60 - kr56 * x84;
  v99: x84 -> x81 + x60; k57 * x84;
  v100: x60 + x81 -> x85; k58 * x60 * x81 - kr58 * x85;
  v101: x85 -> x55 + x60; k59 * x85;
  v102: x15 -> x17; k6 * x15 - kr6 * x17;
  v103: x32 -> x63; k6 * x32 - kr6 * x63;
  v104: x33 -> x64; k6 * x33 - kr6 * x64;
  v105: x25 -> x19; k6 * x25 - kr6 * x19;
  v106: x25 + x12 -> x88; k4 * x25 * x12 - kr4 * x88;
  v107: x88 -> x9 + x19; k5 * x88;
  v108: x27 -> x20; k6 * x27 - kr6 * x20;
  v109: x27 + x12 -> x89; k4 * x27 * x12 - kr4 * x89;
  v110: x89 -> x9 + x20; k5 * x89;
  v111: x29 -> x21; k6 * x29 - kr6 * x21;
  v112: x29 + x12 -> x90; k4 * x29 * x12 - kr4 * x90;
  v113: x90 -> x9 + x21; k5 * x90;
  v114: x34 -> x65; k6 * x34 - kr6 * x65;
  v115: x34 + x12 -> x91; k4 * x34 * x12 - kr4 * x91;
  v116: x91 -> x9 + x65; k5 * x91;
  v117: x35 -> x66; k6 * x35 - kr6 * x66;
  v118: x35 + x12 -> x92; k4 * x35 * x12 - kr4 * x92;
  v119: x92 -> x9 + x66; k5 * x92;
  v120: x36 -> x67; k6 * x36 - kr6 * x67;
  v121: x36 + x12 -> x93; k4 * x36 * x12 - kr4 * x93;
  v122: x93 -> x9 + x67; k5 * x93;
  v123: x37 -> x68; k6 * x37 - kr6 * x68;
  v124: x37 + x12 -> x94; k4 * x37 * x12 - kr4 * x94;
  v125: x94 -> x68 + x9; k5 * x94;

  // Species initializations:
  x1 = 4962;
  x2 = 50000;
  x3 = 0;
  x4 = 0;
  x5 = 0;
  x6 = 0;
  x7 = 0;
  x8 = 0;
  x9 = 0;
  x10 = 0;
  x11 = 0;
  x12 = 81000;
  x13 = 0;
  x14 = 12000;
  x15 = 0;
  x16 = 0;
  x17 = 0;
  x18 = 0;
  x19 = 0;
  x20 = 0;
  x21 = 0;
  x22 = 11000;
  x23 = 0;
  x24 = 26300;
  x25 = 0;
  x26 = 72000;
  x27 = 0;
  x28 = 0;
  x29 = 0;
  x30 = 40000;
  x31 = 101000;
  x32 = 0;
  x33 = 0;
  x34 = 0;
  x35 = 0;
  x36 = 0;
  x37 = 0;
  x38 = 0;
  x39 = 0;
  x40 = 0;
  x41 = 40000;
  x42 = 0;
  x43 = 0;
  x44 = 40000;
  x45 = 0;
  x46 = 0;
  x47 = 22000000;
  x48 = 0;
  x49 = 0;
  x50 = 0;
  x51 = 0;
  x52 = 0;
  x53 = 40000;
  x54 = 0;
  x55 = 21000000;
  x56 = 0;
  x57 = 0;
  x58 = 0;
  x59 = 0;
  x60 = 10000000;
  x61 = 0;
  x62 = 0;
  x63 = 0;
  x64 = 0;
  x65 = 0;
  x66 = 0;
  x67 = 0;
  x68 = 0;
  x69 = 0;
  x70 = 0;
  x71 = 0;
  x72 = 0;
  x73 = 0;
  x74 = 0;
  x75 = 0;
  x76 = 0;
  x77 = 0;
  x78 = 0;
  x79 = 0;
  x80 = 0;
  x81 = 0;
  x82 = 0;
  x83 = 0;
  x84 = 0;
  x85 = 0;
  x86 = 0;
  x87 = 0;
  x88 = 0;
  x89 = 0;
  x90 = 0;
  x91 = 0;
  x92 = 0;
  x93 = 0;
  x94 = 0;

  // Compartment initializations:
  c1 = 1;
  c2 = 1;
  c3 = 4.3e-006;

  // Variable initializations:
  k1 = 0.003;
  k1 has pipmin;
  kr1 = 0.228;
  kr1 has pmin;
  kr2 = 6;
  kr2 has pmin;
  k2 = 0.001;
  k2 has pipmin;
  k3 = 60;
  k3 has pmin;
  kr3 = 0.6;
  kr3 has pmin;
  k4 = 1.038e-005;
  k4 has pipmin;
  kr4 = 0.0996;
  kr4 has pmin;
  k5 has pmin;
  k6 = 0.003;
  k6 has pmin;
  kr6 = 0.3;
  kr6 has pmin;
  k7 = 0.003;
  k7 has pmin;
  k8 = 0.0001;
  k8 has pipmin;
  kr8 = 12;
  kr8 has pmin;
  k10 = 3.25581;
  k10 has pipmin;
  kr10 = 0.66;
  kr10 has pmin;
  kr11 = 6;
  kr11 has pmin;
  k11 = 0.001;
  k11 has pipmin;
  kr12 = 0.6;
  kr12 has pmin;
  k12 = 60;
  k12 has pmin;
  k13 = 130.2;
  k13 has ipmin;
  k14 = 0.0001;
  k14 has pipmin;
  kr14 = 12;
  kr14 has pmin;
  k15 = 600000;
  k15 has pmin;
  kr16 = 16.5;
  kr16 has pmin;
  k16 = 0.001;
  k16 has pipmin;
  kr17 = 3.6;
  kr17 has pmin;
  k17 = 0.001;
  k17 has pipmin;
  kr18 = 78;
  kr18 has pmin;
  k18 = 0.0015;
  k18 has pipmin;
  kr19 = 1e-005;
  kr19 has pipmin;
  k19 = 30;
  k19 has pmin;
  kr20 = 24;
  kr20 has pmin;
  k20 = 0.00021;
  k20 has pipmin;
  k21 = 1.38;
  k21 has pmin;
  kr21 = 2.2e-005;
  kr21 has pipmin;
  k22 = 0.0021;
  k22 has pipmin;
  kr22 = 6;
  kr22 has pmin;
  k23 = 360;
  k23 has pmin;
  kr23 = 36;
  kr23 has pmin;
  k24 = 0.001;
  k24 has pipmin;
  kr24 = 33;
  kr24 has pmin;
  kr25 = 1.284;
  kr25 has pmin;
  k25 = 0.001;
  k25 has pipmin;
  k28 = 0.0001;
  k28 has pipmin;
  kr28 = 0.318;
  kr28 has pmin;
  k29 = 60;
  k29 has pmin;
  kr29 = 7e-005;
  kr29 has pipmin;
  kr32 = 2.4e-005;
  kr32 has pipmin;
  k32 = 6;
  k32 has pmin;
  k33 = 12;
  k33 has pmin;
  kr33 = 0.0021;
  kr33 has pipmin;
  k34 = 1.8;
  k34 has pmin;
  kr34 = 0.00045;
  kr34 has pipmin;
  k35 = 0.09;
  k35 has pmin;
  kr35 = 0.00045;
  kr35 has pipmin;
  Vm36 = 61200;
  Vm36 has ipmin;
  Km36 = 200000000000000;
  Km36 has substance;
  k37 = 18;
  k37 has pmin;
  kr37 = 9e-005;
  kr37 has pipmin;
  k40 = 0.003;
  k40 has pipmin;
  kr40 = 3.84;
  kr40 has pmin;
  kr41 = 2.574;
  kr41 has pmin;
  k41 = 0.003;
  k41 has pipmin;
  k42 = 0.0071;
  k42 has pipmin;
  kr42 = 12;
  kr42 has pmin;
  k43 = 60;
  k43 has pmin;
  kr44 = 1.0998;
  kr44 has pmin;
  k44 = 0.00111;
  k44 has pipmin;
  k45 = 210;
  k45 has pmin;
  k47 = 174;
  k47 has pmin;
  kr48 = 48;
  kr48 has pmin;
  k48 = 0.00143;
  k48 has pipmin;
  k49 = 3.48;
  k49 has pmin;
  kr50 = 30;
  kr50 has pmin;
  k50 = 2.5e-005;
  k50 has pipmin;
  k52 = 0.00534;
  k52 has pipmin;
  kr52 = 1.98;
  kr52 has pmin;
  k53 = 960;
  k53 has pmin;
  k55 = 342;
  k55 has pmin;
  kr56 = 36;
  kr56 has pmin;
  k56 = 0.00145;
  k56 has pipmin;
  k57 = 16.2;
  k57 has pmin;
  kr58 = 30;
  kr58 has pmin;
  k58 = 0.0005;
  k58 has pipmin;
  k59 = 18;
  k59 has pmin;
  k60 = 0.04002;
  k60 has pmin;
  k61 = 0.01002;
  k61 has pmin;
  RT = 50000;
  RT has substance;

  //Other declarations:
  var k5, C;
  const c1, c2, c3, k1, kr1, kr2, k2, k3, kr3, k4, kr4, k6, kr6, k7, k8, kr8;
  const k10, kr10, kr11, k11, kr12, k12, k13, k14, kr14, k15, kr16, k16, kr17;
  const k17, kr18, k18, kr19, k19, kr20, k20, k21, kr21, k22, kr22, k23, kr23;
  const k24, kr24, kr25, k25, k28, kr28, k29, kr29, kr32, k32, k33, kr33;
  const k34, kr34, k35, kr35, Vm36, Km36, k37, kr37, k40, kr40, kr41, k41;
  const k42, kr42, k43, kr44, k44, k45, k47, kr48, k48, k49, kr50, k50, k52;
  const kr52, k53, k55, kr56, k56, k57, kr58, k58, k59, k60, k61, RT;

  // Unit definitions:
  unit substance = item;
  unit time_unit = 60 second;
  unit volume = 1e-12 litre;
  unit pmin = 1 / 60 second;
  unit ipmin = item / 60 second;
  unit pipmin = 1 / (60 second * item);
  unit piplpmin = 1e-12 litre / (item * 60 second);

  //Display Names:
  substance is "items";
  time_unit is "min";
  volume is "pl";
  pmin is "permin";
  ipmin is "itemspermin";
  pipmin is "peritempermin";
  piplpmin is "plperitempermin";
  c1 is "extracellular volume";
  c2 is "cytoplasm";
  c3 is "endosomal volume";
  x1 is "EGF";
  x2 is "EGFR";
  x3 is "EGF-EGFR";
  x4 is "EGF-EGFR^2";
  x5 is "EGF-EGFR*^2";
  x6 is "EGFRi";
  x7 is "EGF-EGFR*^2-GAP-Grb2-Prot";
  x8 is "EGF-EGFRi*^2";
  x9 is "Proti";
  x10 is "EGF-EGFRi";
  x11 is "EGF-EGFRi^2";
  x12 is "Prot";
  x13 is "EGFideg";
  x14 is "GAP";
  x15 is "EGF-EGFR*^2-GAP";
  x16 is "EGFi";
  x17 is "EGF-EGFRi*^2-GAP";
  x18 is "EGF-EGFRi*^2-GAP-Grb2";
  x19 is "EGF-EGFRi*^2-GAP-Grb2-Sos";
  x20 is "EGF-EGFRi*^2-GAP-Grb2-Sos-Ras-GDP";
  x21 is "EGF-EGFRi*^2-GAP-Grb2-Sos-Ras-GTP";
  x22 is "Grb2";
  x23 is "EGF-EGFR*^2-GAP-Grb2";
  x24 is "Sos";
  x25 is "EGF-EGFR*^2-GAP-Grb2-Sos";
  x26 is "Ras-GDP";
  x27 is "EGF-EGFR*^2-GAP-Grb2-Sos-Ras-GDP";
  x28 is "Ras-GTP";
  x29 is "EGF-EGFR*^2-GAP-Grb2-Sos-Ras-GTP";
  x30 is "Grb2-Sos";
  x31 is "Shc";
  x32 is "EGF-EGFR*^2-GAP-Shc";
  x33 is "EGF-EGFR*^2-GAP-Shc*";
  x34 is "EGF-EGFR*^2-GAP-Shc*-Grb2";
  x35 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos";
  x36 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos-Ras-GDP";
  x37 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos-Ras-GTP";
  x38 is "Shc*-Grb2-Sos";
  x39 is "Shc*-Grb2";
  x40 is "Shc*";
  x41 is "Raf";
  x42 is "Raf-Ras-GTP";
  x43 is "Ras-GTP*";
  x44 is "Phosphotase1";
  x45 is "Raf*";
  x46 is "Raf*-P'ase";
  x47 is "MEK";
  x48 is "MEK-Raf*";
  x49 is "MEK-P";
  x50 is "MEK-P-Raf*";
  x51 is "MEK-PP";
  x52 is "MEK-PP-P'ase2";
  x53 is "Phosphatase2";
  x54 is "MEK-P-P'ase2";
  x55 is "ERK";
  x56 is "ERK-MEK-PP";
  x57 is "ERK-P";
  x58 is "ERK-P-MEK-PP";
  x59 is "ERK-PP";
  x60 is "Phosphotase3";
  x61 is "ERK-PP-P'ase3";
  x62 is "ERK-P-P'ase3";
  x63 is "EGF-EGFRi*^2-GAP-Shc";
  x64 is "EGF-EGFRi*^2-GAP-Shc*";
  x65 is "EGF-EGFRi*^2-GAP-Shc*-Grb2";
  x66 is "EGF-EGFRi*^2-GAP-Shc*-Grb2-Sos";
  x67 is "EGF-EGFRi*^2-GAP-Shc*-Grb2-Sos-Ras-GDP";
  x68 is "EGF-EGFRi*^2-GAP-Shc*-Grb2-Sos-Ras-GTP";
  x69 is "Rasi-GTP";
  x70 is "Rafi-Rasi-GTP";
  x71 is "Rasi-GTP*";
  x72 is "Rafi*";
  x73 is "Rafi*-P'ase";
  x74 is "MEKi-Rafi*";
  x75 is "MEKi-P";
  x76 is "MEKi-P-Rafi*";
  x77 is "MEKi-PP";
  x78 is "MEKi-PP-P'ase2i";
  x79 is "MEKi-P-P'ase2i";
  x80 is "ERKi-MEKi-PP";
  x81 is "ERKi-P";
  x82 is "ERKi-P-MEKi-PP";
  x83 is "ERKi-PP";
  x84 is "ERKi-PP-P'ase3i";
  x85 is "ERKi-P-P'ase3i";
  x86 is "EGFRideg";
  x87 is "EGF-EGFRi*^2deg";
  x88 is "EGF-EGFR*^2-GAP-Grb2-Sos-Prot";
  x89 is "EGF-EGFR*^2-GAP-Grb2-Sos-Ras-GDP-Prot";
  x90 is "EGF-EGFR*^2-GAP-Grb2-Sos-Ras-GTP-Prot";
  x91 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Prot";
  x92 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos-Prot";
  x93 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos-Ras-GDP-Prot";
  x94 is "EGF-EGFR*^2-GAP-Shc*-Grb2-Sos-Ras-GTP-Prot";
  Raf_act is "t_Raf*";
  Ras_GTP is "t_Ras_GTP";
  MEK_PP is "t_MEK_PP";
  ERK_PP is "t_ERK_PP";
  SHC_P_t is "t_SHC_P_t";
  EGF_EGFR_act is "t_EGF_EGFR*";
  C is "C_internalization";
  RT is "total_Receptors";
end
