//Created by libAntimony v2.4
model *Nyman2011_M3Hierarachical_InsulinGlucosedynamics()

  // Compartments and Species:
  compartment default;
  species r0 in default, r1 in default, r2 in default, r11 in default, r12 in default;
  species r22 in default, r1x2 in default, r11x2 in default, r1x22 in default;
  species r1x22d in default, r11x22 in default, rend in default, rendP in default;
  species iendIR in default, iend in default, rPbasal in default, IRS in default;
  species IRSiP in default, X in default, X_P in default, PI3K in default;
  species PI3K_ in default, PDK1 in default, PDK1_ in default, PKC in default;
  species PKC_P in default, PKB in default, PKB_P in default, mTOR in default;
  species mTOR_ in default, GLUT4_C in default, GLUT4_M in default;

  // Assignment Rules:
  vglucoseuptake := k_glut1 * G_t / (KmG1 + G_t) + k_glut4 * GLUT4_M * G_t / (KmG4 + G_t) + kbf * (INS + 5);
  KD := 7.000000e-006;
  S2 := 0;
  S1 := (INS + 5) * 1.000000e-012;
  K4 := 1400;
  K8 := 0.01;
  aa := 5 / 2 / (1 - b) / D;
  cc := 5 / 2 / d / D;
  EGP := k_p1 - k_p2 * G_p - k_p3 * I_d - k_p4 * I_po;
  V_mmax := (1 - part) * (V_m0 + V_mX * INS);
  E := 0;
  S := gamma * I_po;
  I := I_p / V_I;
  G := G_p / V_G;
  HE := - m_5 * S + m_6;
  m_3 := HE * m_1 / (1 - HE);
  Q_sto := Q_sto1 + Q_sto2;
  Ra := f * k_abs * Q_gut / BW;
  k_empt := k_min + (k_max - k_min) / 2 * (tanh(aa * (Q_sto - b * D)) - tanh(cc * (Q_sto - d * D)) + 2);
  U_idm := V_mmax * G_t / (K_m0 + G_t);
  U_id := U_idm + vglucoseuptake;
  U := U_ii + U_id;
  S_po := Y + K * (EGP + Ra - E - U_ii - k_1 * G_p + k_2 * G_t) / V_G + S_b;

  // Rate Rules:
  G_t' = - U_id + k_1 * G_p - k_2 * G_t;
  INS' = - p_2U * INS + p_2U * (I - I_b);
  G_p' = EGP + Ra - E - U_ii - k_1 * G_p + k_2 * G_t;
  I_d' = - k_i * (I_d - I_1);
  I_po' = - gamma * I_po + S_po;
  I_p' = - m_2 * I_p - m_4 * I_p + m_1 * I_l;
  Q_sto1' = - k_gri * Q_sto1;
  Q_sto2' = - k_empt * Q_sto2 + k_gri * Q_sto1;
  Q_gut' = - k_abs * Q_gut + k_empt * Q_sto2;
  Y' = - alpha * (Y - beta * (G - G_b));
  I_l' = - m_1 * I_l - m_3 * I_l + m_2 * I_p + S;
  I_1' = - k_i * (I_1 - I);

  // Reactions:
  R1: r0 => r1; 2 * a1 * S1 * r0;
  R2: r0 => r2; 2 * a2 * S1 * r0;
  R3: r1 => r11; a1 * S1 * r1;
  R4: r2 => r12; a1 * S1 * r2;
  R5: r1 => r0; d1 * r1;
  R6: r1 => r12; a2 * S1 * r1;
  R7: r2 => r22; a2 * S1 * r2;
  R8: r2 => r0; d2 * r2;
  R9: r1 => r1x2; Kcr * r1;
  R10: r2 => r1x2; Kcr * r2;
  R11: r1x2 => r11x2; a1 * S1 * r1x2;
  R12: r11 => r1; 2 * d1 * r11;
  R13: r12 => r2; d1 * r12;
  R14: r1x2 => r1x22; a2 * S1 * r1x2;
  R15: r12 => r1; d2 * r12;
  R16: r22 => r2; 2 * d2 * r22;
  R17: r11 => r11x2; 2 * Kcr * r11;
  R18: r12 => r1x22; Kcr * r12;
  R19: r1x2 => r1; d2 * r1x2;
  R20: r12 => r11x2; Kcr * r12;
  R21: r22 => r1x22; 2 * Kcr * r22;
  R22: r1x2 => r2; d1 * r1x2;
  R23: r1x2 => r1x22d; a2 * S2 * r1x2;
  R24: r11x2 => r1x2; d1 * r11x2;
  R25: r1x22 => r1x2; d2 * r1x22;
  R26: r11x2 => r11; d2 * r11x2;
  R27: r1x22 => r12; d2 * r1x22;
  R28: r11x2 => r12; d1 * r11x2;
  R29: r1x22 => r22; d1 * r1x22;
  R30: r1x22 => r11x22; a1 * S1 * r1x22;
  R31: r11x2 => r11x22; a2 * S1 * r11x2;
  R32: r1x22 => r1x22d; K4 * S1 * r1x22;
  R33: r1x22d => r1x22; K8 * r1x22d;
  R34: r1x22d => r1x2; d2 * r1x22d;
  R35: r11x22 => r1x22; d1 * r11x22;
  R36: r11x22 => r11x2; d2 * r11x22;
  R37: rend => r0; Kex * rend;
  R38: iend => ; Kex * iend;
  R39: r1x2 => rendP + iendIR; Kend * r1x2;
  R40: r11x2 => rendP + 2iendIR; Kend * r11x2;
  R41: r1x22 => rendP + 2iendIR; Kend * r1x22;
  R42: r1x22d => rendP + 3iendIR; Kend * r1x22d;
  R43: r11x22 => rendP + 3iendIR; Kend * r11x22;
  R44: rendP => rend; (Kdp + Kcat * X_P / (Km + X_P)) * rendP;
  R45: iendIR => iend; (Kdp + Kcat * X_P / (Km + X_P)) * iendIR;
  R46: r0 => rPbasal; kfbasal * r0;
  R47: rPbasal => r0; krbasal * rPbasal;
  R48: rPbasal => rendP; Kend * rPbasal;
  v2f: IRS => IRSiP; k21 * IRS * (r1x2 + r11x2 + r1x22 + r1x22d + r11x22 + rPbasal + k22 * rendP) * (1 + k23 * PKC_P + k24 * mTOR);
  v2b: IRSiP => IRS; k2b * IRSiP;
  v3f: X => X_P; k3f * X * IRSiP;
  v3b: X_P => X; k3b * X_P;
  v4f: PI3K => PI3K_; k4f * PI3K * IRSiP;
  v4b: PI3K_ => PI3K; k4b * PI3K_;
  v5f: PDK1 => PDK1_; k5f * PDK1 * PI3K_;
  v5b: PDK1_ => PDK1; k5b * PDK1_;
  v6f: PKC => PKC_P; k6f * PKC * PDK1_;
  v6b: PKC_P => PKC; k6b * PKC_P;
  v7f: PKB => PKB_P; k7f * PKB * PDK1_;
  v7b: PKB_P => PKB; k7b * PKB_P;
  v8f: mTOR => mTOR_; k8f * mTOR * PKB_P;
  v8b: mTOR_ => mTOR; k8b * mTOR_;
  v9f: GLUT4_C => GLUT4_M; k91 * GLUT4_C * PKC_P + k92 * GLUT4_C * PKB_P + k5BasicWb * GLUT4_C;
  v9b: GLUT4_M => GLUT4_C; k9b * GLUT4_M;

  // Species initializations:
  r0 = 9.96820379306998;
  r1 = 0.0221366043399864;
  r2 = 0.00934921094738169;
  r11 = 1.22886711962222e-005;
  r12 = 1.0376421415741e-005;
  r22 = 2.18683301945588e-006;
  r1x2 = 1.36475817837692e-006;
  r11x2 = 1.51513915390766e-009;
  r1x22 = 6.39351849488596e-010;
  r1x22d = 5.59231079319369e-020;
  r11x22 = 1.78725515332219e-014;
  rend = 3.31711803810961e-005;
  rendP = 0.000212533941418487;
  iendIR = 7.25519178924707e-006;
  iend = 1.13228497567934e-006;
  rPbasal = 3.87230309356247e-005;
  IRS = 9.99982253600007;
  IRSiP = 0.000177463999892648;
  X = 9.92463241634744;
  X_P = 0.0753675836525682;
  PI3K = 9.97578356966623;
  PI3K_ = 0.0242164303337614;
  PDK1 = 8.65876984730663;
  PDK1_ = 1.34123015269338;
  PKC = 3.60283594102724e-005;
  PKC_P = 9.99996397164059;
  PKB = 9.90193143617302;
  PKB_P = 0.0980685638269942;
  mTOR = 0.0201915011292933;
  mTOR_ = 9.97980849887072;
  GLUT4_C = 9.99316830771855;
  GLUT4_M = 0.00683169228144988;

  // Compartment initializations:
  default = 1;

  // Variable initializations:
  a1 = 448251462.71204;
  a2 = 4321891.90327031;
  d1 = 0.7722612342;
  d2 = 0.0122057759;
  Kcr = 0.0013640432;
  Kex = 37.0818924842;
  Kend = 30.6825110077;
  Kdp = 0.0009500831;
  Kcat = 237.5189220434;
  Km = 3.0181933402;
  kfbasal = 0.49752158;
  krbasal = 128042.884096176;
  k21 = 0.009645863;
  k22 = 2374.9773277896;
  k23 = 0.1199031163;
  k24 = 0.9430860972;
  k2b = 608.5839585406;
  k3f = 8.1119350488;
  k3b = 0.1895302156;
  k4f = 384885.688277883;
  k4b = 28137.0701606029;
  k5f = 64300.0712750856;
  k5b = 10052.5084521206;
  k6f = 16094201.7926563;
  k6b = 77.7712105485;
  k7f = 4174.6300598327;
  k7b = 565342.162392942;
  k8f = 1515762.41887571;
  k8b = 300.7511656484;
  k91 = 8.14e-008;
  k92 = 0.0280831426;
  k9b = 4.0297596909;
  k5Basic = 0.2040341054;
  k5BasicWb = 2.34e-008;
  k_glut4 = 31.4211308621;
  k_glut1 = 0.2966651081;
  KmG1 = 132.7704719106;
  KmG4 = 70.4032025464;
  kbf = 0.003119389367;
  V_G = 1.88;
  k_1 = 0.065;
  k_2 = 0.079;
  G_b = 95;
  V_I = 0.05;
  m_1 = 0.19;
  m_2 = 0.484;
  m_4 = 0.194;
  m_5 = 0.0304;
  m_6 = 0.6471;
  HE_b = 0.6;
  I_b = 25;
  S_b = 1.8;
  S_b_minus = -1.8;
  k_max = 0.0558;
  k_min = 0.008;
  k_abs = 0.057;
  k_gri = 0.0558;
  f = 0.9;
  b = 0.82;
  d = 0.01;
  BW = 78;
  k_p1 = 2.7;
  k_p2 = 0.0021;
  k_p3 = 0.009;
  k_p4 = 0.0618;
  k_i = 0.0079;
  U_ii = 1;
  V_m0 = 2.5;
  V_mX = 0.047;
  K_m0 = 225.59;
  p_2U = 0.0331;
  part = 0.2;
  K = 2.3;
  alpha = 0.05;
  beta = 0.11;
  gamma = 0.5;
  k_e1 = 0.0005;
  k_e2 = 339;
  D = 78000;
  G_t = 135;
  INS = 0;
  G_p = 178;
  I_d = 25;
  I_po = 3.6;
  I_p = 1.25;
  Q_sto1 = 78000;
  Q_sto2 = 0;
  Q_gut = 0;
  Y = 0;
  I_l = 4.5;
  I_1 = 25;

  //Other declarations:
  var vglucoseuptake, G_t, INS, KD, S2, S1, K4, K8, aa, cc, EGP, G_p, I_d;
  var I_po, V_mmax, E, S, I, I_p, G, HE, m_3, Q_sto, Q_sto1, Q_sto2, Ra, Q_gut;
  var k_empt, U_idm, U_id, U, S_po, Y, I_l, I_1;
  const default, a1, a2, d1, d2, Kcr, Kex, Kend, Kdp, Kcat, Km, kfbasal, krbasal;
  const k21, k22, k23, k24, k2b, k3f, k3b, k4f, k4b, k5f, k5b, k6f, k6b, k7f;
  const k7b, k8f, k8b, k91, k92, k9b, k5Basic, k5BasicWb, k_glut4, k_glut1;
  const KmG1, KmG4, kbf, V_G, k_1, k_2, G_b, V_I, m_1, m_2, m_4, m_5, m_6;
  const HE_b, I_b, S_b, S_b_minus, k_max, k_min, k_abs, k_gri, f, b, d, BW;
  const k_p1, k_p2, k_p3, k_p4, k_i, U_ii, V_m0, V_mX, K_m0, p_2U, part, K;
  const alpha, beta, gamma, k_e1, k_e2, D;
end
