//Created by libAntimony v2.5
function function_1(GnRH_Pit, LH_Pit, default, par35, par36, par37)
  ((par37 + (par35*(GnRH_Pit*default)^5)/((GnRH_Pit*default)^5 + par36^5))*LH_Pit*default)/default;
end

function function_2(E2, FSH_Pit, GnRH_Pit, P4, default, par23, par24, par25, par26, par27, par28, par30)
  ((par30 + (par23*(P4*default)^2)/((P4*default)^2 + par24^2) + (par25*par26^2)/((E2*default)^2 + par26^2) + (par27*GnRH_Pit*default)/(par28 + GnRH_Pit*default))*FSH_Pit*default)/default;
end

function function_3(E2, GnRH_Hyp, P4, default, par3, par4, par5, par6, par7)
  ((par3*((par5^2/(par5^2 + (P4*default)^2) + par4^2/(par4^2 + (E2*default)^2)) - (par5^2/(par5^2 + (P4*default)^2)*par4^2)/(par4^2 + (E2*default)^2)) + (par6*par7^2)/((P4*default)^2 + par7^2))*GnRH_Hyp*default)/default;
end

function function_4(CL, Foll, LH_Bld, default, par47, par48, par62, par63, par64)
  ((par62*par47*(LH_Bld*default)^2)/((LH_Bld*default)^2 + par48^2)*Foll*default + (par63*(CL*default)^2)/((CL*default)^2 + par64^2))/default;
end

function function_5(GnRH_Hyp, default, par1, par2)
  (par2*(1 - (GnRH_Hyp*default)/par1))/default;
end

function function_6(Foll, default, par76)
  (par76*(Foll*default)^2)/default;
end

function function_7(CL, default, par71)
  (par71*(CL*default)^2)/default;
end

function function_8(Foll, default, par81)
  (par81*(Foll*default)^2)/default;
end

function function_9(CL, E2, default, par91, par92)
  ((par91*(E2*default)^2)/((E2*default)^2 + par92^2)*(CL*default)^2)/default;
end

function function_10(P4, default, par86, par87)
  (par86*(P4*default)^5)/((P4*default)^5 + par87^5)/default;
end

function function_11(Enz, OT, default, par56, par57, par58)
  ((par56*Enz^5)/(Enz^5 + par57^5)*(OT*default)^2)/((OT*default)^2 + par58^2)/default;
end

function function_12(GnRH_Pit, default, par10)
  (par10*GnRH_Pit*default)/default;
end

function function_13(LH_Bld, default, par38)
  (par38*LH_Bld*default)/default;
end

function function_14(FSH_Bld, default, par29)
  (par29*FSH_Bld*default)/default;
end

function function_15(P4, default, par72)
  (par72*P4*default)/default;
end

function function_16(E2, default, par77)
  (par77*E2*default)/default;
end

function function_17(Inh, default, par82)
  (par82*Inh*default)/default;
end

function function_18(OT, default, par94)
  (par94*OT*default)/default;
end

function function_19(Enz, default, par89)
  (par89*Enz)/default;
end

function function_20(PGF, default, par59)
  (par59*PGF*default)/default;
end

function function_21(IOF, default, par98)
  (par98*IOF*default)/default;
end

function function_22(Foll, LH_Bld, P4, default, par45, par46, par47, par48)
  (((par45*(P4*default)^5)/((P4*default)^5 + par46^5) + (par47*(LH_Bld*default)^2)/((LH_Bld*default)^2 + par48^2))*Foll*default)/default;
end

function function_23(CL, IOF, default, par65, par66)
  ((par65*(IOF*default)^5)/((IOF*default)^5 + par66^5)*CL*default)/default;
end

function function_24(E2, P4, default, par31, par32, par33, par34)
  ((par31*(E2*default)^2)/((E2*default)^2 + par32^2) + (par33*par34^2)/(par34^2 + (P4*default)^2))/default;
end

function function_25(Inh, default, par21, par22)
  (par21*par22^5)/(par22^5 + (Inh*default)^5)/default;
end

function function_26(E2, GnRH_Hyp, P4, default, par3, par4, par5, par6, par7, par8, par9)
  ((par8*(E2*default)^5)/((E2*default)^5 + par9^5)*(par3*((par5^2/(par5^2 + (P4*default)^2) + par4^2/(par4^2 + (E2*default)^2)) - (par5^2/(par5^2 + (P4*default)^2)*par4^2)/(par4^2 + (E2*default)^2)) + (par6*par7^2)/((P4*default)^2 + par7^2))*GnRH_Hyp*default)/default;
end

function function_27(FSH_Bld, Foll, default, par41, par42, par43)
  (par41*(FSH_Bld*default)^2)/(((par42*par43^2)/(par43^2 + (Foll*default)^2))^2 + (FSH_Bld*default)^2)/default;
end

function function_28(CL, PGF, default, par95, par96, par97)
  ((par95*(PGF*default)^5)/((PGF*default)^5 + par96^5)*(CL*default)^10)/((CL*default)^10 + par97^10)/default;
end


model *MODEL1308100000()

  // Compartments and Species:
  compartment default;
  species GnRH_Pit in default, LH_Pit in default, LH_Bld in default, GnRH_Hyp in default;
  species FSH_Pit in default, FSH_Bld in default, Foll in default, CL in default;
  species E2 in default, P4 in default, Inh in default, OT in default, Enz in default;
  species PGF in default, IOF in default, $src_GnRH in default, $src_E2 in default;
  species $src_P4 in default, $src_Inh in default, $src_OT in default, $src_Enz in default;
  species $src_PGF in default, $src_LH in default, $src_FSH in default, $snk_GnRH_Hyp in default;
  species $src_GnRH_Pit in default, $src_Foll in default, $src_IOF in default;
  species $src_CL in default, $snk_Inh in default, $snk_P4 in default, $snk_E2 in default;
  species $snk_GnRH_Pit in default, $snk_LH in default, $snk_FSH in default;
  species $snk_IOF in default, $snk_CL in default, $snk_Enz in default, $snk_OT in default;
  species $snk_PGF in default, $snk_Foll in default, $species_1 in default;

  // Assignment Rules:
  parameter_4 := piecewise(time - parameter_5, time > parameter_5, 0);
  parameter_6 := PGF + species_1;

  // Rate Rules:
  species_1' = ModelValue_60*ModelValue_61*ModelValue_61*parameter_4*exp(-ModelValue_61*parameter_4) - parameter_3*species_1;

  // Reactions:
  re1: LH_Pit => LH_Bld; default*function_1(GnRH_Pit, LH_Pit, default, par35, par36, par37);
  re2: FSH_Pit => FSH_Bld; default*function_2(E2, FSH_Pit, GnRH_Pit, P4, default, par23, par24, par25, par26, par27, par28, par30);
  re3: GnRH_Hyp => $snk_GnRH_Hyp; default*function_3(E2, GnRH_Hyp, P4, default, par3, par4, par5, par6, par7);
  re4: $src_CL => CL; default*function_4(CL, Foll, LH_Bld, default, par47, par48, par62, par63, par64);
  re5: $src_GnRH => GnRH_Hyp; default*function_5(GnRH_Hyp, default, par1, par2);
  re6: $src_E2 => E2; default*function_6(Foll, default, par76);
  re7: $src_P4 => P4; default*function_7(CL, default, par71);
  re8: $src_Inh => Inh; default*function_8(Foll, default, par81);
  re9: $src_OT => OT; default*function_9(CL, E2, default, par91, par92);
  re10: $src_Enz => Enz; default*function_10(P4, default, par86, par87);
  re11: $src_PGF => PGF; default*function_11(Enz, OT, default, par56, par57, par58);
  re12: GnRH_Pit => $snk_GnRH_Pit; default*function_12(GnRH_Pit, default, par10);
  re13: LH_Bld => $snk_LH; default*function_13(LH_Bld, default, par38);
  re14: FSH_Bld => $snk_FSH; default*function_14(FSH_Bld, default, par29);
  re15: P4 => $snk_P4; default*function_15(P4, default, par72);
  re16: E2 => $snk_E2; default*function_16(E2, default, par77);
  re17: Inh => $snk_Inh; default*function_17(Inh, default, par82);
  re18: OT => $snk_OT; default*function_18(OT, default, par94);
  re19: Enz => $snk_Enz; default*function_19(Enz, default, par89);
  re20: PGF => $snk_PGF; default*function_20(PGF, default, par59);
  re21: IOF => $snk_IOF; default*function_21(IOF, default, par98);
  re22: Foll => $snk_Foll; default*function_22(Foll, LH_Bld, P4, default, par45, par46, par47, par48);
  re23: CL => $snk_CL; default*function_23(CL, IOF, default, par65, par66);
  re24: $src_LH => LH_Pit; default*function_24(E2, P4, default, par31, par32, par33, par34);
  re25: $src_FSH => FSH_Pit; default*function_25(Inh, default, par21, par22);
  re26: $src_GnRH_Pit => GnRH_Pit; default*function_26(E2, GnRH_Hyp, P4, default, par3, par4, par5, par6, par7, par8, par9);
  re27: $src_Foll => Foll; default*function_27(FSH_Bld, Foll, default, par41, par42, par43);
  re28: $src_IOF => IOF; default*function_28(CL, PGF, default, par95, par96, par97);

  // Species initializations:
  GnRH_Pit = 0.219992404098564/default;
  LH_Pit = 2.25000957482152/default;
  LH_Bld = 0.00633682772990623/default;
  GnRH_Hyp = 0.740638780629751/default;
  FSH_Pit = 0.00579108659591004/default;
  FSH_Bld = 0.0168604631992291/default;
  Foll = 0.0286570978235457/default;
  CL = 0.314393628471893/default;
  E2 = 0.163690728507925/default;
  P4 = 0.120192549532403/default;
  Inh = 0.493710210684922/default;
  OT = 0.111730059223483/default;
  Enz = 5.83626691122778e-005/default;
  PGF = 0.000362064120302475/default;
  IOF = 0.133415086647186/default;
  src_GnRH = 0;
  src_E2 = 0;
  src_P4 = 0;
  src_Inh = 0;
  src_OT = 0;
  src_Enz = 0;
  src_PGF = 0;
  src_LH = 0;
  src_FSH = 0;
  snk_GnRH_Hyp = 0;
  src_GnRH_Pit = 0;
  src_Foll = 0;
  src_IOF = 0;
  src_CL = 0;
  snk_Inh = 0;
  snk_P4 = 0;
  snk_E2 = 0;
  snk_GnRH_Pit = 0;
  snk_LH = 0;
  snk_FSH = 0;
  snk_IOF = 0;
  snk_CL = 0;
  snk_Enz = 0;
  snk_OT = 0;
  snk_PGF = 0;
  snk_Foll = 0;
  species_1 = 0;

  // Compartment initializations:
  default = 1;
  default has volume;

  // Variable initializations:
  ModelValue_60 = parameter_1;
  ModelValue_61 = parameter_2;
  parameter_3 = 5.5;
  par2 = 2.75;
  par1 = 16;
  par3 = 2.05;
  par4 = 0.0972;
  par5 = 0.35;
  par6 = 1.91;
  par7 = 0.252;
  par8 = 0.99;
  par9 = 0.648;
  par10 = 1.63;
  par21 = 4.21;
  par22 = 0.118;
  par23 = 0.293;
  par24 = 0.152;
  par25 = 0.396;
  par26 = 0.312;
  par27 = 1.23;
  par28 = 0.0708;
  par29 = 2.73;
  par30 = 0.948;
  par31 = 0.376;
  par32 = 0.243;
  par33 = 2.71;
  par34 = 0.0269;
  par35 = 2.22;
  par36 = 0.69;
  par37 = 0.0141;
  par38 = 12;
  par41 = 0.562;
  par42 = 0.57;
  par43 = 0.22;
  par45 = 1.1;
  par46 = 0.126;
  par47 = 3.49;
  par48 = 0.171;
  par56 = 53.91;
  par57 = 1.43;
  par58 = 1.087;
  par59 = 1.23;
  par62 = 0.2;
  par63 = 0.0353;
  par64 = 0.1;
  par65 = 41.39;
  par66 = 1.32;
  par71 = 2.25;
  par72 = 1.41;
  par76 = 2.19;
  par77 = 1.23;
  par81 = 1.41;
  par82 = 0.475;
  par86 = 3.58;
  par87 = 0.77;
  par89 = 2.98;
  par91 = 1.59;
  par92 = 0.143;
  par94 = 0.644;
  par95 = 39.68;
  par96 = 1.22;
  par97 = 0.6;
  par98 = 0.298;
  parameter_1 = 3.7;
  parameter_2 = 100;
  parameter_5 = 0;
  parameter_7 = 0;

  //Other declarations:
  var parameter_4, parameter_6;
  const default, ModelValue_60, ModelValue_61, parameter_3, par2, par1, par3;
  const par4, par5, par6, par7, par8, par9, par10, par21, par22, par23, par24;
  const par25, par26, par27, par28, par29, par30, par31, par32, par33, par34;
  const par35, par36, par37, par38, par41, par42, par43, par45, par46, par47;
  const par48, par56, par57, par58, par59, par62, par63, par64, par65, par66;
  const par71, par72, par76, par77, par81, par82, par86, par87, par89, par91;
  const par92, par94, par95, par96, par97, par98, parameter_1, parameter_2;
  const parameter_5, parameter_7;

  // Unit definitions:
  unit substance = mole;
  unit volume = litre;
  unit area = metre^2;
  unit length = metre;
  unit time_unit = second;

  //Display Names:
  time_unit is "time";
  species_1 is "PGF_syn";
  ModelValue_60 is "Initial for D";
  ModelValue_61 is "Initial for beta";
  parameter_4 is "t_mod";
  parameter_3 is "c_PGF_syn";
  par2 is "k_G";
  par1 is "GnRH_max";
  par3 is "h_P4&E2_G";
  par4 is "T_E2_G1";
  par5 is "T_p4_G1";
  par6 is "h_p4_G2";
  par7 is "T_p4_G2";
  par8 is "h_e2_g2";
  par9 is "T_e2_g2";
  par10 is "cl_G";
  par21 is "h_inh_fsh";
  par22 is "T_inh_fsh";
  par23 is "h_p4_fsh";
  par24 is "T_p4_fsh";
  par25 is "h_e2_fsh";
  par26 is "T_e2_fsh";
  par27 is "h_gnrh_fsh";
  par28 is "T_gnrh_fsh";
  par29 is "cl_fsh";
  par30 is "b_fsh";
  par31 is "h_e2_lh";
  par32 is "T_e2_lh";
  par33 is "h_p4_lh";
  par34 is "T_p4_lh";
  par35 is "h_gnrh_lh";
  par36 is "T_gnrh_lh";
  par37 is "b_lh";
  par38 is "cl_lh";
  par41 is "h_fsh_foll";
  par42 is "T_fsh_foll";
  par43 is "T_foll_fsh";
  par45 is "h_p4_fsh_2";
  par46 is "T_p4_foll";
  par47 is "h_lh_foll";
  par48 is "T_lh_Foll";
  par56 is "h_enz_pgf";
  par57 is "T_enz_pgf";
  par58 is "T_ot_pgf";
  par59 is "cl_pgf";
  par62 is "SF_CL";
  par63 is "h_cl_cl";
  par64 is "T_cl_cl";
  par65 is "h_iof_cl";
  par66 is "T_iof_cl";
  par71 is "k_cl_p4";
  par72 is "cl_p4";
  par76 is "k_foll_e2";
  par77 is "cl_e2";
  par81 is "k_foll_inh";
  par82 is "cl_inh";
  par86 is "h_p4_enz";
  par87 is "T_p4_enz";
  par89 is "cl_enz";
  par91 is "h_e2cl_ot";
  par92 is "T_e2_ot";
  par94 is "cl_ot";
  par95 is "h_pg_iof";
  par96 is "T_pg_ot";
  par97 is "T_cl_iof";
  par98 is "cl_iof";
  parameter_1 is "D";
  parameter_2 is "beta";
  parameter_5 is "t_D";
  parameter_6 is "Total_PGF_2alpha";
  parameter_7 is "quantity_1";
  re22 is "l";
end
