// Created by libAntimony v2.8.0
function function_1(k, E, S, Km)
  (k*E*S)/(Km + S);
end


model *Complement_System()

  // Compartments and Species:
  compartment compartment_;
  species CRP in compartment_, PC in compartment_, PC_CRP in compartment_;
  species C4 in compartment_, C4a in compartment_, C4b in compartment_, C2 in compartment_;
  species C1 in compartment_, PC_CRP_C1 in compartment_, C2a in compartment_;
  species C2b in compartment_, C4b_C2a in compartment_, C3 in compartment_;
  species C3a in compartment_, C3b in compartment_, dC3b in compartment_;
  species MASP in compartment_, dC4b_C2a in compartment_, GlcNac in compartment_;
  species GlcNac_LF in compartment_, LF in compartment_, GlcNac_LF_MASP in compartment_;
  species PC_CRP_LF in compartment_, PC_CRP_LF_MASP in compartment_, GlcNac_LF_CRP in compartment_;
  species GlcNac_LF_CRP_C1 in compartment_, C4BP in compartment_, C4BP_PC_CRP in compartment_;
  species C4BP_GlcNac_LF_CRP in compartment_, iC4b_C2a in compartment_, C4BP_C4b in compartment_;
  species C4b_C2a_C4BP in compartment_, dC4b_C2a_C4BP in compartment_, PC_CRP_LF_C1 in compartment_;
  species C4BP_PC_CRP_LF in compartment_, GlcNac_LF_CRP_MASP in compartment_;
  species PC_CRP_LF_C1_MASP in compartment_, GlcNac_LF_C1_MASP in compartment_;
  species GlcNac_HF in compartment_, HF in compartment_, GlcNac_HF_MASP in compartment_;
  species X in compartment_;

  // Assignment Rules:
  mC3 := dC3b;

  // Reactions:
  a_01: PC + CRP -> PC_CRP; compartment_*(ka01_1*PC*CRP - ka01_2*PC_CRP);
  a_02: PC_CRP + C1 -> PC_CRP_C1; compartment_*(ka02_1*PC_CRP*C1 - ka02_2*PC_CRP_C1);
  a_03: C4 => C4a + C4b; compartment_*function_1(ka03_1, PC_CRP_C1, C4, ka03_2);
  a_04: C2 => C2a + C2b; compartment_*function_1(ka04_1, PC_CRP_C1, C2, ka04_2);
  c_01: C4b + C2a -> C4b_C2a; compartment_*(kc01_1*C4b*C2a - kc01_2*C4b_C2a);
  c_02: C4b_C2a + C3 => C4b_C2a + C3a + C3b; compartment_*kc02*C4b_C2a*C3;
  c_03: C3b -> dC3b; compartment_*(kc03_1*C3b - kc03_2*dC3b);
  c_04: C4b_C2a -> dC4b_C2a; compartment_*(kc04_1*C4b_C2a - kc04_2*dC4b_C2a);
  d_01: PC_CRP + LF -> PC_CRP_LF; compartment_*(kd01_1*PC_CRP*LF - kd01_2*PC_CRP_LF);
  d_02: PC_CRP_LF + MASP -> PC_CRP_LF_MASP; compartment_*(kd02_1*PC_CRP_LF*MASP - kd02_2*PC_CRP_LF_MASP);
  d_03: C4 => C4a + C4b; compartment_*function_1(kd03_1, PC_CRP_LF_MASP, C4, kd03_2);
  d_04: C2 => C2a + C2b; compartment_*function_1(kd04_1, PC_CRP_LF_MASP, C2, kd04_2);
  b_01: GlcNac + LF -> GlcNac_LF; compartment_*(kb01_1*GlcNac*LF - kb01_2*GlcNac_LF);
  b_02: GlcNac_LF + MASP -> GlcNac_LF_MASP; compartment_*(kb02_1*GlcNac_LF*MASP - kb02_2*GlcNac_LF_MASP);
  b_03: C4 => C4a + C4b; compartment_*function_1(kb03_1, GlcNac_LF_MASP, C4, kb03_2);
  b_04: C2 => C2a + C2b; compartment_*function_1(kb04_1, GlcNac_LF_MASP, C2, kb04_2);
  e_01: GlcNac_LF + CRP -> GlcNac_LF_CRP; compartment_*(ke01_1*GlcNac_LF*CRP - ke01_2*GlcNac_LF_CRP);
  e_02: GlcNac_LF_CRP + C1 -> GlcNac_LF_CRP_C1; compartment_*(ke02_1*GlcNac_LF_CRP*C1 - ke02_2*GlcNac_LF_CRP_C1);
  e_03: C4 => C4a + C4b; compartment_*function_1(ke03_1, GlcNac_LF_CRP_C1, C4, ke03_2);
  e_04: C2 => C2a + C2b; compartment_*function_1(ke04_1, GlcNac_LF_CRP_C1, C2, ke04_2);
  f_01: C4BP + PC_CRP -> C4BP_PC_CRP; compartment_*(kf01_1*C4BP*PC_CRP - kf01_2*C4BP_PC_CRP);
  f_02: C4BP + GlcNac_LF_CRP -> C4BP_GlcNac_LF_CRP; compartment_*(kf02_1*C4BP*GlcNac_LF_CRP - kf02_2*C4BP_GlcNac_LF_CRP);
  f_03: C4b_C2a + C4BP => iC4b_C2a + C4BP; compartment_*kf03*C4b_C2a*C4BP;
  f_04: C4BP + C4b -> C4BP_C4b; compartment_*(kf04_1*C4BP*C4b - kf04_2*C4BP_C4b);
  f_05: C4b_C2a + C4BP => C4b + C2a + C4BP; compartment_*kf05*C4b_C2a*C4BP;
  f_06: C4b_C2a + C4BP -> C4b_C2a_C4BP; compartment_*(kf06_1*C4b_C2a*C4BP - kf06_2*C4b_C2a_C4BP);
  f_07: dC4b_C2a + C4BP -> dC4b_C2a_C4BP; compartment_*(kf07_1*dC4b_C2a*C4BP - kf07_2*dC4b_C2a_C4BP);
  t_01: C4BP => ; compartment_*t_01_k1_4*C4BP;
  t_02: C3b => ; compartment_*t_02_k1_4*C3b;
  t_03: C4b_C2a => ; compartment_*t_03_k1_4*C4b_C2a;
  d_05: PC_CRP_LF + C1 -> PC_CRP_LF_C1; compartment_*(kd05_1*PC_CRP_LF*C1 - kd05_2*PC_CRP_LF_C1);
  d_06: C4 => C4a + C4b; compartment_*function_1(kd06_1, PC_CRP_LF_C1, C4, kd06_2);
  d_07: C2 => C2a + C2b; compartment_*function_1(kd07_1, PC_CRP_LF_C1, C2, kd07_2);
  t_04: C4BP + PC_CRP_LF -> C4BP_PC_CRP_LF; compartment_*(t_04_k1_4*C4BP*PC_CRP_LF - t_04_k2*C4BP_PC_CRP_LF);
  e_05: GlcNac_LF_CRP + MASP -> GlcNac_LF_CRP_MASP; compartment_*(ke05_1*GlcNac_LF_CRP*MASP - ke05_2*GlcNac_LF_CRP_MASP);
  e_06: C4 => C4a + C4b; compartment_*function_1(ke06_1, GlcNac_LF_CRP_MASP, C4, ke06_2);
  e_07: C2 => C2a + C2b; compartment_*function_1(ke07_1, GlcNac_LF_CRP_MASP, C2, ke07_2);
  d_08: PC_CRP_LF_C1 + MASP -> PC_CRP_LF_C1_MASP; compartment_*(kd08_1*PC_CRP_LF_C1*MASP - kd08_2*PC_CRP_LF_C1_MASP);
  d_09: PC_CRP_LF_MASP + C1 -> PC_CRP_LF_C1_MASP; compartment_*(kd09_1*PC_CRP_LF_MASP*C1 - kd09_2*PC_CRP_LF_C1_MASP);
  d_10: C4 => C4a + C4b; compartment_*function_1(kd10_1, PC_CRP_LF_C1_MASP, C4, kd10_2);
  d_11: C2 => C2a + C2b; compartment_*function_1(kd11_1, PC_CRP_LF_C1_MASP, C2, kd11_2);
  g_01: X + HF -> GlcNac_HF; compartment_*(kg01_1*X*HF - kg01_2*GlcNac_HF);
  g_02: GlcNac_HF + MASP -> GlcNac_HF_MASP; compartment_*(kg02_1*GlcNac_HF*MASP - kg02_2*GlcNac_HF_MASP);
  g_03: C4 => C4a + C4b; compartment_*function_1(kg03_1, GlcNac_HF_MASP, C4, kg03_2);
  g_04: C2 => C2a + C2b; compartment_*function_1(kg04_1, GlcNac_HF_MASP, C2, kg04_2);

  // Species initializations:
  CRP = 2;
  PC = 0.0327796;
  PC_CRP = 0;
  C4 = 770;
  C4a = 0;
  C4b = 0;
  C2 = 310;
  C1 = 2470;
  PC_CRP_C1 = 0;
  C2a = 0;
  C2b = 0;
  C4b_C2a = 0;
  C3 = 4650;
  C3a = 0;
  C3b = 0;
  dC3b = 0;
  MASP = 6.8;
  dC4b_C2a = 0;
  GlcNac = 0;
  GlcNac_LF = 0;
  LF = 20;
  GlcNac_LF_MASP = 0;
  PC_CRP_LF = 0;
  PC_CRP_LF_MASP = 0;
  GlcNac_LF_CRP = 0;
  GlcNac_LF_CRP_C1 = 0;
  C4BP = 260;
  C4BP_PC_CRP = 0;
  C4BP_GlcNac_LF_CRP = 0;
  iC4b_C2a = 0;
  C4BP_C4b = 0;
  C4b_C2a_C4BP = 0;
  dC4b_C2a_C4BP = 0;
  PC_CRP_LF_C1 = 0;
  C4BP_PC_CRP_LF = 0;
  GlcNac_LF_CRP_MASP = 0;
  PC_CRP_LF_C1_MASP = 0;
  GlcNac_LF_C1_MASP = 0;
  GlcNac_HF = 0;
  HF = 0;
  GlcNac_HF_MASP = 0;
  X = 0.0005;

  // Compartment initializations:
  compartment_ = 1;

  // Variable initializations:
  ka01_1 = 0.0275999;
  ka01_2 = 0.0109;
  ka02_1 = 0.00074;
  ka02_2 = 0.0011;
  ka03_1 = 2;
  ka04_1 = 10.5;
  kc01_1 = 0.64564661669102;
  kc01_2 = 0.194551104058408;
  kc02 = 0.000591152775857994;
  kc03_1 = 0.414004459949002;
  kc03_2 = 0.99647572245388;
  kc04_1 = 0.977836567576895;
  ka03_2 = 500;
  ka04_2 = 2500;
  kd02_2 = 0.1;
  kd02_1 = 0.0368010796682635;
  kd03_1 = 66.3776807395383;
  kd03_2 = 829.115813389061;
  kb01_1 = 0.091011109910329;
  kb01_2 = 0.0508205528375529;
  kb02_1 = 0.0368010796682635;
  kb02_2 = 0.1;
  kb03_1 = 66.3776807395383;
  kb03_2 = 829.115813389061;
  kb04_1 = 1.1;
  kb04_2 = 2000;
  kc04_2 = 0.199162432258527;
  kd01_1 = 7.07e-005;
  kd01_2 = 7.23e-005;
  kd04_1 = 1.1;
  kd04_2 = 2000;
  ke01_1 = 7.07e-005;
  ke01_2 = 0.0001;
  ke02_1 = 0.00074;
  ke02_2 = 0.0011;
  ke03_1 = 2;
  ke03_2 = 500;
  ke04_1 = 10.5;
  ke04_2 = 2500;
  kf01_1 = 0.969998277173144;
  kf01_2 = 0.069020578737621;
  kf02_1 = 0.969998277173144;
  kf02_2 = 0.069020578737621;
  kf03 = 0.0613537204215846;
  kf04_2 = 0.983691204042155;
  kf04_1 = 0.613416050428938;
  kf05 = 0.980777558937884;
  kf06_1 = 0.613416050428938;
  kf06_2 = 0.983691204042155;
  kf07_1 = 0.613416050428938;
  kf07_2 = 0.983691204042155;
  kd05_1 = 0.00074;
  kd05_2 = 0.0011;
  kd06_1 = 2;
  kd06_2 = 500;
  kd07_1 = 10.5;
  kd07_2 = 2500;
  ke05_1 = 0.0368010796682635;
  ke05_2 = 0.1;
  ke06_1 = 66.3776807395383;
  ke06_2 = 829.115813389061;
  ke07_1 = 1.1;
  ke07_2 = 2000;
  kd08_1 = 0.0368010796682635;
  kd08_2 = 0.1;
  kd09_1 = 0.00074;
  kd09_2 = 0.0011;
  kd10_1 = 71.1705760475931;
  kd10_2 = 3796.22684377655;
  kd11_1 = 38.9625903487667;
  kd11_2 = 5972.30640657865;
  kg01_1 = 0.091011109910329;
  kg01_2 = 0.0508205528375529;
  kg02_1 = 0.0368010796682635;
  kg02_2 = 0.1;
  kg03_1 = 66.3776807395383;
  kg03_2 = 829.115813389061;
  kg04_1 = 1.1;
  kg04_2 = 2000;
  kt01 = 0.000342266;
  kt02 = 0.492901;
  kt03 = 0.0470911;
  kt04_1 = 0;
  kt04_2 = 0;
  t_01_k1_4 = 0.000342266;
  t_02_k1_4 = 0.492901;
  t_03_k1_4 = 0.0470911;
  t_04_k1_4 = 0;
  t_04_k2 = 0;

  // Other declarations:
  var mC3;
  const compartment_, ka01_1, ka01_2, ka02_1, ka02_2, ka03_1, ka04_1, kc01_1;
  const kc01_2, kc02, kc03_1, kc03_2, kc04_1, ka03_2, ka04_2, kd02_2, kd02_1;
  const kd03_1, kd03_2, kb01_1, kb01_2, kb02_1, kb02_2, kb03_1, kb03_2, kb04_1;
  const kb04_2, kc04_2, kd01_1, kd01_2, kd04_1, kd04_2, ke01_1, ke01_2, ke02_1;
  const ke02_2, ke03_1, ke03_2, ke04_1, ke04_2, kf01_1, kf01_2, kf02_1, kf02_2;
  const kf03, kf04_2, kf04_1, kf05, kf06_1, kf06_2, kf07_1, kf07_2, kd05_1;
  const kd05_2, kd06_1, kd06_2, kd07_1, kd07_2, ke05_1, ke05_2, ke06_1, ke06_2;
  const ke07_1, ke07_2, kd08_1, kd08_2, kd09_1, kd09_2, kd10_1, kd10_2, kd11_1;
  const kd11_2, kg01_1, kg01_2, kg02_1, kg02_2, kg03_1, kg03_2, kg04_1, kg04_2;
  const kt01, kt02, kt03, kt04_1, kt04_2;

  // Unit definitions:
  unit volume = 1e-3 litre;
  unit substance = 1e-9 mole;
  unit nM = 1e-9 mole * 1e-1 litre;

  // Display Names:
  substance is "nano mole";
  PC_CRP is "PC/CRP";
  PC_CRP_C1 is "PC/CRP/C1";
  C4b_C2a is "C4b/C2a";
  dC4b_C2a is "dC4b/C2a";
  GlcNac_LF is "GlcNac/LF";
  GlcNac_LF_MASP is "GlcNac/LF/MASP";
  PC_CRP_LF is "PC/CRP/LF";
  PC_CRP_LF_MASP is "PC/CRP/LF/MASP";
  GlcNac_LF_CRP is "GlcNac/LF/CRP";
  GlcNac_LF_CRP_C1 is "GlcNac/LF/CRP/C1";
  C4BP_PC_CRP is "C4BP/PC/CRP";
  C4BP_GlcNac_LF_CRP is "C4BP/GlcNac/LF/CRP";
  iC4b_C2a is "iC4b/C2a";
  C4BP_C4b is "C4BP/C4b";
  C4b_C2a_C4BP is "C4b/C2a/C4BP";
  dC4b_C2a_C4BP is "dC4b/C2a/C4BP";
  PC_CRP_LF_C1 is "PC/CRP/LF/C1";
  C4BP_PC_CRP_LF is "C4BP/PC/CRP/LF";
  GlcNac_LF_CRP_MASP is "GlcNac/LF/CRP/MASP";
  PC_CRP_LF_C1_MASP is "PC/CRP/LF/C1/MASP";
  GlcNac_LF_C1_MASP is "GlcNac/LF/C1/MASP";
  GlcNac_HF is "GlcNac/HF";
  GlcNac_HF_MASP is "GlcNac/HF/MASP";
end
