//Created by libAntimony v2.0
model Smolen2002()

  // Compartments and Species:
  compartment CELL;
  species $EmptySet in CELL, Per in CELL, dClk in CELL, $dClkF in CELL;

  // Assignment Rules:
  dClkF := piecewise(0, lt(dClk - Per, 0), dClk - Per);
  dClkF_tau1 := piecewise(0, lt(delay(dClk, tau1) - delay(Per, tau1), 0), delay(dClk, tau1) - delay(Per, tau1));
  dClkF_tau2 := piecewise(0, lt(delay(dClk, tau2) - delay(Per, tau2), 0), delay(dClk, tau2) - delay(Per, tau2));

  // Reactions:
  rPer: $EmptySet => Per; Vsp * (dClkF_tau1 / (K1 + dClkF_tau1)) * CELL;
  rdClk: $EmptySet => dClk; CELL * Vsc * (K2 / (K2 + dClkF_tau2));
  rPerD: Per => $EmptySet; kdc * Per * CELL;
  rdClkD: dClk => $EmptySet; kdp * dClk * CELL;

  // Species initializations:
  EmptySet = 0;
  Per = 5e-16;
  dClk = 1e-16;

  // Compartment initializations:
  CELL = 1e-15;

  // Variable initializations:
  tau1 = 10;
  tau2 = 10;
  Vsp = 0.5;
  K1 = 0.3;
  Vsc = 0.25;
  K2 = 0.1;
  kdc = 0.5;
  kdp = 0.5;

  //Other declarations:
  var dClkF_tau1, dClkF_tau2;

  //Display Names:
  dClkF is "free dClk";
  rPer is "Per production";
  rdClk is "dClk production";
  rPerD is "Per degradation";
  rdClkD is "dClk degradation";
end
