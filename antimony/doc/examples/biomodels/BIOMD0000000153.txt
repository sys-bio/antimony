model model_0000001()

  // Compartments and Species:
  compartment Spine;
  species D in Spine, CDK5 in Spine, D_CDK5 in Spine, D75 in Spine, CK1 in Spine;
  species D_CK1 in Spine, D137 in Spine, PKA in Spine, D_PKA in Spine, D34 in Spine;
  species D34_CDK5 in Spine, D34_CK1 in Spine, PP2B in Spine, D34_PP2B in Spine;
  species D34_75 in Spine, D34_137 in Spine, D75CK1 in Spine, D75_PKA in Spine;
  species PP2A in Spine, D75_PP2A in Spine, PP2AP in Spine, D75_PP2AP in Spine;
  species D75_137 in Spine, D137_CDK5 in Spine, D137_PKA in Spine, D137_PP2C in Spine;
  species PP2C in Spine, D34_75_CK1 in Spine, D34_137_CDK5 in Spine, D34_75_137 in Spine;
  species D75_137_PKA in Spine, D34_75_PP2B in Spine, D34_137_PP2B in Spine;
  species D34_75_137_PP2B in Spine, D34_75_PP2A in Spine, D75_137_PP2A in Spine;
  species D34_75_137_PP2A in Spine, D34_75_PP2AP in Spine, D75_137_PP2AP in Spine;
  species D34_75_137_PP2AP in Spine, D34_137_PP2C in Spine, D75_137_PP2C in Spine;
  species PDE in Spine, PP2Binactive in Spine, D34_75_137_PP2C in Spine, CK1P in Spine;
  species CK1P_PP2B in Spine, PDE_PKA in Spine, PDEP in Spine, PP2A_PKA in Spine;
  species Ca in Spine, PP2BinactiveCa2 in Spine, R2C2 in Spine, cAMP in Spine;
  species cAMP_R2C2 in Spine, cAMP2_R2C2 in Spine, cAMP3_R2C2 in Spine, cAMP4_R2C2 in Spine;
  species cAMP4_R2C in Spine, cAMP4_R2 in Spine, cAMP_PDE in Spine, AMP in Spine;
  species cAMP_PDEP in Spine, PP2ACa in Spine, D34_75_PP2ACa in Spine, D34_75_137_PP2ACa in Spine;
  species D75_PP2ACa in Spine, D75_137_PP2ACa in Spine, D34_75_PP2APCa in Spine;
  species PP2APCa in Spine, D34_75_137_PP2APCa in Spine, D75_PP2APCa in Spine;
  species D75_137_PP2APCa in Spine, PP2ACa_PKA in Spine, Empty in Spine;

  // Reactions:
  von1: D + CDK5 -> D_CDK5; Spine * von1_kon1 * D * CDK5;
  voff1: D_CDK5 -> D + CDK5; Spine * D_CDK5 * voff1_koff1;
  vcat1: D_CDK5 -> D75 + CDK5; Spine * D_CDK5 * vcat1_kcat1;
  von2: D + CK1 -> D_CK1; Spine * D * CK1 * von2_kon2;
  voff2: D_CK1 -> D + CK1; Spine * voff2_koff2 * D_CK1;
  vcat2: D_CK1 -> D137 + CK1; Spine * vcat2_kcat2 * D_CK1;
  von3: D + PKA -> D_PKA; Spine * D * PKA * von3_kon3;
  voff3: D_PKA -> D + PKA; Spine * D_PKA * voff3_koff3;
  vcat3: D_PKA -> D34 + PKA; Spine * D_PKA * vcat3_kcat3;
  von4: D34 + CDK5 -> D34_CDK5; Spine * D34 * CDK5 * von4_kon4;
  von5: D34 + CK1 -> D34_CK1; Spine * D34 * CK1 * von5_kon5;
  von6: D34 + PP2B -> D34_PP2B; Spine * D34 * PP2B * von6_kon6;
  voff4: D34_CDK5 -> D34 + CDK5; Spine * D34_CDK5 * voff4_koff4;
  vcat4: D34_CDK5 -> D34_75 + CDK5; Spine * D34_CDK5 * vcat4_kcat4;
  voff5: D34_CK1 -> D34 + CK1; Spine * D34_CK1 * voff5_koff5;
  vcat5: D34_CK1 -> D34_137 + CK1; Spine * D34_CK1 * vcat5_kcat5;
  vcat6: D34_PP2B -> D + PP2B; Spine * D34_PP2B * vcat6_kcat6;
  voff6: D34_PP2B -> D34 + PP2B; Spine * D34_PP2B * voff6_koff6;
  von7: D75 + CK1 -> D75CK1; Spine * D75 * CK1 * von7_kon7;
  von8: D75 + PKA -> D75_PKA; Spine * D75 * PKA * von8_kon8;
  von9: D75 + PP2A -> D75_PP2A; Spine * D75 * PP2A * von9_kon9;
  von10: D75 + PP2AP -> D75_PP2AP; Spine * D75 * PP2AP * von10_kon10;
  voff7: D75CK1 -> D75 + CK1; Spine * D75CK1 * voff7_koff7;
  vcat7: D75CK1 -> CK1 + D75_137; Spine * D75CK1 * vcat7_kcat7;
  vcat8: D75_PKA -> D34_75 + PKA; Spine * D75_PKA * vcat8_kcat8;
  voff8: D75_PKA -> D75 + PKA; Spine * D75_PKA * voff8_koff8;
  vcat9: D75_PP2A -> D + PP2A; Spine * D75_PP2A * vcat9_kcat9;
  voff9: D75_PP2A -> D75 + PP2A; Spine * D75_PP2A * voff9_koff9;
  vcat10: D75_PP2AP -> D + PP2AP; Spine * D75_PP2AP * vcat10_kcat10;
  voff10: D75_PP2AP -> D75 + PP2AP; Spine * D75_PP2AP * voff10_koff10;
  von11: D137 + CDK5 -> D137_CDK5; Spine * D137 * CDK5 * von11_kon11;
  von12: D137 + PKA -> D137_PKA; Spine * D137 * PKA * von12_kon12;
  von13: D137 + PP2C -> D137_PP2C; Spine * D137 * PP2C * von13_kon13;
  voff11: D137_CDK5 -> D137 + CDK5; Spine * D137_CDK5 * voff11_koff11;
  vcat11: D137_CDK5 -> D75_137 + CDK5; Spine * D137_CDK5 * vcat11_kcat11;
  voff12: D137_PKA -> D137 + PKA; Spine * D137_PKA * voff12_koff12;
  vcat12: D137_PKA -> D34_137 + PKA; Spine * D137_PKA * vcat12_kcat12;
  vcat13: D137_PP2C -> D + PP2C; Spine * D137_PP2C * vcat13_kcat13;
  voff13: D137_PP2C -> D137 + PP2C; Spine * D137_PP2C * voff13_koff13;
  von14: D34_75 + CK1 -> D34_75_CK1; Spine * D34_75 * CK1 * von14_kon14;
  von18: D34_137 + CDK5 -> D34_137_CDK5; Spine * D34_137 * CDK5 * von18_kon18;
  voff18: D34_137_CDK5 -> D34_137 + CDK5; Spine * D34_137_CDK5 * voff18_koff18;
  voff14: D34_75_CK1 -> D34_75 + CK1; Spine * D34_75_CK1 * voff14_koff14;
  vcat14: D34_75_CK1 -> D34_75_137 + CK1; Spine * D34_75_CK1 * vcat14_kcat14;
  vcat18: D34_137_CDK5 -> D34_75_137 + CDK5; Spine * D34_137_CDK5 * vcat18_kcat18;
  von21: D75_137 + PKA -> D75_137_PKA; Spine * D75_137 * PKA * von21_kon21;
  vcat21: D75_137_PKA -> D34_75_137 + PKA; Spine * D75_137_PKA * vcat21_kcat21;
  voff21: D75_137_PKA -> D75_137 + PKA; Spine * D75_137_PKA * voff21_koff21;
  von17: D34_75 + PP2B -> D34_75_PP2B; Spine * D34_75 * PP2B * von17_kon17;
  voff17: D34_75_PP2B -> D34_75 + PP2B; Spine * D34_75_PP2B * voff17_koff17;
  vcat17: D34_75_PP2B -> D75 + PP2B; Spine * D34_75_PP2B * vcat17_kcat17;
  von19: D34_137 + PP2B -> D34_137_PP2B; Spine * D34_137 * PP2B * von19_kon19;
  vcat19: D34_137_PP2B -> D137 + PP2B; Spine * D34_137_PP2B * vcat19_kcat19;
  voff19: D34_137_PP2B -> D34_137 + PP2B; Spine * D34_137_PP2B * voff19_koff19;
  von27: D34_75_137 + PP2B -> D34_75_137_PP2B; Spine * D34_75_137 * PP2B * von27_kon27;
  voff27: D34_75_137_PP2B -> D34_75_137 + PP2B; Spine * D34_75_137_PP2B * voff27_koff27;
  vcat27: D34_75_137_PP2B -> D75_137 + PP2B; Spine * D34_75_137_PP2B * vcat27_kcat27;
  von15: D34_75 + PP2A -> D34_75_PP2A; Spine * D34_75 * PP2A * von15_kon15;
  vcat15: D34_75_PP2A -> D34 + PP2A; Spine * D34_75_PP2A * vcat15_kcat15;
  voff15: D34_75_PP2A -> D34_75 + PP2A; Spine * D34_75_PP2A * voff15_koff15;
  von22: D75_137 + PP2A -> D75_137_PP2A; Spine * D75_137 * PP2A * von22_kon22;
  vcat22: D75_137_PP2A -> D137 + PP2A; Spine * D75_137_PP2A * vcat22_kcat22;
  voff22: D75_137_PP2A -> D75_137 + PP2A; Spine * D75_137_PP2A * voff22_koff22;
  von25: D34_75_137 + PP2A -> D34_75_137_PP2A; Spine * D34_75_137 * PP2A * von25_kon25;
  vcat25: D34_75_137_PP2A -> D34_137 + PP2A; Spine * D34_75_137_PP2A * vcat25_kcat25;
  voff25: D34_75_137_PP2A -> D34_75_137 + PP2A; Spine * D34_75_137_PP2A * voff25_koff25;
  von16: D34_75 + PP2AP -> D34_75_PP2AP; Spine * D34_75 * PP2AP * von16_kon16;
  vcat16: D34_75_PP2AP -> D34 + PP2AP; Spine * D34_75_PP2AP * vcat16_kcat16;
  voff16: D34_75_PP2AP -> D34_75 + PP2AP; Spine * D34_75_PP2AP * voff16_koff16;
  von23: D75_137 + PP2AP -> D75_137_PP2AP; Spine * D75_137 * PP2AP * von23_kon23;
  vcat23: D75_137_PP2AP -> D137 + PP2AP; Spine * D75_137_PP2AP * vcat23_kcat23;
  voff23: D75_137_PP2AP -> D75_137 + PP2AP; Spine * D75_137_PP2AP * voff23_koff23;
  vcat26: D34_75_137_PP2AP -> D34_137 + PP2AP; Spine * D34_75_137_PP2AP * vcat26_kcat26;
  von26: D34_75_137 + PP2AP -> D34_75_137_PP2AP; Spine * D34_75_137 * PP2AP * von26_kon26;
  voff26: D34_75_137_PP2AP -> D34_75_137 + PP2AP; Spine * D34_75_137_PP2AP * voff26_koff26;
  von20: D34_137 + PP2C -> D34_137_PP2C; Spine * D34_137 * PP2C * von20_kon20;
  vcat20: D34_137_PP2C -> D34 + PP2C; Spine * D34_137_PP2C * vcat20_kcat20;
  voff20: D34_137_PP2C -> D34_137 + PP2C; Spine * D34_137_PP2C * voff20_koff20;
  von24: D75_137 + PP2C -> D75_137_PP2C; Spine * D75_137 * PP2C * von24_kon24;
  vcat24: D75_137_PP2C -> D75 + PP2C; Spine * D75_137_PP2C * vcat24_kcat24;
  voff24: D75_137_PP2C -> D75_137 + PP2C; Spine * D75_137_PP2C * voff24_koff24;
  von28: D34_75_137 + PP2C -> D34_75_137_PP2C; Spine * D34_75_137 * PP2C * von28_kon28;
  vcat28: D34_75_137_PP2C -> D34_75 + PP2C; Spine * D34_75_137_PP2C * vcat28_kcat28;
  voff28: D34_75_137_PP2C -> D34_75_137 + PP2C; Spine * D34_75_137_PP2C * voff28_koff28;
  von29: CK1P + PP2B -> CK1P_PP2B; Spine * CK1P * PP2B * von29_kon29;
  voff29: CK1P_PP2B -> CK1P + PP2B; Spine * CK1P_PP2B * voff29_koff29;
  vcat29: CK1P_PP2B -> CK1 + PP2B; Spine * CK1P_PP2B * vcat29_kcat29;
  vcat30: CK1 -> CK1P; Spine * CK1 * vcat30_kcat30;
  von31: PDE + PKA -> PDE_PKA; Spine * PDE * PKA * von31_kon31;
  vcat31: PDE_PKA -> PDEP + PKA; Spine * PDE_PKA * vcat31_kcat31;
  voff31: PDE_PKA -> PDE + PKA; Spine * PDE_PKA * voff31_koff31;
  vcat32: PDEP -> PDE; Spine * PDEP * vcat32_kcat32;
  von33: PP2A + PKA -> PP2A_PKA; Spine * PP2A * PKA * von33_kon33;
  voff33: PP2A_PKA -> PP2A + PKA; Spine * PP2A_PKA * voff33_koff33;
  vcat33: PP2A_PKA -> PP2AP + PKA; Spine * PP2A_PKA * vcat33_kcat33;
  vcat34: PP2AP -> PP2A; Spine * PP2AP * vcat34_kcat34;
  von35: PP2Binactive + 2Ca -> PP2BinactiveCa2; Spine * PP2Binactive * Ca * Ca * von35_kon35;
  von36: PP2BinactiveCa2 + 2Ca -> PP2B; Spine * PP2BinactiveCa2 * Ca * Ca * von36_kon36;
  voff35: PP2BinactiveCa2 -> PP2Binactive + 2Ca; Spine * PP2BinactiveCa2 * voff35_koff35;
  voff36: PP2B -> PP2BinactiveCa2 + 2Ca; Spine * PP2B * voff36_koff36;
  von37: R2C2 + cAMP -> cAMP_R2C2; Spine * R2C2 * cAMP * von37_kon37;
  von38: cAMP_R2C2 + cAMP -> cAMP2_R2C2; Spine * cAMP_R2C2 * cAMP * von38_kon38;
  von39: cAMP2_R2C2 + cAMP -> cAMP3_R2C2; Spine * cAMP2_R2C2 * cAMP * von39_kon39;
  von40: cAMP3_R2C2 + cAMP -> cAMP4_R2C2; Spine * cAMP3_R2C2 * cAMP * von40_kon40;
  voff37: cAMP_R2C2 -> R2C2 + cAMP; Spine * cAMP_R2C2 * voff37_koff37;
  voff38: cAMP2_R2C2 -> cAMP_R2C2 + cAMP; Spine * cAMP2_R2C2 * voff38_koff38;
  voff39: cAMP3_R2C2 -> cAMP2_R2C2 + cAMP; Spine * cAMP3_R2C2 * voff39_koff39;
  voff40: cAMP4_R2C2 -> cAMP3_R2C2 + cAMP; Spine * cAMP4_R2C2 * voff40_koff40;
  von41: cAMP4_R2C + PKA -> cAMP4_R2C2; Spine * cAMP4_R2C * PKA * von41_kon41;
  voff41: cAMP4_R2C2 -> cAMP4_R2C + PKA; Spine * cAMP4_R2C2 * voff41_koff41;
  von42: cAMP4_R2 + PKA -> cAMP4_R2C; Spine * cAMP4_R2 * PKA * von42_kon42;
  von43: cAMP4_R2C -> cAMP4_R2 + PKA; Spine * cAMP4_R2C * von43_kon43;
  von44: cAMP + PDE -> cAMP_PDE; Spine * cAMP * PDE * von44_kon44;
  voff44: cAMP_PDE -> cAMP + PDE; Spine * cAMP_PDE * voff44_koff44;
  vcat44: cAMP_PDE -> AMP + PDE; Spine * cAMP_PDE * vcat44_kcat44;
  von45: cAMP + PDEP -> cAMP_PDEP; Spine * cAMP * PDEP * von45_kon45;
  voff45: cAMP_PDEP -> cAMP + PDEP; Spine * cAMP_PDEP * voff45_koff45;
  vcat45: cAMP_PDEP -> AMP + PDEP; Spine * cAMP_PDEP * vcat45_kcat45;
  v57: Empty -> Ca; Spine * k57;
  v58: Ca -> Empty; Spine * Ca * v58_k58;
  von46: D34_75 + PP2ACa -> D34_75_PP2ACa; Spine * D34_75 * PP2ACa * von46_kon46;
  von47: D34_75_137 + PP2ACa -> D34_75_137_PP2ACa; Spine * D34_75_137 * PP2ACa * von47_kon47;
  vcat47: D34_75_137_PP2ACa -> D34_137 + PP2ACa; Spine * D34_75_137_PP2ACa * vcat47_kcat47;
  voff47: D34_75_137_PP2ACa -> D34_75_137 + PP2ACa; Spine * D34_75_137_PP2ACa * voff47_koff47;
  vcat46: D34_75_PP2ACa -> D34 + PP2ACa; Spine * D34_75_PP2ACa * vcat46_kcat46;
  voff46: D34_75_PP2ACa -> D34_75 + PP2ACa; Spine * D34_75_PP2ACa * voff46_koff46;
  von48: D75 + PP2ACa -> D75_PP2ACa; Spine * D75 * PP2ACa * von48_kon48;
  von49: D75_137 + PP2ACa -> D75_137_PP2ACa; Spine * D75_137 * PP2ACa * von49_kon49;
  vcat49: D75_137_PP2ACa -> D137 + PP2ACa; Spine * D75_137_PP2ACa * vcat49_kcat49;
  voff49: D75_137_PP2ACa -> D75_137 + PP2ACa; Spine * D75_137_PP2ACa * voff49_koff49;
  vcat48: D75_PP2ACa -> D + PP2ACa; Spine * D75_PP2ACa * vcat48_kcat48;
  voff48: D75_PP2ACa -> D75 + PP2ACa; Spine * D75_PP2ACa * voff48_koff48;
  von50: D34_75 + PP2APCa -> D34_75_PP2APCa; Spine * D34_75 * PP2APCa * von50_kon50;
  von51: D34_75_137 + PP2APCa -> D34_75_137_PP2APCa; Spine * D34_75_137 * PP2APCa * von51_kon51;
  vcat51: D34_75_137_PP2APCa -> PP2APCa + D34_137; Spine * D34_75_137_PP2APCa * vcat51_kcat51;
  voff51: D34_75_137_PP2APCa -> D34_75_137 + PP2APCa; Spine * D34_75_137_PP2APCa * voff51_koff51;
  vcat50: D34_75_PP2APCa -> D34 + PP2APCa; Spine * D34_75_PP2APCa * vcat50_kcat50;
  voff50: D34_75_PP2APCa -> D34_75 + PP2APCa; Spine * D34_75_PP2APCa * voff50_koff50;
  von52: D75 + PP2APCa -> D75_PP2APCa; Spine * D75 * PP2APCa * von52_kon52;
  von53: D75_137 + PP2APCa -> D75_137_PP2APCa; Spine * D75_137 * PP2APCa * von53_kon53;
  vcat53: D75_137_PP2APCa -> D137 + PP2APCa; Spine * D75_137_PP2APCa * vcat53_kcat53;
  voff53: D75_137_PP2APCa -> D75_137 + PP2APCa; Spine * D75_137_PP2APCa * voff53_koff53;
  vcat52: D75_PP2APCa -> D + PP2APCa; Spine * D75_PP2APCa * vcat52_kcat52;
  voff52: D75_PP2APCa -> D75 + PP2APCa; Spine * D75_PP2APCa * voff52_koff52;
  von54: Ca + PP2A -> PP2ACa; Spine * PP2A * Ca * von54_kon54;
  voff54: PP2ACa -> PP2A + Ca; Spine * PP2ACa * voff54_koff54;
  von55: PP2ACa + PKA -> PP2ACa_PKA; Spine * PKA * PP2ACa * von55_kon55;
  vcat55: PP2ACa_PKA -> PP2APCa + PKA; Spine * PP2ACa_PKA * vcat55_kcat55;
  von56: PP2AP + Ca -> PP2APCa; Spine * PP2AP * Ca * von56_kon56;
  voff56: PP2APCa -> PP2AP + Ca; Spine * PP2APCa * voff56_koff56;
  vcat56: PP2APCa -> PP2ACa; Spine * PP2APCa * vcat56_kcat56;
  voff55: PP2ACa_PKA -> PP2ACa + PKA; Spine * PP2ACa_PKA * voff55_koff55;

  // Events:
  cAMP_pulse: @geq(time, cAMP_delay): cAMP = 6.600000e-06;
  ca_on1: @geq(time, cAMP_delay + cAMP_Ca_delay): k57 = kon_high;
  ca_on2: @geq(time, cAMP_delay + cAMP_Ca_delay + 1 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_off1: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration): k57 = kon_low;
  Ca_on3: @geq(time, cAMP_delay + cAMP_Ca_delay + 2 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on4: @geq(time, cAMP_delay + cAMP_Ca_delay + 3 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on5: @geq(time, cAMP_delay + cAMP_Ca_delay + 4 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on6: @geq(time, cAMP_delay + cAMP_Ca_delay + 5 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on7: @geq(time, cAMP_delay + cAMP_Ca_delay + 6 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on8: @geq(time, cAMP_delay + cAMP_Ca_delay + 7 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on9: @geq(time, cAMP_delay + cAMP_Ca_delay + 8 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_on10: @geq(time, cAMP_delay + cAMP_Ca_delay + 9 * (spike_duration + spike_interval)): k57 = kon_high;
  ca_off2: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 1 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off3: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 2 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off4: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 3 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off5: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 4 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off6: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 5 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off7: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 6 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off8: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 7 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off9: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 8 * (spike_interval + spike_duration)): k57 = kon_low;
  ca_off10: @geq(time, cAMP_delay + cAMP_Ca_delay + spike_duration + 9 * (spike_interval + spike_duration)): k57 = kon_low;

  // Species initializations:
  D = 4.98e-06;
  CDK5 = 2e-07;
  D_CDK5 = 0;
  D75 = 0;
  CK1 = 1.66e-07;
  D_CK1 = 0;
  D137 = 0;
  PKA = 0;
  D_PKA = 0;
  D34 = 0;
  D34_CDK5 = 0;
  D34_CK1 = 0;
  PP2B = 0;
  D34_PP2B = 0;
  D34_75 = 0;
  D34_137 = 0;
  D75CK1 = 0;
  D75_PKA = 0;
  PP2A = 2e-07;
  D75_PP2A = 0;
  PP2AP = 0;
  D75_PP2AP = 0;
  D75_137 = 0;
  D137_CDK5 = 0;
  D137_PKA = 0;
  D137_PP2C = 0;
  PP2C = 1.33e-07;
  D34_75_CK1 = 0;
  D34_137_CDK5 = 0;
  D34_75_137 = 0;
  D75_137_PKA = 0;
  D34_75_PP2B = 0;
  D34_137_PP2B = 0;
  D34_75_137_PP2B = 0;
  D34_75_PP2A = 0;
  D75_137_PP2A = 0;
  D34_75_137_PP2A = 0;
  D34_75_PP2AP = 0;
  D75_137_PP2AP = 0;
  D34_75_137_PP2AP = 0;
  D34_137_PP2C = 0;
  D75_137_PP2C = 0;
  PDE = 2e-06;
  PP2Binactive = 3.32e-07;
  D34_75_137_PP2C = 0;
  CK1P = 0;
  CK1P_PP2B = 0;
  PDE_PKA = 0;
  PDEP = 0;
  PP2A_PKA = 0;
  Ca = 0;
  PP2BinactiveCa2 = 0;
  R2C2 = 6.64e-06;
  cAMP = 0;
  cAMP_R2C2 = 0;
  cAMP2_R2C2 = 0;
  cAMP3_R2C2 = 0;
  cAMP4_R2C2 = 0;
  cAMP4_R2C = 0;
  cAMP4_R2 = 0;
  cAMP_PDE = 0;
  AMP = 0;
  cAMP_PDEP = 0;
  PP2ACa = 0;
  D34_75_PP2ACa = 0;
  D34_75_137_PP2ACa = 0;
  D75_PP2ACa = 0;
  D75_137_PP2ACa = 0;
  D34_75_PP2APCa = 0;
  PP2APCa = 0;
  D34_75_137_PP2APCa = 0;
  D75_PP2APCa = 0;
  D75_137_PP2APCa = 0;
  PP2ACa_PKA = 0;
  Empty = 0;

  // Compartments initializations:
  Spine = 1e-15;

  // Other initializations:
  cAMP_delay = 400;
  cAMP_Ca_delay = 50;
  k57 = 2.5e-08;
  kon_high = 6.6e-06;
  spike_duration = 2;
  spike_interval = 2;
  kon_low = 2.5e-08;
  von1_kon1 = 5600000;
  voff1_koff1 = 12;
  vcat1_kcat1 = 3;
  von2_kon2 = 4400000;
  voff2_koff2 = 12;
  vcat2_kcat2 = 3;
  von3_kon3 = 5600000;
  voff3_koff3 = 10.8;
  vcat3_kcat3 = 2.7;
  von4_kon4 = 5600000;
  von5_kon5 = 4400000;
  von6_kon6 = 10000000;
  voff4_koff4 = 12;
  vcat4_kcat4 = 3;
  voff5_koff5 = 12;
  vcat5_kcat5 = 3;
  vcat6_kcat6 = 4;
  voff6_koff6 = 16;
  von7_kon7 = 4400000;
  von8_kon8 = 5600000;
  von9_kon9 = 3800000;
  von10_kon10 = 17000000;
  voff7_koff7 = 12;
  vcat7_kcat7 = 3;
  vcat8_kcat8 = 0;
  voff8_koff8 = 10.8;
  vcat9_kcat9 = 10;
  voff9_koff9 = 24;
  vcat10_kcat10 = 24;
  voff10_koff10 = 40;
  von11_kon11 = 5600000;
  von12_kon12 = 5600000;
  von13_kon13 = 7500000;
  voff11_koff11 = 12;
  vcat11_kcat11 = 3;
  voff12_koff12 = 10.8;
  vcat12_kcat12 = 2.7;
  vcat13_kcat13 = 3;
  voff13_koff13 = 12;
  von14_kon14 = 4400000;
  von18_kon18 = 5600000;
  voff18_koff18 = 12;
  voff14_koff14 = 12;
  vcat14_kcat14 = 3;
  vcat18_kcat18 = 3;
  von21_kon21 = 5600000;
  vcat21_kcat21 = 0;
  voff21_koff21 = 10.8;
  von17_kon17 = 10000000;
  voff17_koff17 = 1600;
  vcat17_kcat17 = 4;
  von19_kon19 = 75000;
  vcat19_kcat19 = 0.03;
  voff19_koff19 = 0.12;
  von27_kon27 = 75000;
  voff27_koff27 = 120;
  vcat27_kcat27 = 0.03;
  von15_kon15 = 3800000;
  vcat15_kcat15 = 10;
  voff15_koff15 = 24;
  von22_kon22 = 3800000;
  vcat22_kcat22 = 10;
  voff22_koff22 = 24;
  von25_kon25 = 3800000;
  vcat25_kcat25 = 10;
  voff25_koff25 = 24;
  von16_kon16 = 17000000;
  vcat16_kcat16 = 24;
  voff16_koff16 = 40;
  von23_kon23 = 17000000;
  vcat23_kcat23 = 24;
  voff23_koff23 = 40;
  vcat26_kcat26 = 24;
  von26_kon26 = 17000000;
  voff26_koff26 = 40;
  von20_kon20 = 7500000;
  vcat20_kcat20 = 3;
  voff20_koff20 = 12;
  von24_kon24 = 7500000;
  vcat24_kcat24 = 3;
  voff24_koff24 = 12;
  von28_kon28 = 7500000;
  vcat28_kcat28 = 3;
  voff28_koff28 = 12;
  von29_kon29 = 30000000;
  voff29_koff29 = 24;
  vcat29_kcat29 = 6;
  vcat30_kcat30 = 1;
  von31_kon31 = 6000000;
  vcat31_kcat31 = 9;
  voff31_koff31 = 36;
  vcat32_kcat32 = 0.1;
  von33_kon33 = 10000000;
  voff33_koff33 = 16;
  vcat33_kcat33 = 4;
  vcat34_kcat34 = 5;
  von35_kon35 = 1e+15;
  von36_kon36 = 3e+15;
  voff35_koff35 = 1;
  voff36_koff36 = 1;
  von37_kon37 = 54000000;
  von38_kon38 = 54000000;
  von39_kon39 = 75000000;
  von40_kon40 = 75000000;
  voff37_koff37 = 33;
  voff38_koff38 = 33;
  voff39_koff39 = 110;
  voff40_koff40 = 32.5;
  von41_kon41 = 18000000;
  voff41_koff41 = 60;
  von42_kon42 = 18000000;
  von43_kon43 = 60;
  von44_kon44 = 2520000;
  voff44_koff44 = 40;
  vcat44_kcat44 = 10;
  von45_kon45 = 5040000;
  voff45_koff45 = 80;
  vcat45_kcat45 = 20;
  v58_k58 = 1.7;
  von46_kon46 = 3800000;
  von47_kon47 = 3800000;
  vcat47_kcat47 = 10;
  voff47_koff47 = 6;
  vcat46_kcat46 = 10;
  voff46_koff46 = 6;
  von48_kon48 = 3800000;
  von49_kon49 = 3800000;
  vcat49_kcat49 = 10;
  voff49_koff49 = 6;
  vcat48_kcat48 = 10;
  voff48_koff48 = 6;
  von50_kon50 = 17000000;
  von51_kon51 = 17000000;
  vcat51_kcat51 = 24;
  voff51_koff51 = 10;
  vcat50_kcat50 = 24;
  voff50_koff50 = 10;
  von52_kon52 = 17000000;
  von53_kon53 = 17000000;
  vcat53_kcat53 = 24;
  voff53_koff53 = 10;
  vcat52_kcat52 = 24;
  voff52_koff52 = 10;
  von54_kon54 = 200000;
  voff54_koff54 = 1;
  von55_kon55 = 10000000;
  vcat55_kcat55 = 4;
  von56_kon56 = 200000;
  voff56_koff56 = 1;
  vcat56_kcat56 = 5;
  voff55_koff55 = 16;

  var k57;
  const Empty in Spine;
end
