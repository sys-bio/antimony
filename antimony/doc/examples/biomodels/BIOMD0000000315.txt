//Created by libAntimony v2.6.0
model *Oligator()

  // Compartments and Species:
  compartment sample;
  species T1 in sample, alpha in sample, alpha_T1 in sample, alpha_T1_alpha in sample;
  species T1_alpha in sample, alpha_alpha_T1 in sample, T2 in sample, alpha_T2 in sample;
  species alpha_T2_beta in sample, beta in sample, T2_beta in sample, alpha_beta_T2 in sample;
  species T3 in sample, beta_T3 in sample, beta_T3_Inh in sample, Inh in sample;
  species T3_Inh in sample, beta_Inh_T3 in sample, Inh_T1 in sample, $empty in sample;

  // Assignment Rules:
  Bp_concentration := 11*(alpha_T1 + T1_alpha + alpha_T2 + T2_beta + beta_T3) + 16*(T3_Inh + Inh_T1) + 22*(alpha_T1_alpha + alpha_alpha_T1 + alpha_T2_beta + alpha_beta_T2) + 27*(beta_T3_Inh + beta_Inh_T3);
  fluorescence := -0.38 + 0.00093*(11*(alpha_T1 + T1_alpha + alpha_T2 + T2_beta + beta_T3) + 16*(T3_Inh + Inh_T1) + 22*(alpha_T1_alpha + alpha_alpha_T1 + alpha_T2_beta + alpha_beta_T2) + 27*(beta_T3_Inh + beta_Inh_T3));
  Inh_total := Inh + T3_Inh + beta_T3_Inh + Inh_T1;
  beta_total := beta + T2_beta + alpha_T2_beta + beta_T3 + beta_T3_Inh;
  alpha_total := alpha + alpha_T1 + T1_alpha + 2*alpha_T1_alpha + alpha_T2 + alpha_T2_beta + alpha_T2;

  // Reactions:
  ass_aa_l: T1 + alpha -> alpha_T1; sample*(k0d*T1*alpha - k0r*alpha_T1);
  m_ass_aa_lr: alpha_T1_alpha -> alpha + alpha_T1; sample*(k1d*alpha_T1_alpha - k1r*alpha*alpha_T1);
  m_ass_aa_r: T1_alpha -> T1 + alpha; sample*(k2d*T1_alpha - k2r*T1*alpha);
  m_ass_aa_rl: alpha_T1_alpha -> alpha + T1_alpha; sample*(k3d*alpha_T1_alpha - k3r*alpha*T1_alpha);
  pol_aa: alpha_T1 => alpha_alpha_T1; sample*k4d*alpha_T1;
  dis_aa: alpha_T1_alpha => alpha + alpha_alpha_T1; sample*k5d*alpha_T1_alpha;
  nick_aa: alpha_alpha_T1 => alpha_T1_alpha; sample*k6d*alpha_alpha_T1;
  ass_ab_l: alpha + T2 -> alpha_T2; sample*(k7d*alpha*T2 - k7r*alpha_T2);
  m_ass_ab_lr: alpha_T2_beta -> alpha_T2 + beta; sample*(k8d*alpha_T2_beta - k8r*alpha_T2*beta);
  m_ass_ab_r: T2_beta -> T2 + beta; sample*(k9d*T2_beta - k9r*T2*beta);
  m_ass_ab_rl: alpha_T2_beta -> alpha + T2_beta; sample*(k10d*alpha_T2_beta - k10r*alpha*T2_beta);
  pol_ab: alpha_T2 => alpha_beta_T2; sample*k11d*alpha_T2;
  dis_ab: alpha_T2_beta => beta + alpha_beta_T2; sample*k12d*alpha_T2_beta;
  nick_ab: alpha_beta_T2 => alpha_T2_beta; sample*k13d*alpha_beta_T2;
  ass_bc_l: beta + T3 -> beta_T3; sample*(k14d*beta*T3 - k14r*beta_T3);
  m_ass_bc_lr: beta_T3_Inh -> beta_T3 + Inh; sample*(k15d*beta_T3_Inh - k15r*beta_T3*Inh);
  ass_bc_r: T3 + Inh -> T3_Inh; sample*(k16d*T3*Inh - k16r*T3_Inh);
  ass_bc_rl: beta + T3_Inh -> beta_T3_Inh; sample*(k17d*beta*T3_Inh - k17r*beta_T3_Inh);
  pol_bc: beta_T3 => beta_Inh_T3; sample*k18d*beta_T3;
  dis_bc: beta_T3_Inh => Inh + beta_Inh_T3; sample*k19d*beta_T3_Inh;
  nick_bc: beta_Inh_T3 => beta_T3_Inh; sample*k20d*beta_Inh_T3;
  inh_ac: T1 + Inh -> Inh_T1; sample*(k21d*T1*Inh - k21r*Inh_T1);
  inh_displ_ac: T1_alpha + Inh -> alpha + Inh_T1; sample*(k22d*T1_alpha*Inh - k22r*alpha*Inh_T1);
  m_inh_displ_ca: alpha + Inh_T1 -> alpha_T1 + Inh; sample*(k23d*alpha*Inh_T1 - k23r*alpha_T1*Inh);
  exo_a: alpha -> $empty; sample*k24d*alpha;
  exo_b: beta -> $empty; sample*k25d*beta;
  exo_c: Inh -> $empty; sample*k26d*Inh;

  // Species initializations:
  T1 = 38.5;
  alpha = 10;
  alpha_T1 = 0;
  alpha_T1_alpha = 0;
  T1_alpha = 0;
  alpha_alpha_T1 = 0;
  T2 = 3.89;
  alpha_T2 = 0;
  alpha_T2_beta = 0;
  beta = 0;
  T2_beta = 0;
  alpha_beta_T2 = 0;
  T3 = 38.5;
  beta_T3 = 0;
  beta_T3_Inh = 0;
  Inh = 0;
  T3_Inh = 0;
  beta_Inh_T3 = 0;
  Inh_T1 = 0;
  empty = 0;

  // Compartment initializations:
  sample = 1;

  // Variable initializations:
  k0d = 0.0294;
  k0d has per_nM_per_min;
  k0r = 3.43457943925;
  k0r has per_min;
  k1d = 3.43457943925;
  k1d has per_min;
  k1r = 0.0294;
  k1r has per_nM_per_min;
  k2d = 3.43457943925;
  k2d has per_min;
  k2r = 0.0294;
  k2r has per_nM_per_min;
  k3d = 3.43457943925;
  k3d has per_min;
  k3r = 0.0294;
  k3r has per_nM_per_min;
  k4d = 15.2;
  k4d has per_min;
  k5d = 11.8408;
  k5d has per_min;
  k6d = 3.34;
  k6d has per_min;
  k7d = 0.0294;
  k7d has per_nM_per_min;
  k7r = 3.43457943925;
  k7r has per_min;
  k8d = 0.610714285714;
  k8d has per_min;
  k8r = 0.0171;
  k8r has per_nM_per_min;
  k9d = 0.610714285714;
  k9d has per_min;
  k9r = 0.0171;
  k9r has per_nM_per_min;
  k10d = 3.43457943925;
  k10d has per_min;
  k10r = 0.0294;
  k10r has per_nM_per_min;
  k11d = 11.8408;
  k11d has per_min;
  k12d = 9.2239832;
  k12d has per_min;
  k13d = 2.60186;
  k13d has per_min;
  k14d = 0.0171;
  k14d has per_nM_per_min;
  k14r = 0.610714285714;
  k14r has per_min;
  k15d = 0.00186296832954;
  k15d has per_min;
  k15r = 0.027;
  k15r has per_nM_per_min;
  k16d = 0.027;
  k16d has per_nM_per_min;
  k16r = 0.00186296832954;
  k16r has per_min;
  k17d = 0.0171;
  k17d has per_nM_per_min;
  k17r = 0.610714285714;
  k17r has per_min;
  k18d = 17.024;
  k18d has per_min;
  k19d = 5.566848;
  k19d has per_min;
  k20d = 3.2064;
  k20d has per_min;
  k21d = 0.027;
  k21d has per_nM_per_min;
  k21r = 0.00608108108108;
  k21r has per_min;
  k22d = 0.021546;
  k22d has per_nM_per_min;
  k22r = 4.15391351351e-005;
  k22r has per_nM_per_min;
  k23d = 4.15391351351e-005;
  k23d has per_nM_per_min;
  k23r = 0.021546;
  k23r has per_nM_per_min;
  k24d = 0.411;
  k24d has per_min;
  k25d = 0.485802;
  k25d has per_min;
  k26d = 1.7262;
  k26d has per_min;
  Bp_concentration has nM;
  Inh_total has nM;
  beta_total has nM;
  alpha_total has nM;

  // Other declarations:
  var Bp_concentration, fluorescence, Inh_total, beta_total, alpha_total;
  const sample, k0d, k0r, k1d, k1r, k2d, k2r, k3d, k3r, k4d, k5d, k6d, k7d;
  const k7r, k8d, k8r, k9d, k9r, k10d, k10r, k11d, k12d, k13d, k14d, k14r;
  const k15d, k15r, k16d, k16r, k17d, k17r, k18d, k19d, k20d, k21d, k21r;
  const k22d, k22r, k23d, k23r, k24d, k25d, k26d;

  // Unit definitions:
  unit time_unit = 60 second;
  unit substance = 1e-9 mole;
  unit nM = 1e-9 mole / litre;
  unit per_nM_per_min = litre / (1e-9 mole * 60 second);
  unit per_min = 1 / 60 second;

  // Display Names:
  time_unit is "min";
  substance is "nanomole";
  per_nM_per_min is "nM_per_min";
end
