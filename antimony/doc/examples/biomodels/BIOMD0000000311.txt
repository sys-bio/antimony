//Created by libAntimony v2.6.0
function goldbeter_koshland(v1, v2, J1, J2)
  (2*v1*J2)/(v2 - v1 + J1*v2 + J2*v1 + ((v2 - v1 + J1*v2 + J2*v1)^2 - 4*(v2 - v1)*v1*J2)^(1/2));
end


model *Tyson2003_Mutual_Activation()

  // Compartments and Species:
  compartment env;
  species R in env, $S in env, $Ep in env, $E in env;

  // Assignment Rules:
  Ep := goldbeter_koshland(k3*R, k4, J3, J4);
  E := Et - Ep;

  // Reactions:
  r1:  => R; env*k0*Ep;
  r2:  => R; env*k1*S;
  r3: R => ; env*k2*R;
  r4: $E => $Ep; (env*k3*R*E)/(J3 + E);
  r5: $Ep => $E; (env*k4*Ep)/(J4 + Ep);

  // Species initializations:
  R = 0;
  S = 0;

  // Compartment initializations:
  env = 1;

  // Variable initializations:
  k3 = 1;
  k3 has per_s;
  k4 = 0.2;
  k4 has M_per_s;
  J3 = 0.05;
  J3 has M;
  J4 = 0.05;
  J4 has M;
  Et = 1;
  Et has M;
  k0 = 0.4;
  k0 has per_s;
  k1 = 0.01;
  k1 has per_s;
  k2 = 1;
  k2 has per_s;

  // Other declarations:
  const env, k3, k4, J3, J4, Et, k0, k1, k2;

  // Unit definitions:
  unit time_unit = second;
  unit substance = mole;
  unit per_s = 1 / second;
  unit M_per_s = mole / (second * litre);
  unit M = mole / litre;
  unit per_M_per_s = litre / (mole * second);

  // Display Names:
  time_unit is "s";
  substance is "mole";
end
