<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="AntimonyDocumentation_files/filelist.xml">
<link rel=Edit-Time-Data href="AntimonyDocumentation_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Lucian</o:Author>
  <o:LastAuthor>Lucian</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>83</o:TotalTime>
  <o:LastPrinted>2015-10-10T00:05:00Z</o:LastPrinted>
  <o:Created>2015-10-10T00:05:00Z</o:Created>
  <o:LastSaved>2015-10-10T00:05:00Z</o:LastSaved>
  <o:Pages>22</o:Pages>
  <o:Words>6971</o:Words>
  <o:Characters>39741</o:Characters>
  <o:Lines>331</o:Lines>
  <o:Paragraphs>93</o:Paragraphs>
  <o:CharactersWithSpaces>46619</o:CharactersWithSpaces>
  <o:Version>15.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="AntimonyDocumentation_files/themedata.thmx">
<link rel=colorSchemeMapping
href="AntimonyDocumentation_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
   <w:EnableOpenTypeKerning/>
   <w:DontFlipMirrorIndents/>
   <w:OverrideTableStyleHps/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="371">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1107305727 0 0 415 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-520092929 1073806591 9 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h2
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 2 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h4
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Preformatted Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 2";
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Calibri Light",sans-serif;
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light",sans-serif;
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light",sans-serif;
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#1F4D78;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Preformatted";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;
	mso-bidi-font-family:Consolas;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:1434327012;
	mso-list-template-ids:-1995012258;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l0:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l0:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l0:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1
	{mso-list-id:1437021833;
	mso-list-template-ids:-944208940;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l1:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2
	{mso-list-id:1507134505;
	mso-list-template-ids:1898865624;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l2:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3
	{mso-list-id:2057705047;
	mso-list-template-ids:-1917542114;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l3:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:1.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l3:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:1.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:2.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:3.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.0in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:4.5in;
	mso-level-number-position:left;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US link=blue vlink=purple style='tab-interval:.5in'>

<div class=WordSection1>

<h2 align=center style='text-align:center'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="Picture_x0020_1" o:spid="_x0000_s1026" type="#_x0000_t75"
 style='position:absolute;left:0;text-align:left;margin-left:337.45pt;
 margin-top:-.05pt;width:201.75pt;height:201.75pt;z-index:251658240;
 visibility:visible;mso-wrap-style:square;mso-width-percent:0;
 mso-height-percent:0;mso-wrap-distance-left:9pt;mso-wrap-distance-top:0;
 mso-wrap-distance-right:9pt;mso-wrap-distance-bottom:0;
 mso-position-horizontal:absolute;mso-position-horizontal-relative:text;
 mso-position-vertical:absolute;mso-position-vertical-relative:text;
 mso-width-percent:0;mso-height-percent:0;mso-width-relative:margin;
 mso-height-relative:margin'>
 <v:imagedata src="AntimonyDocumentation_files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><span style='mso-ignore:vglayout;position:
absolute;z-index:251658240;left:0px;margin-left:450px;margin-top:0px;
width:269px;height:269px'><img width=269 height=269
src="AntimonyDocumentation_files/image002.png" v:shapes="Picture_x0020_1"></span><![endif]><span
style='font-size:48.0pt;mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>Antimony<o:p></o:p></span></h2>

<h2 align=center style='text-align:center'><span style='font-size:22.0pt;
mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>A
human-readable,<o:p></o:p></span></h2>

<h2 align=center style='text-align:center'><span class=GramE><span
style='font-size:22.0pt;mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>human-writable</span></span><span
style='font-size:22.0pt;mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>,<o:p></o:p></span></h2>

<h2 align=center style='text-align:center'><span class=GramE><span
style='font-size:22.0pt;mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>model</span></span><span
style='font-size:22.0pt;mso-bidi-font-size:18.0pt;mso-fareast-font-family:"Times New Roman"'>
definition language<o:p></o:p></span></h2>

<h4 align=center style='text-align:center'><span style='font-size:16.0pt;
mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman"'>v2.7, January,
2015<o:p></o:p></span></h4>

<h4 align=center style='text-align:center'><span style='font-size:26.0pt;
mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman"'>Documentation<o:p></o:p></span></h4>

<h4 align=center style='text-align:center'><span class=GramE><span
style='font-size:16.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman"'>by</span></span><span
style='font-size:16.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman"'>
Lucian Smith<o:p></o:p></span></h4>

<h3><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></h3>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Table of contents<o:p></o:p></span></h3>

<ul type=disc>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#intro"><span
     style='mso-fareast-font-family:"Times New Roman"'>Introduction</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#whatsnew"><span
     style='mso-fareast-font-family:"Times New Roman"'>What's New</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#speciesrxns"><span
     style='mso-fareast-font-family:"Times New Roman"'>Species and Reactions</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#modules"><span
     style='mso-fareast-font-family:"Times New Roman"'>Modules</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> <o:p></o:p></span></li>
 <ul type=circle>
  <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:
      auto;mso-list:l0 level2 lfo1;tab-stops:list 1.0in'><a href="#convfactors"><span
      style='mso-fareast-font-family:"Times New Roman"'>Module conversion
      factors</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
  <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:
      auto;mso-list:l0 level2 lfo1;tab-stops:list 1.0in'><a href="#deletions"><span
      style='mso-fareast-font-family:"Times New Roman"'>Submodel deletions</span></a><span
      style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 </ul>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#constvar"><span
     style='mso-fareast-font-family:"Times New Roman"'>Constant and variable
     symbols</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#compartments"><span
     style='mso-fareast-font-family:"Times New Roman"'>Compartments</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#events"><span
     style='mso-fareast-font-family:"Times New Roman"'>Events</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#asntrules"><span
     style='mso-fareast-font-family:"Times New Roman"'>Assignment Rules</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#raterules"><span
     style='mso-fareast-font-family:"Times New Roman"'>Rate Rules</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#display"><span
     style='mso-fareast-font-family:"Times New Roman"'>Display Names</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#comments"><span
     style='mso-fareast-font-family:"Times New Roman"'>Comments</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#units"><span
     style='mso-fareast-font-family:"Times New Roman"'>Units</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#dna"><span
     style='mso-fareast-font-family:"Times New Roman"'>DNA Strands</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#interactions"><span
     style='mso-fareast-font-family:"Times New Roman"'>Interactions</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#functions"><span
     style='mso-fareast-font-family:"Times New Roman"'>Function Definitions</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#files"><span
     style='mso-fareast-font-family:"Times New Roman"'>Other files</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#importexport"><span
     style='mso-fareast-font-family:"Times New Roman"'>Importing and Exporting
     Antimony Models</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l0 level1 lfo1;tab-stops:list .5in'><a href="#conversion"><span
     style='mso-fareast-font-family:"Times New Roman"'>Appendix: Converting
     between SBML and Antimony</span></a><span style='mso-fareast-font-family:
     "Times New Roman"'><o:p></o:p></span></li>
</ul>

<h3><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></h3>

<h3><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></h3>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Introduction<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Since
the advent of SBML (the Systems Biology Markup Language) computer models of
biological systems have been able to be transferred easily between different
labs and different computer programs without loss of specificity. But SBML was
not designed to be readable or writable by humans, only by computer programs,
so other programs have sprung up to allow users to more easily create the
models they need. Many of these programs are GUI-based, and allow drag-and-drop
editing of species and reactions, such as </span><a
href="http://sbw-app.org/jdesigner/"><span class=SpellE><span style='mso-fareast-font-family:
"Times New Roman"'>JDesigner</span></span></a><span style='mso-fareast-font-family:
"Times New Roman"'> and </span><a href="http://www.tinkercell.com/"><span
class=SpellE><span style='mso-fareast-font-family:"Times New Roman"'>TinkerCell</span></span></a><span
style='mso-fareast-font-family:"Times New Roman"'>. A few, like </span><a
href="http://sbw-app.org/jarnac/"><span class=SpellE><span style='mso-fareast-font-family:
"Times New Roman"'>Jarnac</span></span></a><span style='mso-fareast-font-family:
"Times New Roman"'>, take a text-based approach, and allow the creation of
models in a text editor. This has the advantage of being faster, more readily
cross-platform, and readable by others without translation. </span><a
href="http://antimony.sourceforge.net/"><span style='mso-fareast-font-family:
"Times New Roman"'>Antimony</span></a><span style='mso-fareast-font-family:
"Times New Roman"'> (so named because the chemical symbol of the element is </span><a
href="http://en.wikipedia.org/wiki/Antimony"><span style='mso-fareast-font-family:
"Times New Roman"'>'Sb'</span></a><span style='mso-fareast-font-family:"Times New Roman"'>)
was designed as a successor to <span class=SpellE>Jarnac's</span> model
definition language, with some new features that mesh with newer elements of
SBML, some new features we feel will be generally applicable, and some new
features that we hope will facilitate the creation of genetic networks in
particular. A programming library '<span class=SpellE>libAntimony</span>' was
developed in tandem with the language to allow computer translation of
Antimony-formatted models into SBML and other formats used by other computer
programs. The basic features of Antimony include the ability to: <o:p></o:p></span></p>

<ul type=disc>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l2 level1 lfo2;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Simply define </span><a href="#speciesrxns"><span
     style='mso-fareast-font-family:"Times New Roman"'>species, reactions,</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> </span><a
     href="#compartments"><span style='mso-fareast-font-family:"Times New Roman"'>compartments,</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> </span><a href="#events"><span
     style='mso-fareast-font-family:"Times New Roman"'>events,</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> and other elements of a
     biological model.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l2 level1 lfo2;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Package and re-use models as </span><a href="#modules"><span
     style='mso-fareast-font-family:"Times New Roman"'>modules</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> with defined or implied
     interfaces, and<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l2 level1 lfo2;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Create </span><a href="#modules"><span
     style='mso-fareast-font-family:"Times New Roman"'>'DNA strands'</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> whose elements can pass
     reaction rates to downstream elements, and inherit and modify reaction
     rates from upstream elements.<o:p></o:p></span></li>
</ul>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>What's New<o:p></o:p></span></h3>

<p>In the 2.7.1 release of Antimony, species marked &#8216;<span class=SpellE>hasOnlySubstanceUnits</span>=true&#8217;
in SBML now have a corresponding definition in Antimony: &#8216;species <span
class=SpellE>substanceOnly</span> S1, S2&#8217;.<span
style='mso-spacerun:yes'>&nbsp; </span></p>

<p>In addition, Antimony now supports the SBML &#8216;Flux Balance
Constraints&#8217; package (version 1), as well as constraints in general.<span
style='mso-spacerun:yes'>&nbsp; </span></p>

<p>In the 2.7 release of Antimony, <span class=SpellE>QTAntimony</span> got
several new improvements, including displayed line numbers, find/replace, and a
&#8216;go to line&#8217; option.<span style='mso-spacerun:yes'>&nbsp; </span>A
few new syntaxes were also added, including the ability to concisely define
elements plus their assignment rules (&#8216;species S1 in <span class=GramE>C
:=</span> 3+p&#8217;), and to define submodules with implied parameters
(&#8216;A: mod1(1,2)&#8217;).</p>

<p>In the 2.6 release of Antimony, some features of hierarchical translation
(deletions in particular) were made more robust, and a number of built-in
distribution functions were added, which are translated to SBML using the
&#8216;distributions&#8217; package, as well as using custom annotations</p>

<p>In the 2.5 release of Antimony, translation of Antimony concepts to and from
the <a
href="http://sbml.org/Documents/Specifications/SBML_Level_3/Packages/comp">Hierarchical
Model Composition</a> package was developed further to be much more robust, and
a new test system was added to ensure that Antimony's 'flattening' routine
(which exports plain SBML) matches <span class=SpellE>libSBML's</span>
flattening routine. </p>

<p>In the 2.4 release of Antimony, use of the <a
href="http://sbml.org/Documents/Specifications/SBML_Level_3/Packages/comp">Hierarchical
Model Composition</a> package constructs in the SBML translation became
standard, due to the package being fully accepted by the SBML community. </p>

<p>In the 2.2/2.3 release of Antimony, <a href="#units">units</a>, <a
href="#convfactors">conversion factors</a>, and <a href="#deletions">deletions</a>
were added. </p>

<p>In the 2.1 version of Antimony, the <a href="#files">'<code><span
style='font-size:10.0pt'>import</span></code>'</a> handling became much more
robust, and it became additionally possible to export hierarchical models using
the <a
href="http://sbml.org/Documents/Specifications/SBML_Level_3/Packages/comp">Hierarchical
Model Composition</a> package constructs for SBML level 3. </p>

<p>In the 2.0 version of Antimony, it became possible to export models as <a
href="#importexport"><span class=SpellE>CellML</span></a>. This requires the
use of the <span class=SpellE>CellML</span> API, which is now available as an
SDK. Hierarchical models are exported using <span class=SpellE>CellML's</span>
hierarchy, translated to accommodate their 'black box' requirements. </p>

<p><o:p>&nbsp;</o:p></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Species and
Reactions<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
simplest Antimony file may simply have a list of reactions containing species,
along with some initializations. Reactions are written as two lists of species,
separated by a '</span><code><span style='font-size:10.0pt'>-&gt;</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', and followed by a
semicolon: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 + E -&gt; ES;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Optionally,
you may provide a reaction rate for the reaction by including a mathematical
expression after the semicolon, followed by another semicolon: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 + E -&gt; ES; k1*<span
class=GramE>k2*</span>S1*E - k2*ES;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may also give the reaction a name by prepending the name followed by a colon: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; ES; k1*<span
class=GramE>k2*</span>S1*E - k2*ES;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
same effect can be achieved by setting the reaction rate separately, by
assigning the reaction rate to the reaction name with an '</span><code><span
style='font-size:10.0pt'>=</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>': <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; ES;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0 = k1*<span
class=GramE>k2*</span>S1*E - k2*ES;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may even define them in the opposite order-they are all ways of saying the same
thing. If you want, you can define a reaction to be irreversible by using '</span><code><span
style='font-size:10.0pt'>=&gt;</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' instead of '</span><code><span style='font-size:10.0pt'>-&gt;</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>': <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E =&gt; ES;</pre>

<p>However, if you additionally provide a reaction rate, that rate is not
checked to ensure that it is compatible with an irreversible reaction. </p>

<p>At this point, Antimony will make several assumptions about your model. It
will assume (and require) that all symbols that appear in the reaction itself
are species. Any symbol that appears elsewhere that is not used or defined as a
species is '<code><span style='font-size:10.0pt'>undefined</span></code>'; '<code><span
style='font-size:10.0pt'>undefined</span></code>' symbols may later be declared
or used as species or as '<code><span style='font-size:10.0pt'>formulas</span></code>',
Antimony's term for constants and packaged equations like SBML's assignment
rules. In the above example, k1 and <span class=GramE>k2</span> are (thus far)
undefined symbols, which may be assigned straightforwardly: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; ES; k1*<span
class=GramE>k2*</span>S1*E - k2*ES;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = 3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = 1.4;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>More
complicated expressions are also allowed, as are the creation of symbols which
exist only to simplify or clarify other expressions: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>pH</span> = 7;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k3 = -<span
class=GramE>log10(</span>pH);</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
initial concentrations of species are defined in exactly the same way as
formulas, and may be just as complex (or simple): <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 = 2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E = 3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>ES = S1 + E;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Order
for any of the above (and in general in Antimony) does not matter at all: you
may use a symbol before defining it, or define it before using it. As long as
you do not use the same symbol in an incompatible context (such as using the
same name as a reaction and a species), your resulting model will still be
valid. Antimony files written by <span class=SpellE>libAntimony</span> will
adhere to a standard format of defining symbols, but this is not required. A
complete (if simple) model <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; ES; k1*<span
class=GramE>k2*</span>S1*E - k2*ES;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = 3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = 1.4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 = 30.4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>E<span style='mso-spacerun:yes'>&nbsp; </span>=</span> 1.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>ES = 2.1;</pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Modules<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Antimony
input files may define several different models, and may use previously-defined
models as parts of newly-defined models. Each different model is known as a '</span><code><span
style='font-size:10.0pt'>module</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>', and is minimally defined by putting the keyword '</span><code><span
style='font-size:10.0pt'>model</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' (or '</span><code><span style='font-size:10.0pt'>module</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', if you like) and the name
you want to give the module at the beginning of the model definitions you wish
to encapsulate, and putting the keyword '</span><code><span style='font-size:
10.0pt'>end</span></code><span style='mso-fareast-font-family:"Times New Roman"'>'
at the end: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> example</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S + E -&gt; ES;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>After
this module is defined, it can be used as a part of another model (this is the
one time that order matters in Antimony). To import a module into another
module, simply use the name of the module, followed by parentheses: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> example</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S + E -&gt; ES;</pre><pre><span
class=GramE>end</span></pre><pre><span class=GramE>model</span> example2</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>example(</span>);</pre><pre><span class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
is usually not very helpful in and of itself-you'll likely want to give the
submodule a name so you can refer to the things inside it. To do this, prepend
a name followed by a colon: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> example2</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>example(</span>);</pre><pre><span class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Now,
you can modify or define elements in the submodule by referring to symbols in
the submodule by name, prepended with the name you've given the module,
followed by a '</span><code><span style='font-size:10.0pt'>.</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>': <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> example2</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>example(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S = 3;</pre><pre><span
class=GramE>end</span></pre>

<p>This results in a model with a single reaction (A.S + A.E -&gt; A.ES) and a
single initial condition (A.S = 3). </p>

<p>You may also import multiple copies of modules, and modules that themselves
contain submodules: </p>

<pre><span class=GramE>model</span> example3</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>example(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=GramE>example(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C: <span
class=GramE>example2(</span>);</pre><pre><span class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
would result in a model with three reactions and a single initial condition. <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S + A.E -&gt; A.ES</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.S + B.E -&gt; B.ES</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C.A.S + C.A.E -&gt; C.A.ES</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C.A.S = 3;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
can also use the species defined in submodules in new reactions: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> example4</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>example(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S -<span
class=GramE>&gt; ;</span> <span class=SpellE>kdeg</span>*A.S;</pre><pre><span
class=GramE>end</span></pre>

<p>When combining multiple submodules, you can also 'attach' them to each other
by declaring that a species in one submodule is the same species as is found in
a different submodule by using the '<code><span style='font-size:10.0pt'>is</span></code>'
keyword (&quot;A.S is B.S&quot;). For example, let's say that we have a species
which is known to bind reversibly to two different species. You could set this
up as the following: </p>

<pre><span class=GramE>model</span> <span class=SpellE>side_reaction</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S + E -&gt; SE; k1*<span
class=GramE>k2*</span>S*E - k2*ES;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S = 5;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E = 3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>SE = E+S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = 1.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = 0.4;</pre><pre><span
class=GramE>end</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> <span
class=SpellE>full_reaction</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S is B.S;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>If
you wanted, you could give the identical species a new name to more easily use
it in the '</span><span class=SpellE><code><span style='font-size:10.0pt'>full_reaction</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' module: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> <span
class=SpellE>full_reaction</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> species S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>()</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.S is S;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
this system, '</span><code><span style='font-size:10.0pt'>S</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' is involved in two reversible
reactions with exactly the same reaction kinetics and initial concentrations.
Let's now say the reaction rate of the second side-reaction takes the same
form, but that the kinetics are twice as fast, and the starting conditions are
different: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> <span
class=SpellE>full_reaction</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> species S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.k1 = 2.4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.k2 = 0.8;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.E = 10;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Note
that since we defined the initial concentration of '</span><code><span
style='font-size:10.0pt'>SE</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' as '</span><code><span style='font-size:10.0pt'>S + E</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', B.SE will now have a
different initial concentration, since B.E has been changed. <o:p></o:p></span></p>

<p>Finally, we add a third side reaction, one in which S binds irreversibly,
and where the complex it forms degrades. We'll need a new reaction rate, and a
whole new reaction as well: </p>

<pre><span class=GramE>model</span> <span class=SpellE>full_reaction</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> species S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.k1 = 2.4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.k2 = 0.8;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B.E = 10;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C.S is S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>C.J0 = C.k1*C.k2*S*C.E</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J3: C.SE -<span
class=GramE>&gt; ;</span> C.SE*k3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k3 = 0.02;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Note
that defining the reaction rate of C.J0 used the symbol '</span><code><span
style='font-size:10.0pt'>S</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>'; exactly the same result would be obtained if we had used
'</span><code><span style='font-size:10.0pt'>C.S</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' or even '</span><code><span
style='font-size:10.0pt'>A.S</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' or '</span><code><span style='font-size:10.0pt'>B.S</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>'. Antimony knows that those
symbols all refer to the same species, and will give them all the same name in
subsequent output. <o:p></o:p></span></p>

<p>For convenience and style, modules may define an interface where some
symbols in the module are more easily renamed. To do this, first enclose a list
of the symbols to export in parentheses after the name of the model when
defining it: </p>

<pre><span class=GramE>model</span> <span class=SpellE>side_reaction</span>(S, k1)</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S + E -&gt; SE; k1*<span
class=GramE>k2*</span>S*E - k2*ES;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S = 5;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E = 3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>SE = E+S;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = 1.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = 0.4;</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Then
when you use that module as a submodule, you can provide a list of new symbols
in parentheses: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>spec2, k2);</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>is</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> equivalent to writing: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre> <span style='mso-spacerun:yes'>&nbsp;</span>A: <span
class=SpellE>side_<span class=GramE>reaction</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.S is spec2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.k1 is <span
class=GramE>k2</span>;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>One
thing to be aware of when using this method: Since wrapping definitions in a
defined model is optional, all 'bare' declarations are defined to be in a
default module with the name '</span><code><span style='font-size:10.0pt'>__main</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>'. If there are no unwrapped
definitions, '</span><code><span style='font-size:10.0pt'>__main</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' will still exist, but will
be empty. <o:p></o:p></span></p>

<p>As a final note: use of the '<code><span style='font-size:10.0pt'>is</span></code>'
keyword is not restricted to elements inside submodules. As a result, if you
wish to change the name of an element (if, for example, you want the reactions
to look simpler in Antimony, but wish to have a more descriptive name in the
exported SBML), you may use '<code><span style='font-size:10.0pt'>is</span></code>'
as well: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>A -&gt; B;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A is ABA;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B is ABA8OH;</pre>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>is</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> equivalent to writing: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>ABA -&gt; ABA8OH;</pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Module conversion
factors<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Occasionally,
the unit system of a submodel will not match the unit system of the containing
model, for one or more model elements. In this case, you can use conversion
factor constructs to bring the submodule in line with the containing model. <o:p></o:p></span></p>

<p>If time is different in the submodel (affecting reactions, rate rules,
delay, and '<code><span style='font-size:10.0pt'>time</span></code>'), use the
'<span class=SpellE><code><span style='font-size:10.0pt'>timeconv</span></code></span>'
keyword when declaring the submodel: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1: <span
class=GramE>submodel(</span>), <span class=SpellE>timeconv</span>=60;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
construct means that one unit of time in the submodel multiplied by the time
conversion factor should equal one unit of time in the parent model. <o:p></o:p></span></p>

<p>Reaction extent may also be different in the submodel when compared to the
parent model, and may be converted with the '<span class=SpellE><code><span
style='font-size:10.0pt'>extentconv</span></code></span>' keyword: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1: <span
class=GramE>submodel(</span>), <span class=SpellE>extentconv</span>=1000;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
construct means that one unit of reaction extent in the submodel multiplied by
the extent conversion factor should equal one unit of reaction extent in the
parent model. <o:p></o:p></span></p>

<p><span class=GramE>Both time and extent conversion factors may be numbers (as
above) or</span> they may be references to constant parameters. They may also
both be used at once: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1: <span
class=GramE>submodel(</span>), <span class=SpellE>timeconv</span>=<span
class=SpellE>tconv</span>, <span class=SpellE>extentconv</span>=<span
class=SpellE>xconv</span>;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Individual
components of submodels may also be given conversion factors, when the '</span><code><span
style='font-size:10.0pt'>is</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword is used. The following two constructs are
equivalent ways of applying conversion factor '</span><span class=SpellE><code><span
style='font-size:10.0pt'>cf</span></code></span><span style='mso-fareast-font-family:
"Times New Roman"'>' to the synchronized variables '</span><code><span
style='font-size:10.0pt'>x</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' and '</span><code><span style='font-size:10.0pt'>A1.y</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>': <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1.y * <span
class=SpellE>cf</span> is x;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1.y is x / <span
class=SpellE>cf</span>;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>When
flattened, all of these conversion factors will be incorporated into the
mathematics. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Submodel deletions<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Sometimes,
an element of a submodel has to be removed entirely for the model to make sense
as a whole. A degradation reaction might need to be removed, for example, or a
now-superfluous species. To delete an element of a submodel, use the '</span><code><span
style='font-size:10.0pt'>delete</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>delete</span> A1.S1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
this case, '</span><code><span style='font-size:10.0pt'>S1</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' will be removed from
submodel A1, as will any reactions S1 participated in, plus any mathematical
formulas that had '</span><code><span style='font-size:10.0pt'>S1</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' in them. Similarly,
sometimes it is necessary to clear assignments and rules to a variable. To
accomplish this, simply declare a new assignment or rule for the variable, but
leave it blank: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>A1.S1<span style='mso-spacerun:yes'>&nbsp; </span>=</span> ;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>A1.S2 :</span>= ;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A1.S3' <span
class=GramE>= ;</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
will remove the appropriate initial assignment, assignment rule, or rate rule
(respectively) from the submodel. <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Constant and
variable symbols<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Some
models have 'boundary species' in their reactions, or species whose
concentrations do not change as a result of participating in a reaction. To
declare that a species is a boundary species, use the '</span><span
class=SpellE><code><span style='font-size:10.0pt'>const</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> S1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>While
you're declaring it, you may want to be more specific by using the '</span><code><span
style='font-size:10.0pt'>species</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> species S1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>If a
symbol appears as a participant in a reaction, Antimony will recognize that it
is a species automatically, so the use of the keyword '</span><code><span
style='font-size:10.0pt'>species</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' is not required. If, however, you have a species which
never appears in a reaction, you will need to use the '</span><code><span
style='font-size:10.0pt'>species</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword. <o:p></o:p></span></p>

<p>If you have several species that are all constant, you may declare this all
in one line: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> species S1, S2, S3;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>While
species are variable by default, you may also declare them so explicitly with
the '</span><span class=SpellE><code><span style='font-size:10.0pt'>var</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> species S4, S5, S6;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Alternatively,
you may declare a species to be a boundary species by prepending a '</span><code><span
style='font-size:10.0pt'>$</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' in front of it: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 + $E -&gt; ES;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
would set the level of '</span><code><span style='font-size:10.0pt'>E</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' to be constant. You can use
this symbol in declaration lists as well: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>species</span> S1, $S2, $S3, S4, S5, $S6;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
declares six species, three of which are variable (by default) and three of
which are constant. <o:p></o:p></span></p>

<p>Likewise, formulas are constant by default. They may be initialized with an
equals sign, with either a simple or a complex formula: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = 5;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = 2*S1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may also explicitly declare whether they are constant or variable: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> k1;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> k2;</pre>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>and</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> be more specific and declare
that both are formulas: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> formula k1;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> formula k2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Variables
defined with an equals sign are assigned those values at the start of the
simulation. In SBML terms, they use the 'Initial Assignment' values. If the
formula is to vary during the course of the simulation, use the Assignment Rule
(or Rate Rule) syntax, described later. <o:p></o:p></span></p>

<p>You can also mix-and-match your declarations however best suits what you
want to convey: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>species</span> S1, S2, S3, S4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>formula</span> k1, k2, k3, k4;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>S1, S4, k1, k3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>S2, S3, k2, k4;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Antimony
is a pure model definition language, meaning that all statements in the
language serve to build a static model of a dynamic biological system. Unlike <span
class=SpellE>Jarnac</span>, sequential programming techniques such as re-using
a variable for a new purpose will not work: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>pH</span> = 7;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = -<span
class=GramE>log10(</span>pH);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>pH</span> = 8.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = -<span
class=GramE>log10(</span>pH);</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In a
sequential programming language, the above would result in different values
being stored in k1 and <span class=GramE>k2</span>. (This is how <span
class=SpellE>Jarnac</span> works, for those familiar with that
language/simulation environment.) In a pure model definition language like
Antimony, '</span><code><span style='font-size:10.0pt'>pH</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', '</span><code><span
style='font-size:10.0pt'>k1</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>', '</span><code><span style='font-size:10.0pt'>k2</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', and even the formula '</span><code><span
style='font-size:10.0pt'>-log10(pH)</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' are static symbols that are being defined by Antimony
statements, and not processed in any way. A simulator that requests the
mathematical expression for k1 will receive the string '</span><code><span
style='font-size:10.0pt'>-<span class=GramE>log10(</span>pH)</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>'; the same string it will
receive for k2. A request for the mathematical expression for pH will receive
the string &quot;8.2&quot;, since that's the last definition found in the file.
As such, k1 and <span class=GramE>k2</span> will end up being identical. <o:p></o:p></span></p>

<p>As a side note, we considered having <span class=SpellE>libAntimony</span>
store a warning when presented with an input file such as the example above
with a later definition overwriting an earlier definition. However, there was
no way with our current interface to let the user know that a warning had been
saved, and it seemed like there could be a number of cases where the user might
legitimately want to override an earlier definition (such as when using
submodules, as we'll get to in a bit). So for now, the above is valid Antimony
input that just so happens to produce exactly the same output as: </p>

<pre><span style='mso-spacerun:yes'>&nbsp;</span><span style='mso-spacerun:yes'>&nbsp;</span><span
class=GramE>pH</span> = 8.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k1 = -<span
class=GramE>log10(</span>pH);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>k2 = -<span
class=GramE>log10(</span>pH);</pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Substance-only
species<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
SBML, species can be defined such that when their ID is used in math, that
symbol means either &#8216;the concentration of the species&#8217; or &#8216;the
amount of the species&#8217;.<span style='mso-spacerun:yes'>&nbsp; </span>In
Antimony, by default, a species symbol is defined as meaning its
concentration.<span style='mso-spacerun:yes'>&nbsp; </span>However, it can be
defined to mean the amount by using the &#8216;</span><span class=SpellE><span
style='font-size:10.0pt;font-family:"Courier New"'>substanceOnly</span></span><span
style='mso-fareast-font-family:"Times New Roman"'>&#8217; keyword:<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span><span class=SpellE><span
class=GramE>substanceOnly</span></span> species S1;<o:p></o:p></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Now,
whenever &#8216;S1&#8217; is used in the model, it is a reference to the
species amount, and not its concentration.<span style='mso-spacerun:yes'>&nbsp;
</span>Defining an initial amount is still accomplished with the same syntax:<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 = 2.5/C1;<o:p></o:p></pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Compartments<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>A
compartment is a demarcated region of space that contains species and has a
particular volume. In Antimony, you may ignore compartments altogether, and all
species are assumed to be members of a default compartment with the imaginative
name '</span><span class=SpellE><code><span style='font-size:10.0pt'>default_compartment</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' with a constant volume of
1. You may define other compartments by using the '</span><code><span
style='font-size:10.0pt'>compartment</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>compartment</span> comp1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Compartments
may also be variable or constant, and defined as such with '</span><span
class=SpellE><code><span style='font-size:10.0pt'>var</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' and '</span><span
class=SpellE><code><span style='font-size:10.0pt'>const</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>': <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> compartment comp1;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>var</span></span> compartment comp2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
volume of a compartment may be set with an '</span><code><span
style='font-size:10.0pt'>=</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' in the same manner as species and reaction rates: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>comp1 = 5;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>comp2 = 3*comp1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>To
declare that something is in a compartment, the '</span><code><span
style='font-size:10.0pt'>in</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword is used, either during declaration: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>compartment</span> comp1 in comp2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>const</span></span> species S1 in comp2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S2 in comp2;</pre>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>or</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> during assignment for reactions:
<o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0 in comp1: x -&gt; y; k1*x;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>y</span> -&gt; z; k2*y in comp2;</pre>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>or</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> submodules: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>M0 in comp2: <span
class=SpellE><span class=GramE>submod</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>submod2(y) in comp3;</pre>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>or</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> other variables: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1 in comp2 = 5;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Here
are Antimony's rules for determining which compartment something is in: <o:p></o:p></span></p>

<ul type=disc>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo3;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>If the symbol has been declared to be in a compartment,
     it is in that compartment.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo3;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>If not, if the symbol is in a </span><a href="#dna"><span
     style='mso-fareast-font-family:"Times New Roman"'>DNA strand</span></a><span
     style='mso-fareast-font-family:"Times New Roman"'> (see the next section)
     which has been declared to be in a compartment, it is in that compartment.
     If the symbol is in multiple DNA strands with conflicting compartments, it
     is in the compartment of the last declared DNA strand that has a declared
     compartment in the model.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo3;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>If not, if the symbol is a member of a reaction with a
     declared compartment, it is in that compartment. If the symbol is a member
     of multiple reactions with conflicting compartments, it is in the
     compartment of the last declared reaction that has a declared compartment.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo3;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>If not, if the symbol is a member of a submodule with a
     declared compartment, it is in that compartment. If the symbol is a member
     of multiple submodules with conflicting compartments, it is in the
     compartment of the last declared submodule that has a declared
     compartment.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l1 level1 lfo3;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>If not, the symbol is in the compartment '</span><span
     class=SpellE><code><span style='font-size:10.0pt'>default_compartment</span></code></span><span
     style='mso-fareast-font-family:"Times New Roman"'>', and is treated as
     having no declared compartment for the purposes of determining the
     compartments of other symbols.<o:p></o:p></span></li>
</ul>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Note
that declaring that one compartment is '</span><code><span style='font-size:
10.0pt'>in</span></code><span style='mso-fareast-font-family:"Times New Roman"'>'
a second compartment does not change the compartment of the symbols in the
first compartment: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>compartment</span> c1, c2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>species</span> s1 in c1, s2 in c1;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>c1</span> in c2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>yields</span></span><span
style='mso-fareast-font-family:"Times New Roman"'>: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>symbol</span><span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>compartment</pre><pre>s1<span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>c1</pre><pre>s2<span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>c1</pre><pre>c1<span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>c2</pre><pre>c2<span
style='mso-tab-count:2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=SpellE>default_compartment</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Compartments
may not be circular: &quot;c1 in c2; c2 in c3; c3 in c1&quot; is illegal. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Events<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Events
are discontinuities in model simulations that change the definitions of one or
more symbols at the moment when certain conditions apply. The condition is
expressed as a <span class=SpellE><span class=GramE>boolean</span></span>
formula, and the definition changes are expressed as assignments, using the
keyword '</span><code><span style='font-size:10.0pt'>at</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' and the following syntax: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>at</span>: variable1=formula1, variable2=formula2 [<span
class=SpellE>etc</span>];</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>such</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> as: <o:p></o:p></span></p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span><span class=GramE>at</span> (x&gt;5): y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may also give the event a name by prepending it with a colon: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at(x&gt;=5): y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>(<span
class=GramE>you</span> may also claim an event is '</span><code><span
style='font-size:10.0pt'>in</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' a compartment just like everything else ('</span><code><span
style='font-size:10.0pt'>E1 in comp1:</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>'). This declaration will never change the compartment of
anything else.) <o:p></o:p></span></p>

<p>In addition, there are a number of concepts in SBML events that can now be
encoded in Antimony. If event assignments are to occur after a delay, this can
be encoded by using the '<code><span style='font-size:10.0pt'>after</span></code>'
keyword: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at 2 after (x&gt;5): y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
means to wait two time units after x transitions from less than five to more
than five, then change y to 3 and x to r+2. The delay may also itself be a
formula: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at 2*z/y after (x&gt;5): y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>For
delayed events (and to a certain extent with simultaneous events, discussed
below), one needs to know what values to use when performing event assignments:
the values from the time the event was triggered, or the values from the time
the event assignments are being executed? By default (in Antimony, as in SBML
Level 2) the first holds true: event assignments are to use values from the
moment the event is triggered. To change this, the keyword '</span><span
class=SpellE><code><span style='font-size:10.0pt'>fromTrigger</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' is used: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at 2*z/y after (x&gt;5), <span
class=SpellE>fromTrigger</span>=false: y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may also declare '</span><span class=SpellE><code><span style='font-size:10.0pt'>fromTrigger</span></code></span><code><span
style='font-size:10.0pt'>=true</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' to explicitly declare what is the default. <o:p></o:p></span></p>

<p>New complications can arise when event assignments from multiple events are
to execute at the same time: which event assignments are to be executed first?
By default, there is no defined answer to this question: as long as both sets
of assignments are executed, either may be executed first. However, if the
model depends on a particular order of execution, events may be given
priorities, using the priority keyword: </p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at ((x&gt;5) &amp;&amp; (z5) &amp;&amp; (q&gt;7)), priority=0: y=5: x=r+6;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
situations where z7, and x<o:p></o:p></span></p>

<p>Another question is whether, if at the beginning of the simulation the
trigger condition is '<code><span style='font-size:10.0pt'>true</span></code>',
it should be considered to have just transitioned to being true or not. The
default is no, meaning that no event may trigger at time 0. You may override
this default by using the '<code><span style='font-size:10.0pt'>t0</span></code>'
keyword: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at (x&gt;5)), t0=false: y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
this situation, the value at t0 is considered to be false, meaning it can
immediately transition to true if x is greater than 5, triggering the event.
You may explicitly state the default by using '</span><code><span
style='font-size:10.0pt'>t0 = true</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>'. <o:p></o:p></span></p>

<p>Finally, a different class of events is often modeled in some situations
where the trigger condition must persist in being true from the entire time
between when the event is triggered to when it is executed. By default, this is
not the case for Antimony events, and, once triggered, all events will execute.
To change the class of your event, use the keyword '<code><span
style='font-size:10.0pt'>persistent</span></code>': </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>E1: at 3 after (x&gt;5)), persistent=true: y=3, x=r+2;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>For
this model, x must be greater than 5 for three seconds before executing its
event assignments: if x dips below 5 during that time, the event will not fire.
To explicitly declare the default situation, use '</span><code><span
style='font-size:10.0pt'>persistent=false</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>'. <o:p></o:p></span></p>

<p>The ability to change the default priority, t0, and persistent
characteristics of events was introduced in SBML Level 3, so if you translate
your model to SBML Level 2, it will lose the ability to define functionality
other than the default. For more details about the interpretation of these
event classifications, see the SBML Level 3 specification. </p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Assignment Rules<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
some models, species and/or variables change in a manner not described by a
reaction. When a variable receives a new value at every point in the model,
this can be expressed in an assignment rule, which in Antimony is formulated
with a '</span><code><span style='font-size:10.0pt'>:=</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' as: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp; </span><span
class=SpellE><span class=GramE>Ptot</span></span><span class=GramE> :=</span> P1 + P2 + PE;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
this example, '</span><span class=SpellE><code><span style='font-size:10.0pt'>Ptot</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>' will continually be updated
to reflect the total amount of '</span><code><span style='font-size:10.0pt'>P</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' present in the model. <o:p></o:p></span></p>

<p>Each symbol (species or formula) may have only one assignment rule
associated with it. If an Antimony file defines more than one rule, only the
last will be saved. </p>

<p>When species are used as the target of an assignment rule, they are defined
to be 'boundary species' and thus '<span class=SpellE><code><span
style='font-size:10.0pt'>const</span></code></span>'. Antimony doesn't have a
separate syntax for boundary species whose concentrations never change vs.
boundary species whose concentrations change due to assignment rules (or rate
rules, below). SBML distinguishes between boundary species that may change and
boundary species that may not, but in Antimony, all boundary species may change
as the result of being in an Assignment Rule or Rate Rule. </p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Rate Rules<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Rate
rules define the change in a symbol's value over time instead of defining its
new value. In this sense, they are similar to reaction rate kinetics, but
without an explicit stoichiometry of change. These may be modeled in Antimony
by appending an apostrophe to the name of the symbol, and using an equals sign
to define the rate: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S1' <span
class=GramE>=<span style='mso-spacerun:yes'>&nbsp; </span>V1</span>*(1 - S1)/(K1 + (1 - S1)) - V2*S1/(K2 + S1)</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Note
that unlike initializations and assignment rules, formulas in rate rules may be
self-referential, either directly or indirectly. <o:p></o:p></span></p>

<p>Any symbol may have only one rate rule or assignment rule associated with
it. Should it find more than one, only the last will be saved. </p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Display Names<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>When
some tools visualize models, they make a distinction between the '</span><code><span
style='font-size:10.0pt'>id</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' of an element, which must be unique to the model and which
must conform to certain naming conventions, and the 'name' of an element, which
does not have to be unique and which has much less stringent naming
requirements. In Antimony, it is the id of elements which is used everywhere.
However, you may also set the 'display name' of an element by using the '</span><code><span
style='font-size:10.0pt'>is</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' keyword and putting the name in quotes: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A.k1 is &quot;reaction rate k1&quot;;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>S34<span style='mso-spacerun:yes'>&nbsp; </span>is</span> &quot;Ethyl Alcohol&quot;;</pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Comments<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Comments
in Antimony can be made on one line with </span><code><span style='font-size:
10.0pt'>//[comments]</span></code><span style='mso-fareast-font-family:"Times New Roman"'>,
or on multiple lines with </span><code><span style='font-size:10.0pt'>/*&nbsp;[comments]&nbsp;*/</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>.<span
style='mso-spacerun:yes'>&nbsp; </span>You may also use python-style comments
with </span><span class=GramE><code><span style='font-size:10.0pt'>#[</span></code></span><code><span
style='font-size:10.0pt'>comments]</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>.<o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>/* <span
class=GramE>The</span> following initializations were</pre><pre><span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=GramE>taken</span> from the literature */</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>X=3; //Taken from <span
class=SpellE>Galdziki</span>, et al.</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>Y=4; //Taken from Rutherford, et al.</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>Z=5; # A python comment.</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Comments
are not translated to SBML or <span class=SpellE>CellML</span>, and will be
lost if round-tripped through those languages. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Units<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>As
of version 2.4 of Antimony, units may now be created and translated to SBML
(but not <span class=SpellE>CellML</span>, yet). Units may be created by using
the '</span><code><span style='font-size:10.0pt'>unit</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> substance = 1e-6 mole;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> hour = 3600 seconds;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Adding
<span class=GramE>an 's'</span> to the end of a unit name to make it plural is
fine when defining a unit: '</span><code><span style='font-size:10.0pt'>3600
second</span></code><span style='mso-fareast-font-family:"Times New Roman"'>'
is the same as '</span><code><span style='font-size:10.0pt'>3600 seconds</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>'. Compound units may be
created by using formulas with '</span><code><span style='font-size:10.0pt'>*</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', '</span><code><span
style='font-size:10.0pt'>/</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>', and '</span><code><span style='font-size:10.0pt'>^</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>'. However, you must use base
units when doing so ('base units' defined as those listed in Table 2 of the
SBML Level 3 Version 1 specification, which mostly are SI and SI-derived
units). <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> micromole = 10e-6 mole / liter;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> <span class=SpellE>daily_feeding</span> = 1 item / 86400 seconds</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> voltage = 1000 grams * meters^2 / seconds^-3 * ampere^-1</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may use units when defining formulas using the same syntax as above: any number
may be given a unit by writing the name of the unit after the number. When
defining a symbol (of any numerical type: species, parameter, compartment,
etc.), you can either use the same technique to give it an initial value and a
unit, or you may just define its units by using the 'has' keyword: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>unit</span> foo = 100 mole/5 liter;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>x = 40 foo/3 seconds; //'40' now has units of 'foo' and '3' units of 'seconds'.</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>y = 3.3 foo;<span style='mso-spacerun:yes'>&nbsp;&nbsp; </span>// 'y' is given units of 'foo' and an initial value of '3.3'.</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>z</span> has foo;<span style='mso-spacerun:yes'>&nbsp;&nbsp;&nbsp;&nbsp; </span>// 'z' is given units of 'foo'.</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Antimony
does not calculate any derived units: in the above example, 'x' is fully
defined in terms of moles per liter per second, but it is not annotated as
such. <o:p></o:p></span></p>

<p>As with many things in Antimony, you may use a unit before defining it: '<code><span
style='font-size:10.0pt'>x = 10 ml</span></code>' will create a parameter <code><span
style='font-size:10.0pt'>x</span></code> and a unit '<code><span
style='font-size:10.0pt'>ml</span></code>'. </p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>DNA Strands<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>A
new concept in Antimony that has not been modeled explicitly in previous model
definition languages such as SBML is the idea of having DNA strands where
downstream elements can inherit reaction rates from upstream elements. DNA strands
are declared by connecting symbols with '</span><code><span style='font-size:
10.0pt'>--</span></code><span style='mso-fareast-font-family:"Times New Roman"'>':
<o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>--P1--G1--stop--P2--G2--</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
can also give the strand a name: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1: --P1--G1--</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>By
default, the reaction rate or formula associated with an element of a DNA
strand is equal to the reaction rate or formula of the element upstream of it
in the strand. Thus, if P1 is a promoter and G1 is a gene, in the model: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1: --P1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P1 = S1*k;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>G1: -&gt; prot1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>the</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> reaction rate of G1 will be
&quot;S1*k&quot;. <o:p></o:p></span></p>

<p>It is also possible to modulate the inherited reaction rate. To do this, we
use ellipses ('...') as shorthand for 'the formula for the element upstream of
me'. Let's add a ribosome binding site that increases the rate of production of
protein by a factor of three, and say that the promoter actually increases the
rate of protein production by S1*k instead of setting it to S1*k: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1: --P1--RBS1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P1 = S1*k + ...;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>RBS1 = ...*3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>G1: -&gt; prot1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Since
in this model, nothing is upstream of P1, the upstream rate is set to zero, so
the final reaction rate of G1 is equal to &quot;(S1*k + 0)*3&quot;. <o:p></o:p></span></p>

<p>Valid elements of DNA strands include formulas (operators), reactions
(genes), and other DNA strands. Let's wrap our model so far in a submodule, and
then use the strand in a new strand: </p>

<pre><span class=GramE>model</span> strand1()</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1: --P1--RBS1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P1 = S1*k + ...;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>RBS1 = ...*3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>G1: -&gt; prot1;</pre><pre><span
class=GramE>end</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> <span
class=SpellE>fullstrand</span>()</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>strand1(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=SpellE><span class=GramE>fulldna</span></span>:<span style='mso-spacerun:yes'>&nbsp; </span>P2--A.dna1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P2 = S2*<span
class=GramE>k2</span>;</pre><pre><span class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
the model '</span><span class=SpellE><code><span style='font-size:10.0pt'>fullstrand</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>', the reaction that produces
A.prot1 is equal to &quot;((A.S1*<span class=SpellE>A.k</span><span
class=GramE>+(</span>S2*k2))*3)&quot;. <o:p></o:p></span></p>

<p>Operators and genes may be duplicated and appear in multiple strands: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1:<span style='mso-spacerun:yes'>&nbsp; </span>--P1--RBS1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna2:<span style='mso-spacerun:yes'>&nbsp; </span>P2--dna1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna3:<span style='mso-spacerun:yes'>&nbsp; </span>P2--RBS2--G1</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Strands,
however, count as unique constructs, and may only appear as singletons or
within a single other strand (and may not, of course, exist in a loop, being
contained in a strand that it itself contains). <o:p></o:p></span></p>

<p>If the reaction rate or formula for any duplicated symbol is left at the
default or if it contains ellipses explicitly ('...'), it will be equal to the
sum of all reaction rates in all the strands in which it appears. If we further
define our above model: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>dna1:<span style='mso-spacerun:yes'>&nbsp; </span>--P1--RBS1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna2:<span style='mso-spacerun:yes'>&nbsp; </span>P2--dna1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>dna3:<span style='mso-spacerun:yes'>&nbsp; </span>P2--RBS2--G1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P1 = ...+0.3;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P2 = ...+1.2;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>RBS1 = ...*0.8;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>RBS2 = ...*1.1;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>G1: -&gt; prot1;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
reaction rate for the production of '</span><code><span style='font-size:10.0pt'>prot1</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' will be equal to
&quot;(((0+1.2<span class=GramE>)+</span>0.3)*0.8) + (((0+1.2)*1.1))&quot;. If
you set the reaction rate of G1 without using an ellipsis, but include it in
multiple strands, its reaction rate will be a multiple of the number of strands
it is a part of. For example, if you set the reaction rate of G1 above to
&quot;k1*S1&quot;, and include it in two strands, the net reaction rate will be
&quot;k1*S1 + k1*S1&quot;. <o:p></o:p></span></p>

<p>The purpose of prepending or <span class=SpellE>postfixing</span> a '<code><span
style='font-size:10.0pt'>--</span></code>' to a strand is to declare that the
strand in question is designed to have DNA attached to it at that end. If
exactly one DNA strand is defined with an upstream '<code><span
style='font-size:10.0pt'>--</span></code>' in its definition in a submodule,
the name of that module may be used as a proxy for that strand when creating
attaching something upstream of it, and <span class=SpellE>visa</span> versa
with a defined downstream '<code><span style='font-size:10.0pt'>--</span></code>'
in its definition: </p>

<pre><span class=GramE>model</span> <span class=SpellE>twostrands</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>--P1--RBS1--G1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P2--RBS2--G2--</pre><pre><span
class=GramE>end</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> long</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE><span class=GramE>twostrands</span></span><span class=GramE>(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P3--A</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A--G3</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
module '</span><code><span style='font-size:10.0pt'>long</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' will have two strands:
&quot;P3--A.P1--A.RBS1--A.G1&quot; and &quot;A.P2--A.RBS2--A.G2--G3&quot;. <o:p></o:p></span></p>

<p>Submodule strands intended to be used in the middle of other strands should
be defined with '<code><span style='font-size:10.0pt'>--</span></code>' both
upstream and downstream of the strand in question: </p>

<pre><span class=GramE>model</span> <span class=SpellE>oneexported</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>--P1--RBS1--G1--</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P2--RBS2--G2</pre><pre><span
class=GramE>end</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>model</span> full</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=SpellE><span class=GramE>oneexported</span></span><span class=GramE>()</span></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>P2--A--stop</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>If
multiple strands are defined with upstream or downstream &quot;--&quot; marks,
it is illegal to use the name of the module containing them as proxy. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Interactions<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Some
species act as activators or repressors of reactions that they do not actively
participate in. Typical models do not bother mentioning this explicitly, as it
will show up in the reaction rates. However, for visualization purposes and/or
for cases where the reaction rates might not be known explicitly, you may
declare these interactions using the same format as reactions, using different
symbols instead of &quot; &gt;&quot;: for activations, use &quot;-o&quot;; for
inhibitions, use &quot;-|&quot;, and for unknown interactions or for
interactions which sometimes activate and sometimes inhibit, use &quot;&#8209;(&quot;:
<o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; SE;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>i1: S2 -| J0;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>i2: S3 -o J0;</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>i3: S4 <span
class=GramE>-(</span> J0;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>If a
reaction rate is given for the reaction in question, that reaction must include
the species listed as interacting with that reaction. This, then, is legal: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>J0: S1 + E -&gt; SE; k1*S1*E/S2</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>i1: S2 -| J0;</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>because</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> the species S2 is present in
the formula &quot;k1*S1*E/S2&quot;. If the concentration of an inhibitory
species increases, it should decrease the reaction rate of the reaction it
inhibits, and vice versa for activating species. The current version of <span
class=SpellE>libAntimony</span> (v2.4) does not check this, but future versions
may add the check. <o:p></o:p></span></p>

<p>When the reaction rate is not known, species from interactions will be added
to the SBML '<span class=SpellE>listOfModifiers</span>' for the reaction in
question. Normally, the kinetic law is <span class=SpellE>parsed</span> by <span
class=SpellE>libAntimony</span> and any species there are added to the list of
modifiers automatically, but if there is no kinetic law to parse, this is how
to add species to that list. </p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Function
Definitions<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>You
may create user-defined functions in a similar fashion to the way you create
modules, and then use these functions in Antimony equations. These functions
must be basic single equations, and act in a similar manner to macro
expansions. As an example, you might define the quadratic equation and use it
in a later equation as follows: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>function</span> quadratic(x, a, b, c)</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span><span
class=GramE>a*</span>x^2 + b*x + c</pre><pre><span class=GramE>end</span></pre><pre><o:p>&nbsp;</o:p></pre><pre><span
class=GramE>model</span> quad1</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>S3 = <span
class=GramE>quadratic(</span>s1, k1, k2, k3);</pre><pre><span class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>This
effectively defines S3 to have the equation &quot;k1*s1^2 + <span class=GramE>k2*</span>s1
+ k3&quot;. <o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
addition, there are several built-in functions defined in Antimony.<span
style='mso-spacerun:yes'>&nbsp; </span>All of the functions present in the
MathML subset used in SBML Level 3 are likewise defined here, and include:<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>abs,
and, <span class=SpellE>arccos</span>, <span class=SpellE>arccosh</span>, <span
class=SpellE>arccot</span>, <span class=SpellE>arccoth</span>, <span
class=SpellE>arccsc</span>, <span class=SpellE>arccsch</span>, <span
class=SpellE>arcsec</span>, <span class=SpellE>arcsech</span>, <span
class=SpellE>arcsin</span>, <span class=SpellE>arcsinh</span>, <span
class=SpellE>arctan</span>, <span class=SpellE>arctanh</span>, ceiling, cos, <span
class=SpellE>cosh</span>, cot, <span class=SpellE>coth</span>, <span
class=SpellE>csc</span>, <span class=SpellE>csch</span>, divide, <span
class=SpellE>eq</span>, <span class=SpellE>exp</span>, factorial, floor, <span
class=SpellE>geq</span>, <span class=SpellE>gt</span>, <span class=SpellE>leq</span>,
ln, log, <span class=SpellE>lt</span>, minus, <span class=SpellE>neq</span>,
not, or, piecewise, plus, power, root, sec, <span class=SpellE>sech</span>,
sin, <span class=SpellE>sinh</span>, tan, <span class=SpellE>tanh</span>,
times, and <span class=SpellE>xor</span>.<span style='mso-spacerun:yes'>&nbsp;
</span>In addition, the constants true, false, <span class=SpellE>notanumber</span>,
pi, <span class=SpellE><span class=GramE>avogadro</span></span>, infinity, and <span
class=SpellE>exponentiale</span> are all allowed.<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>As
of Antimony v2.6, the following distributions are also allowed, and will be
added to the translated SBML file if used:<span style='mso-spacerun:yes'>&nbsp;
</span>normal(mean, <span class=SpellE>stddev</span>), <span class=SpellE>truncatedNormal</span>(mean,
<span class=SpellE>stddev</span>, min, max), uniform(min, max), exponential(rate),
<span class=SpellE>truncatedExponential</span>(rate, min, max), gamma(shape,
scale), <span class=SpellE>truncatedGamma</span>(shape, scale, min, max), <span
class=SpellE>poisson</span>(rate), and <span class=SpellE>truncatedPoisson</span>(rate,
min, max).<span style='mso-spacerun:yes'>&nbsp; </span>The
&#8216;truncated&#8217; forms of all functions allow one to define inclusive
boundaries, meaning that the returned value must fall between the min and the
max values given.<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Flux Balance
Constraints<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
some models, reaction rates are not known specifically, but one can place
certain constraints on those reactions, and then apply an objective function
(such as &#8216;maximize growth&#8217;) to try to discern a likely set of
reaction rates.<span style='mso-spacerun:yes'>&nbsp; </span>In SBML, the
package that lets you define these constraints and objective functions is known
as the &#8216;Flux Balance Constraints&#8217; package.<span
style='mso-spacerun:yes'>&nbsp; </span>As of v2.8.0 of Antimony, these
constraints can now be defined in Antimony as well, using equalities and
inequalities &#8216;&lt;&#8217;, &#8216;&gt;&#8217;, &#8216;&lt;=&#8217;, &#8216;&gt;=&#8217;,
and &#8216;==&#8217;.<span style='mso-spacerun:yes'>&nbsp; </span>If we assume
that all &#8216;J&#8217; variables are reactions, the following definitions are
all Flux Balance constraints:<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<pre>0 &lt;= J0</pre><pre>J1 &lt;= 1000</pre><pre>-10 &lt;= J2 &lt;= 10</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Constraints
that do not involve the ID of a reaction by itself will be translated as core
SBML constraints.<span style='mso-spacerun:yes'>&nbsp; </span>(Flux Balance
constraints are also translated as core constraints, for consistency.)<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
objective function is defined using either the keyword &#8216;maximize&#8217;
or &#8216;minimize&#8217;.<span style='mso-spacerun:yes'>&nbsp; </span>It may
be named by prepending the statement with that name, followed by a colon:<o:p></o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<pre><span class=GramE>maximize</span> J1<o:p></o:p></pre><pre>obj1: minimize J2<o:p></o:p></pre>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Other files<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>More
than one file may be used to define a set of modules in Antimony through the
use of the '</span><code><span style='font-size:10.0pt'>import</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' keyword. At any point in
the file outside of a module definition, use the word '</span><code><span
style='font-size:10.0pt'>import</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' followed by the name of the file in quotation marks, and
Antimony will include the modules defined in that file as if they had been cut
and pasted into your file at that point. SBML files may also be included in
this way: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span class=GramE>import</span> &quot;models1.txt&quot;</pre><pre><span
class=GramE>import</span> &quot;oscli.xml&quot;</pre><pre><o:p>&nbsp;</o:p></pre><pre><span
class=GramE>model</span> mod2()</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>A: <span
class=GramE>mod1(</span>);</pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>B: <span
class=SpellE><span class=GramE>oscli</span></span><span class=GramE>(</span>);</pre><pre><span
class=GramE>end</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>In
this example, the file '</span><code><span style='font-size:10.0pt'>models1.txt</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' is an Antimony file that
defines the module '</span><code><span style='font-size:10.0pt'>mod1</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>', and the file '</span><code><span
style='font-size:10.0pt'>oscli.xml</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' is an SBML file that defines a model named '</span><span
class=SpellE><code><span style='font-size:10.0pt'>oscli</span></code></span><span
style='mso-fareast-font-family:"Times New Roman"'>'. The Antimony module '</span><code><span
style='font-size:10.0pt'>mod2</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' may then use modules from either or both of the other
imported files. <o:p></o:p></span></p>

<p>Remember that imported files act like they were cut and pasted into the main
file. As such, any bare declarations in the main file and in the imported files
will all contribute to the default '<code><span style='font-size:10.0pt'>__main</span></code>'
module. Most SBML files will not contribute to this module, unless the name of
the model in the file is '<code><span style='font-size:10.0pt'>__main</span></code>'
(for example, if it was created by the antimony converter). </p>

<p>By default, <span class=SpellE>libantimony</span> will examine the '<code><span
style='font-size:10.0pt'>import</span></code>' text to determine whether it is
a relative or absolute filename, and, if relative, will prepend the directory
of the working file to the import text before attempting to load the file. If
it cannot find it there, it is possible to tell the <span class=SpellE>libantimony</span>
API to look in different directories for files loaded from import statements. </p>

<p>However, if the working directory contains <span class=GramE>a</span> '<code><span
style='font-size:10.0pt'>.antimony</span></code>' file, or if one of the named
directories contains a '<code><span style='font-size:10.0pt'>.antimony</span></code>'
file, import statements can be subverted. Each line of this file must contain
three tab-delimited strings: the name of the file which contains an import
statement, the text of the import statement, and the filename where the program
should look for the file. Thus, if a file &quot;file1.txt&quot; contains the
line '<code><span style='font-size:10.0pt'>import &quot;file2.txt&quot;</span></code>',
and <span class=GramE>a</span> .antimony file is discovered with the line: </p>

<pre>file1.txt<span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>file2.txt<span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>antimony/import/file2.txt</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>the</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> library will attempt to load
'</span><code><span style='font-size:10.0pt'>antimony/import/file2.txt</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' instead of looking for '</span><code><span
style='font-size:10.0pt'>file2.txt</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' directly. For creating files in-memory or when reading antimony
models from strings, the first string may either be left out, or you may use
the keyword &quot;&lt;MAIN&gt;&quot;: <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>file2.txt<span
style='mso-tab-count:1'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>antimony/import/file2.txt</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>The
first and third entries may be relative filenames: the directory of the
.antimony file itself will be added internally when determining the file's
actual location. The second entry must be exactly as it appears in the first
file's '</span><code><span style='font-size:10.0pt'>import</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' directive, between the
quotation marks. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Importing and
Exporting Antimony Models<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>Once
you have created an Antimony file, you can convert it to SBML or <span
class=SpellE>CellML</span> using '<span class=SpellE>sbtranslate</span>' or the
'<span class=SpellE>QTAntimony</span>' visual editor (both available from
http://antimony.sourceforge.net/) This will convert each of the models defined
in the Antimony text file into a separate SBML model, including the overall '</span><code><span
style='font-size:10.0pt'>__main</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' module (if it contains anything). These files can then be
used for simulation or visualization in other programs. <o:p></o:p></span></p>

<p><span class=SpellE>QTAntimony</span> can be used to edit and translate
Antimony, SBML, and <span class=SpellE>CellML</span> models. Any file in those
three formats can be opened, and from the 'View' menu, you can turn on or off
the SBML and <span class=SpellE>CellML</span> tabs. Select the tabs to
translate and view the working model in those different formats. </p>

<p>The SBML tabs can additionally be configured to use the <a
href="http://sbml.org/Community/Wiki/SBML_Level_3_Proposals/Hierarchical_Model_Composition">'Hierarchical
Model Composition'</a> package constructs. Select 'Edit/Flatten SBML tab(s)' or
hit control-F to toggle between this version and the old 'flattened' version of
SBML. (To enable this feature if you compile Antimony yourself, you will need
the latest versions of <span class=SpellE>libSBML</span> with the SBML 'comp'
package enabled, and to select 'WITH_COMP_SBML' from the <span class=SpellE>CMake</span>
menu.) </p>

<p>As there were now several different file formats available for translation,
the old command-line translators still exist (antimony2sbml; sbml2antimony),
but have been supplanted by the new '<span class=SpellE>sbtranslate</span>'
executable. Instructions for use are available by running <span class=SpellE>sbtranslate</span>
from the command line, but in brief: any number of files to translate may be
added to the command line, and the desired output format is given with the '<code><span
style='font-size:10.0pt'>-o</span></code>' flag: '<code><span style='font-size:
10.0pt'>-o antimony</span></code>', '<code><span style='font-size:10.0pt'>-o <span
class=SpellE>sbml</span></span></code>', '<code><span style='font-size:10.0pt'>-o
<span class=SpellE>cellml</span></span></code>', or '<code><span
style='font-size:10.0pt'>-o <span class=SpellE>sbml</span>-comp</span></code>'
(the last to output files with the SBML '<code><span style='font-size:10.0pt'>comp</span></code>'
package constructs). Examples: </p>

<pre><span style='mso-spacerun:yes'>&nbsp; </span>sbtranslate.exe model1.txt model2.txt -o <span
class=SpellE>sbml</span></pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>will</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> create one flattened SBML
file for the main model in the two Antimony files in the working directory.
Each file will be of the format &quot;[prefix].xml&quot;, where [prefix] is the
original filename with '</span><code><span style='font-size:10.0pt'>.txt</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' removed (if present). <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>sbtranslate.exe oscli.xml ffn.xml -o antimony</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>will</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> output two files in the
working directory: '</span><code><span style='font-size:10.0pt'>oscli.txt</span></code><span
style='mso-fareast-font-family:"Times New Roman"'>' and '</span><code><span
style='font-size:10.0pt'>ffn.txt</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' (in the antimony format). <o:p></o:p></span></p>

<pre><o:p>&nbsp;</o:p></pre><pre><span style='mso-spacerun:yes'>&nbsp; </span>sbtranslate.exe model1.txt -o <span
class=SpellE>sbml</span>-comp</pre>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span style='mso-fareast-font-family:"Times New Roman"'>will</span></span><span
style='mso-fareast-font-family:"Times New Roman"'> output '</span><code><span
style='font-size:10.0pt'>model1.xml</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' in the working directory, containing all models in the '</span><code><span
style='font-size:10.0pt'>model1.txt</span></code><span style='mso-fareast-font-family:
"Times New Roman"'>' file, using the SBML '</span><code><span style='font-size:
10.0pt'>comp</span></code><span style='mso-fareast-font-family:"Times New Roman"'>'
package. <o:p></o:p></span></p>

<h3><span style='mso-fareast-font-family:"Times New Roman"'>Appendix:
Converting between SBML and Antimony<o:p></o:p></span></h3>

<p class=MsoNormal><span style='mso-fareast-font-family:"Times New Roman"'>For
reference, here are some of the differences you will see when converting models
between SBML and Antimony: <o:p></o:p></span></p>

<ul type=disc>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Local parameters in SBML reactions become global
     parameters in Antimony, with the reaction name prepended. If a different
     symbol already has the new name, a number is appended to the variable name
     so it will be unique. These do not get converted back to local parameters
     when converting Antimony back to SBML.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Algebraic rules in SBML disappear in Antimony.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Any element with <span class=GramE>both a value (or</span>
     an initial amount/concentration for species) and an initial assignment in
     SBML will have only the initial assignment in Antimony.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Stoichiometry math in SBML disappears in Antimony.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>All '</span><code><span style='font-size:10.0pt'>constant=true</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' species in SBML are
     set '</span><span class=SpellE><code><span style='font-size:10.0pt'>const</span></code></span><span
     style='mso-fareast-font-family:"Times New Roman"'>' in Antimony, even if
     that same species is set boundary=false.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>All '</span><code><span style='font-size:10.0pt'>boundary=true</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' species in SBML are
     set '</span><span class=SpellE><code><span style='font-size:10.0pt'>const</span></code></span><span
     style='mso-fareast-font-family:"Times New Roman"'>' in Antimony, even if
     that same species is set constant=false.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Boundary ('<span class=SpellE>const</span>') species in
     Antimony are set boundary=true and constant=false in SBML.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Variable ('<span class=SpellE>var</span>') species in
     Antimony are set boundary=false and constant=false in SBML. <o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Modules in Antimony are flattened in SBML (unless you
     use the '</span><code><span style='font-size:10.0pt'>comp</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' option).<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>DNA strands in Antimony disappear in SBML.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>DNA elements in Antimony no longer retain the ellipses
     syntax in SBML, but the effective reaction rates and assignment rules
     should be accurate, even for elements appearing in multiple DNA strands.
     These reaction rates and assignment rules will be the sum of the rate at
     all duplicate elements within the DNA strands.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Any symbol with the MathML <span class=SpellE>csymbol</span>
     '</span><code><span style='font-size:10.0pt'>time</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' in SBML becomes '</span><code><span
     style='font-size:10.0pt'>time</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>' in Antimony.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Any formula with the symbol '</span><code><span
     style='font-size:10.0pt'>time</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>' in it in Antimony will become the MathML <span
     class=SpellE>csymbol</span> '</span><code><span style='font-size:10.0pt'>time</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' in in SBML.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>The MathML <span class=SpellE>csymbol</span> '</span><code><span
     style='font-size:10.0pt'>delay</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>' in SBML disappears in Antimony.<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>Any SBML version 2 level 1 function with the MathML <span
     class=SpellE>csymbol</span> '</span><code><span style='font-size:10.0pt'>time</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' in it will become a
     local variable with the name '</span><span class=SpellE><code><span
     style='font-size:10.0pt'>time_ref</span></code></span><span
     style='mso-fareast-font-family:"Times New Roman"'>' in Antimony. This '</span><span
     class=SpellE><code><span style='font-size:10.0pt'>time_ref</span></code></span><span
     style='mso-fareast-font-family:"Times New Roman"'>' is added to the
     function's interface (as the last in the list of symbols), and any uses of
     the function are modified to use '</span><code><span style='font-size:
     10.0pt'>time</span></code><span style='mso-fareast-font-family:"Times New Roman"'>'
     in the call. In other words, a function &quot;function(x, y): <span
     class=SpellE>x+y</span>*time&quot; becomes &quot;function(x, y, <span
     class=SpellE>time_ref</span>): x + y*<span class=SpellE>time_ref</span>&quot;,
     and formulas that use &quot;function(A, B)&quot; become &quot;function(A,
     B, time)&quot;<o:p></o:p></span></li>
 <li class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
     mso-list:l3 level1 lfo4;tab-stops:list .5in'><span style='mso-fareast-font-family:
     "Times New Roman"'>A variety of Antimony keywords, if found in SBML models
     as IDs, are renamed to add an appended '</span><code><span
     style='font-size:10.0pt'>_</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>'. So the ID '</span><code><span style='font-size:10.0pt'>compartment</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' becomes '</span><code><span
     style='font-size:10.0pt'>compartment_</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>', '</span><code><span style='font-size:10.0pt'>model</span></code><span
     style='mso-fareast-font-family:"Times New Roman"'>' becomes '</span><code><span
     style='font-size:10.0pt'>model_</span></code><span style='mso-fareast-font-family:
     "Times New Roman"'>', etc.<o:p></o:p></span></li>
</ul>

</div>

</body>

</html>
